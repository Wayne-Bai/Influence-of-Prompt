false || ACK

This patch adds the of_device_id in MODULE_DEVICE_TABLE for the ipmi module. This fix allows for autoloading of ipmi modules when using device tree. The change has been moved up into the CONFIG_OF section to account for changes to the probing code.

The addition of MODULE_DEVICE_TABLE(of, of_ipmi_match) ensures that the ipmi module is correctly matched with the device tree, enabling proper autoloading.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch is a simple cleanup of the timeout and transport error messages in the s390/dasd driver. The patch updates the wording of the messages to be more consistent with other messages in the codebase. The changes are purely cosmetic and do not affect the functionality of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the bcmgenet driver where the dev_id argument passed to free_irq() is different from the one used in request_irq(). This can cause a warning in kernel/irq/manage.c:__free_irq().

The patch correctly updates the dev_id argument in the call to free_irq() to use the 'priv' variable instead of 'dev'. This ensures that the correct dev_id is used and avoids the warning.

The patch also includes the Fixes tag, which references the commit that introduced the issue.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a public declaration for the function gb_interface_destroy() in the interface.h header file. The function is currently not used outside of the interface.c file, but it is possible that it could be used in the future. The scope of the function is currently public, so it makes sense to have a public declaration for it.

The patch has been reviewed and signed-off by multiple developers, including Alex Elder and Bryan O'Donoghue. It has also been signed-off by Greg Kroah-Hartman, who is a well-known maintainer of the Linux kernel.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for the z13 architecture in the s390/facilities code. It checks if the kernel is configured for z13 and if so, it adds the necessary facility definitions for the load-and-zero-rightmost-byte and load/store-on-condition facility 2 instructions.

The patch is signed-off by Heiko Carstens and Martin Schwidefsky, who are both from IBM, which indicates that it has been reviewed and tested by experts in the field.

Since this patch adds support for a specific architecture and does not modify existing code, it is safe to include in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. 

The patch adds a check in the nfs_compare_remount_data() function to reject remount attempts that change the NFS version or minor version. This is important because changing the NFS version or minor version during a remount can lead to inconsistent behavior and potential data corruption.

The patch also updates the nfs_remount() function to set the NFS version and minor version in the remount data structure. This ensures that the correct version and minor version are used when remounting the NFS filesystem.

Overall, this patch improves the stability and reliability of NFS remounts by preventing version and minor version changes. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a sparse error by copying the channel type into a temporary buffer before accessing it. This ensures that the code will work for architectures that don't support MMIO. The patch also updates the comparison of the type GUID to use the copied value instead of accessing __iomem directly.

The changes in the patch are correct and necessary to fix the sparse error and ensure compatibility with architectures that don't support MMIO. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds helpful debug messages using BT_DBG to the functions l2cap_sock_shutdown() and __l2cap_wait_ack() in the file net/bluetooth/l2cap_sock.c. These debug messages provide information about the code flow and can be useful for analysis and debugging purposes.

The addition of these debug messages does not introduce any new functionality or change the behavior of the code. It only adds logging statements to aid in understanding the code flow.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch moves the duplicated callback functions from the codec driver to the component driver. This improves code organization and eliminates the need for the quick-hack of copying functions from the codec side to the component side during register timing.

The changes in the patch are straightforward and do not introduce any new functionality or potential issues. The patch has been reviewed and signed-off by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a build warning when building the driver with CONFIG_PM_SLEEP not selected. The warning is about a function, tegra_kbc_set_keypress_interrupt, being defined but not used. The patch removes the function definition and also removes the call to the function in the tegra_kbc_suspend function, which is only used when CONFIG_PM_SLEEP is selected.

The patch is a clean fix for the build warning and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for QSPI pin groups in the sh-pfc driver for the r8a7791 SoC. The QSPI function set consists of three groups: qspi_ctrl, qspi_data2, and qspi_data4. These groups define the pins and their corresponding mux settings for the QSPI functionality.

The patch adds the necessary pin and mux arrays for the QSPI groups, as well as the corresponding pinmux groups and functions. This allows the QSPI pins to be properly configured and used by the system.

Based on the information provided, there doesn't seem to be any issues or potential conflicts with this patch. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch removes the reliance on CONFIG_MEMORY_START for the memory base address in the ARM shmobile architecture. Instead, it introduces a new macro MEMORY_START in the board header files to specify the memory base address for each romImage board. This change is necessary for ARCH_MULTIPLATFORM.

By removing the reliance on CONFIG_MEMORY_START, the code becomes more modular and allows for better customization for different board configurations. This change also improves code readability and maintainability.

The patch has been reviewed and signed-off by Magnus Damm and Simon Horman, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the usage of the physical address type in the lirc_bt829 driver. It replaces the usage of "unsigned long" with "phys_addr_t" for the variable "pci_addr_phys". Additionally, it updates the log format from "%08X" to "%pa" for printing the physical address.

The change to "phys_addr_t" ensures that the correct type is used for physical addresses, which can vary depending on the architecture. The updated log format ensures that the physical address is printed correctly.

The patch has been reviewed by Fabio Estevam and signed-off by Ben Hutchings and Mauro Carvalho Chehab, indicating that it has been reviewed and tested by multiple developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the function 'zynq_platform_cpu_die' to 'zynq_cpu_die' in the ARM zynq platform code. The new name follows the naming pattern of all other SMP operations in the codebase. The patch also updates the function documentation to reflect the new name.

The change is a simple renaming and does not introduce any functional changes. It improves code readability and consistency. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the QP reference counting mechanism in the IB/qib driver to use the standard refcount wrapper. This change improves code maintainability. The patch has been reviewed and signed-off by multiple developers, including the original author and maintainers of the driver.

The changes in the patch are straightforward and do not introduce any new functionality or behavior. They simply replace the existing atomic_inc and atomic_dec_and_test calls with the rvt_get_qp and rvt_put_qp functions, respectively.

Overall, this patch is a clean and necessary improvement to the codebase. It should be accepted in Linux -stable releases.
false || ACK

This patch introduces the function "dpm_for_each_dev" which allows iterating over devices in the dpm_list. This function is useful for the firmware loader to cache firmware images for devices before system sleep. The patch also includes the necessary header file changes.

The patch has been reported by Fengguang Wu and signed-off by Ming Lei and Greg Kroah-Hartman. It has also been reviewed and signed-off by the appropriate maintainers.

Overall, the patch seems to be well-implemented and addresses a specific need. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch enables DMA for SDHI0 in the ARM shmobile platform. It passes the HPB-DMA slave IDs in the SDHI0 platform data to enable DMA in the SDHI driver. The patch also includes the necessary changes to the sdhi0_info structure to set the dma_slave_tx and dma_slave_rx fields to HPBDMA_SLAVE_SDHI0_TX and HPBDMA_SLAVE_SDHI0_RX respectively.

Enabling DMA for SDHI0 can improve the performance of SD card operations on the shmobile platform. The patch is well-documented and has been reviewed and signed-off by multiple developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch simplifies the code by using variables instead of directly accessing the structure members. It also improves readability by using shorter variable names. The functionality of the code remains the same. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the Btrfs file system to use bigger metadata chunks on bigger filesystems. The current chunk size of 256MB is considered small for huge filesystems, so this patch scales up the chunk size.

The patch checks the size of the filesystem and if it is larger than 50GB, it sets the maximum stripe size to 1GB. Otherwise, it sets the maximum stripe size to 256MB.

This change is beneficial for larger filesystems as it allows for more efficient allocation of metadata chunks. It does not introduce any new risks or regressions and is a straightforward improvement to the Btrfs file system.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Based on the provided patch, it appears that the check for a NULL bh (buffer head) is unnecessary. The comment in the patch states that BH can not be NULL at this point, and the function ext4_read_dirblock() always returns a non-null value. Additionally, all necessary checks have already been done.

Therefore, removing the check for a NULL bh is safe and will not introduce any issues. The patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the ath9k_hw_reset() function in the ath9k driver to program the OBS register only when MCI (Memory Controller Interface) is disabled. This change ensures that the OBS register is not programmed when MCI is enabled, which could potentially cause issues.

The patch adds a check using the ath9k_hw_mci_is_enabled() function to determine if MCI is enabled. If MCI is disabled, the patch proceeds to write the value 8 to the AR_OBS register.

This change is a safe and necessary modification to prevent potential issues when MCI is enabled. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. It replaces the xgifb_epllcd_crt1 table with two different tables, xgifb_epllcd_crt1_h and xgifb_epllcd_crt1_v, which will make further cleanups easier. The patch also updates the XGI_GetLcdPtr function to use the new tables based on the value of tempbx. This change improves code readability and maintainability. Additionally, the patch includes the necessary changes in the vb_table.h file to define the new tables. Overall, this patch is a clean and necessary improvement to the staging xgifb driver.
false || ACK

This patch adds DT defines for co-processor reset lines in the ARM STi platform. It includes the definitions for the ST231 audio, DMU, and general-purpose reset lines. These definitions are necessary for proper device initialization and control.

The patch has been signed-off by two contributors, indicating that it has been reviewed and tested. The changes are also specific to the STi platform, so they should not affect other architectures.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a sparse warning in the tuntap driver by making the tun_enable_queue() function static. The patch has been reported by Fengguang Wu and signed-off by Jason Wang and David S. Miller. Making the function static resolves the sparse warning and does not introduce any new issues. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch removes two obsolete fields, "reghost_enabled" and "needs_reghost", from the autofs_sb_info structure in the autofs4 module. These fields were left over from a previous commit that removed unused ioctls.

The removal of these fields does not affect the functionality of the autofs module and is a clean-up of unused code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch fixes a bug in the brcmsmac driver related to DMA on SoCs. It reverts a commit that removed unused bus code from softmac. The patch adds an offset for PCIe devices with DMA64 bus, but this offset is not needed when running on an SoC. The patch checks if the hosttype is BCMA_HOSTTYPE_PCI before adding the offset, ensuring that it is only added for PCIe devices. This fix is necessary to prevent incorrect behavior when running on SoCs. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. It simplifies the ath9k driver by using PCI Express Capability access functions. The patch replaces the manual reading and writing of PCI configuration registers with the use of the pcie_capability_clear_word and pcie_capability_read_word functions, which improves code readability and maintainability. The patch also handles the case where Bluetooth coexistence requires disabling ASPM, ensuring that both upstream and downstream PCIe components have the same ASPM settings. Overall, this patch improves the efficiency and reliability of the ath9k driver.
false || ACK

This patch adds a small inline wrapper for the device_tx_status callback of a dma device. This wrapper function makes the source code of users of this function more compact and legible. It replaces the existing code with a simpler and more readable version.

The patch has been reviewed and Acked-by Vinod Koul <vinod.koul@linux.intel.com>, which indicates that it has been reviewed and approved by a recognized expert in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a check for the port in the infoframe_enabled function in the drm/i915/vlv driver. It ensures that the port matches the value obtained from the VIDEO_DIP_PORT_MASK register before enabling the infoframe. This is a necessary check to ensure that the infoframe is only enabled for the correct port.

The patch has been reviewed and signed-off by multiple developers, including Jesse Barnes, Rodrigo Vivi, and Daniel Vetter. It also includes a clear and concise commit message.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the sch_generic.c file in the net directory of the Linux kernel. It introduces a new condition to handle the IFF_NO_QUEUE flag as an alternative to tx_queue_len being zero.

The patch has been reviewed and Acked-by Jesper Dangaard Brouer, indicating that it has been reviewed and approved by a trusted developer.

The patch itself adds a check for the IFF_NO_QUEUE flag in two places: in the attach_one_default_qdisc() function and in the attach_default_qdiscs() function. If the flag is set, the default qdisc is not attached to the device.

This change is beneficial as it allows for more flexibility in handling the tx_queue_len parameter. It provides an alternative way to disable the default qdisc without relying solely on the tx_queue_len being zero.

Therefore, based on the provided information, I would recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch switches the driver to use the module_platform_driver macro, which is the recommended way to register and unregister platform drivers in the Linux kernel. This change improves code readability and maintainability. Additionally, the patch does not introduce any new functionality or modify existing behavior, making it a safe and straightforward change. Therefore, it is suitable for inclusion in Linux -stable releases.
false || ACK

The patch removes redundant "break" statements after "goto" statements in the max77686_clk_probe() function. These "break" statements are unnecessary and can be safely removed. The patch has been reviewed and Acked-by two developers, Sachin Kamat and Jonghwa Lee. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a potential issue in the r8712u driver where the dev_alloc_skb() and skb_clone() calls are not checked for failure. By adding the necessary error checking, the driver can handle allocation failures gracefully.

The dev_alloc_skb() call is used to allocate a new skb for releasing to the upper layer. If the allocation fails, the patch breaks out of the loop, indicating a failure. This ensures that the driver does not proceed with potentially invalid memory.

Similarly, the skb_clone() call is used to clone the received skb. If the cloning fails, the patch returns _FAIL, indicating a failure. This prevents the driver from using a potentially corrupted skb.

Overall, this patch improves the robustness of the r8712u driver by properly handling allocation failures. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch makes the function 'hp_amp_power_on' static, which means it can only be accessed within the same file. Since the function is only used in this file, making it static improves code encapsulation and reduces the risk of accidental misuse or conflicts with other functions in the codebase. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch converts the control initialization in the ASoC ak4642 codec driver to a table-based approach. This change improves error handling and reduces code duplication. The patch also correctly sets the controls and their number for the ak4648 codec driver.

Overall, this patch improves the code structure and enhances error handling, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch is a trivial fix that adds a missing newline character (\n) to the end of dev_err messages in the s390/dasd driver. The dev_err messages are currently missing a newline character, which can make the log output less readable. By adding the newline character, the log output will be properly formatted.

The patch has been signed-off by two developers, Colin Ian King and Martin Schwidefsky, indicating that it has been reviewed and tested. The change itself is straightforward and does not introduce any new functionality or risk of regression.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the code in the hns driver to use fwnode_handle instead of device_node for device identification. The change is necessary because device_node is only used in the DT case, and fwnode_handle provides a more uniform and suitable method.

The patch updates the __ae_match() function to compare the fwnode_handle instead of the device_node. It also updates the find_ae() function to take a fwnode_handle parameter instead of a device_node parameter. The hnae_get_handle() function is also updated to take a fwnode_handle parameter instead of a device_node parameter.

In addition, the hns_nic_dev_probe() function is updated to use the fwnode_handle instead of the device_node for the ae-handle property.

Overall, this patch improves the code by using a more uniform and suitable method for device identification. It should be accepted in Linux -stable releases.
false || ACK

The patch removes an unnecessary check for NULL return value from ip6_route_output() function. The comment in the patch states that ip6_route_output() will never return a NULL pointer, so the check is not needed. The patch also removes the check for dst == NULL, as it is redundant. The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch updates the clocksource driver for the sh_tmu platform to use the clockevents_config_and_register() function instead of the deprecated clockevents_register_device() function. The clockevents_config_and_register() function is now the recommended way to configure and register a clock event device.

The patch also removes the TODO comment and the calculation of the shift and mult values, as these are now handled by the clockevents_config() function. The min_delta_ns value is also removed, as it is not used.

Overall, this patch improves the code by using the recommended functions and removing unnecessary calculations. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch replaces the custom event handler functions adis16209_data_rdy_trig_poll() and adis16240_data_rdy_trig_poll() with the generic function iio_trigger_generic_data_rdy_poll(). This change improves code maintainability and reduces code duplication. The patch also includes the necessary changes in the adis16209_probe_trigger() and adis16240_probe_trigger() functions to use the new generic function. The patch has been reviewed and Acked-by Lars-Peter Clausen, indicating that it has been reviewed and approved by another developer. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

The patch fixes an uninitialized variable warning in the ath9k_has_tx_pending() function. The variable 'npend' is now properly initialized to 0 before being used in the for loop. This ensures that the variable is always initialized and avoids any potential issues caused by using an uninitialized variable.

The patch has been reviewed and Acked-by Felix Fietkau, indicating that it has been tested and approved by another developer. This adds further confidence in the patch's correctness.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the calibration_delay_done() function and its implementation. This function allows architectures to stop accepting registrations for new timer-based delay functions. The patch also includes the necessary documentation and updates the calibrate_delay() function to call calibration_delay_done().

The patch has been reviewed and Acked-by Russell King, an experienced kernel developer. Therefore, it can be considered a valid addition to the Linux -stable releases.
false || ACK

This patch modifies the i2c-brcmstb.c driver to use the new 8-bit address helper function instead of manually calculating the address. The patch has been reviewed by Andy Shevchenko and signed-off by Wolfram Sang.

The change simplifies the code by using the i2c_8bit_addr_from_msg() function to calculate the address. This improves code readability and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning: The patch removes an unused variable 'neigh' from the dn_output() function in the decnet code. The variable is assigned to but not used anywhere else in the function. Removing the unused variable improves code readability and reduces unnecessary clutter. The patch also does not introduce any new issues or risks. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for VB2_DMABUF in the davinci vpbe driver. VB2_DMABUF is a buffer sharing mechanism that allows sharing video buffers between different subsystems using DMA-BUF framework. This can improve performance and reduce memory copies.

The patch modifies the io_modes field of the buffer queue structure to include VB2_DMABUF. This enables the driver to support buffer sharing using DMA-BUF.

Since this patch adds a new feature and does not modify existing functionality, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the ext4 filesystem code by replacing the manual swapping of memory with the use of the swap() macro defined in kernel.h. This change improves code readability and maintainability.

The patch has been reviewed and signed-off by the original author and a maintainer of the ext4 filesystem code.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch makes the following changes:
- Removes the superfluous address-of ('&') operators.
- Removes the unneeded casts and uses %p to format pointers instead.

These changes improve the code readability and remove unnecessary operations. The patch also includes proper sign-offs from the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch modifies the ioctl function in the radio-bcm2048 driver to use unlocked_ioctl instead. The reason for this change is that the driver already handles its own locking, so there is no need to use the ioctl function. The patch has been reviewed and Acked by Pali Rohár, indicating that it has been tested and approved. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch modifies the f2fs file system code by replacing the constant PIDVEC_SIZE with the parameter max_items. This change allows for more flexibility in the code and makes it easier to adjust the maximum number of items in the results array.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch removes the unnecessary check for (oa->o_valid & OBD_MD_FLID) == 0 before setting lsm->lsm_oi. The condition (oa->o_valid & OBD_MD_FLID) is always true after the previous check, so there is no point in checking it again. The patch simplifies the code and improves its readability without affecting its functionality. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes unused #defines in the IOAT driver code. These #defines are related to PCI Vendor, PCI Subvendor, etc for PCI_VENDOR_ID_INTEL, but they are never used in the code. Removing them will clean up the code and reduce unnecessary clutter. Since these #defines are not used, their removal will not have any impact on the functionality of the driver. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch replaces the usage of `device_schedule_callback()` with `device_remove_file_self()` in the `sdev_store_delete()` function. This change makes the "delete" behavior synchronous, as desired. The patch also removes the `sdev_store_delete_callback()` function, which is no longer needed. Overall, the patch simplifies the code and improves the behavior. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes an unnecessary forward declaration in the musb_core.c file of the USB MUSB driver. It does not introduce any functional changes but only cleans up the code.

The patch has been tested by Bin Liu and signed-off by Felipe Balbi, who is the maintainer of the MUSB driver.

Since this patch only involves code cleanup and has been tested, it can be considered safe to include in Linux -stable releases.
false || ACK

This patch introduces a local variable "handle" in the acpi_pci_root_add() function for economy of expression. The patch splits out from acpi_handle_printk() changes and is signed-off by Jiang Liu and Bjorn Helgaas.

The patch replaces all occurrences of "device->handle" with the local variable "handle" in the acpi_pci_root_add() function. This improves code readability and reduces the number of times "device->handle" needs to be accessed.

The patch also improves error handling by checking the return value of acpi_evaluate_integer() and try_get_root_bridge_busnr() functions using the local variable "handle" instead of "device->handle".

Overall, this patch improves code readability and error handling without introducing any new functionality or breaking existing functionality. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a missing platform_device_put() function call in the error path of raumfeld_audio_init(). The platform_device_put() function is used to release the reference to the platform device when it is no longer needed. Without this call, there is a potential resource leak.

The patch has been reviewed and Acked-by two other developers, Daniel Mack and Liam Girdwood, indicating that they have reviewed and approved the patch.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds interrupt resources for the McASPs in the ARM Davinci DM646x platform. The interrupts can be used for error recovery. The patch adds two interrupt resources for each McASP, one for transmit (tx) and one for receive (rx). The interrupts are defined with their respective IRQ numbers.

The patch is signed-off by two developers from Texas Instruments, who are responsible for maintaining the Davinci platform.

Based on the information provided, the patch appears to be a valid and necessary addition to the ARM Davinci DM646x platform. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the ASoC simple-card driver where the DAPM route mapping is not being parsed correctly. The patch adds a check to see if the "simple-audio-routing" property is present in the device tree node, and if so, it calls the function to parse the audio routing. This ensures that the DAPM routes are correctly parsed when the property is present.

The patch has been reviewed and signed-off by Xiubo Li and Mark Brown, who are both recognized contributors to the Linux kernel.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch fixes inconsistent indenting in the i915_error_state_to_str() function in the i915_gpu_error.c file. The patch correctly aligns the offset += 16 statement with the previous line of code. This improves code readability and maintains consistent coding style. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds an option to skip the synchronization of the CPU cache for DMA operations in the arch/avr32 folder. The patch ensures consistent behavior across all DMA APIs in the arch/arm folder.

The patch modifies the avr32_dma_map_page() and avr32_dma_map_sg() functions to check for the DMA_ATTR_SKIP_CPU_SYNC attribute before calling dma_cache_sync(). If the attribute is set, the synchronization is skipped.

The patch has been reviewed and Acked-by Hans-Christian Noren Egtvedt. It has also been signed-off by Alexander Duyck, Andrew Morton, and Linus Torvalds.

Based on the provided information, the patch appears to be a valid improvement to ensure consistent behavior in the arch/avr32 folder. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code in the staging/comedi/drivers/amplc_pci230.c file by replacing a complex calculation with the DIV_ROUND_UP macro. The macro simplifies the divisor calculations and makes the code more readable. The patch also includes proper sign-offs from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the PCTV 340eSE board to the dib0700 driver in the Linux kernel. It includes the necessary changes to the dib0700_devices.c and dvb-usb-ids.h files.

The patch adds the USB device ID for the PCTV 340eSE to the dib0700_usb_id_table, allowing the driver to recognize and handle this device. It also adds the device description for the PCTV 340eSE to the dib0700_devices array, providing the necessary information for the driver to initialize and configure the device.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and is ready for inclusion in the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the code in the rcar-du driver to explicitly select the DISP signal for the DISP pin, instead of using the DE signal. This change makes it clearer that the DISP pin outputs the DISP signal.

The patch is signed-off by the author and the code changes are straightforward and do not introduce any new functionality or potential issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch moves the IRQ handler function to the i2c section, which resolves the issue of a 'defined but not used' warning when CONFIG_BQ27XXX_I2C is not enabled. The patch also includes the necessary changes to update the IRQ handler function's location and dependencies. The patch has been reviewed and Acked by multiple individuals, including the original author and maintainers of the code. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes the indentation in the struct amdgpu_ring in the amdgpu.h file. The changes are purely cosmetic and do not affect the functionality of the code. The patch has been reviewed by multiple developers from AMD and has been signed-off by them. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch adds a check of the status_code in the ERSP_IU structure in the nvme_fc_fcpio_done function. This check ensures that the status_code is not zero, indicating a successful completion of the command. If the status_code is zero, it indicates an error and the function returns -EIO.

The patch has been reviewed by multiple developers and has their Reviewed-by tags. It also has the Signed-off-by tags from the authors.

Based on the analysis, it appears that this patch is necessary to handle error cases correctly in the nvme_fc driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the cxgb3 driver in the Linux kernel to use the net_device_stats structure from the struct net_device instead of a private copy in the struct port_info. This change improves code clarity and reduces duplication.

The patch is signed-off by Tobias Klauser and David S. Miller, indicating that it has been reviewed and tested. The Cc field also includes Santosh Raspatur, suggesting that the relevant parties have been notified.

The modification itself is straightforward and does not introduce any new functionality or potential issues. It simply replaces the usage of the private netstats structure with the stats field of the net_device structure.

Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

The patch fixes a bug where the return value of the function ipmmu_iommu_init() is ignored. The patch modifies the ipmmu_probe() function to return the value of ipmmu_iommu_init() instead of always returning 0. This ensures that any potential errors during the initialization of the ipmmu IOMMU are properly handled.

By accepting this patch, we can prevent potential issues caused by ignoring the return value of ipmmu_iommu_init() and improve the overall stability of the Linux kernel.
false || ACK

This patch modifies the Btrfs file system code to use REQ_META for all metadata IO. This change is necessary to avoid priority inversion when using io throttling cqroups. The patch adds an additional parameter "rw" to the __extent_read_full_page function and uses it to pass the appropriate flags to the submit_extent_page and submit_one_bio functions. It also modifies the write_one_eb, extent_readpages, and read_extent_buffer_pages functions to pass the REQ_META flag when calling the __extent_read_full_page and submit_one_bio functions.

The patch appears to be well-written and addresses a specific issue related to metadata IO in the Btrfs file system. It does not introduce any new functionality or change existing behavior. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds initial support for the GP104 chipset in the Nouveau driver. It includes the necessary changes to the nvkm_device_chip structure to support the GP104 chipset. The addition of the "mc" field with the "gp100_mc_new" value indicates that the GP104 chipset will use the GP100 memory controller.

Based on the provided information, this patch appears to be a valid addition to the Linux kernel. It adds support for a new chipset, which can improve compatibility and functionality for users with GP104-based graphics cards. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a necessary distinction between i.MX23 and i.MX28 SoC variants in order to make the touchscreen work on i.MX23. It introduces a new field "soc" in the "struct mxs_lradc" to store the SoC variant. This distinction is important for proper functionality of the touchscreen on i.MX23.

The patch has been tested and reviewed by multiple individuals, including Marek Vasut, Lothar Waßmann, and Jonathan Cameron. It has also been signed-off by Juergen Beisert and Jonathan Cameron.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the amdgpu driver related to the default UVD context size. The patch changes the initialization of the "min_ctx_size" variable to set it to the maximum possible value (~0) instead of 0. This ensures that the context buffers are denied by default, as intended.

The patch has been reviewed by multiple developers from AMD and has been signed-off by them. Therefore, it can be considered reliable and suitable for inclusion in Linux -stable releases.
false || ACK

This patch adds more register documentation for the ARM shmobile rcar-gen2 platform. It provides additional information about the boot address registers, reset control registers, and on-chip RAM. It also includes a helper function to convert physical addresses to the SBAR value.

The patch improves the clarity and understanding of the code, making it easier for developers to work with and maintain. It does not introduce any functional changes or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
- The patch is signed-off by multiple developers, indicating that it has been reviewed and approved by them.
- The patch addresses a specific bug (#1899532) and provides a workaround for it.
- The patch adds a new definition and uses it to enable a specific feature (GEN8_CENTROID_PIXEL_OPT_DIS) in the hardware.
- The patch includes a warning to only enable the feature when using preliminary hardware support.
- The patch includes a comment to indicate that some workarounds may only apply to pre-production hardware.
- The patch does not introduce any new code or modify existing code, it only adds a new definition and uses it.
- The patch is specific to the "bdw" (Broadwell) platform.

Based on these factors, it seems that the patch is well-tested, addresses a specific bug, and does not introduce any new risks or regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning: The patch removes an unused macro, dbgu_readl(), from the ARM at91 code. Removing unused code improves code cleanliness and reduces potential confusion for developers. Since the macro is not being used, its removal does not affect the functionality of the code. Therefore, accepting this patch in Linux -stable releases is recommended.
false || ACK

This patch introduces the define DEBUG_UART_SHIFT, which removes the need for the variable "shift" in all functions in uncompress.h. The patch also includes the necessary changes to use DEBUG_UART_SHIFT in the putc and arch_decomp_setup functions.

The patch has been reviewed and tested by multiple developers, including Doug Anderson, who has provided his Acked-by and Tested-by tags.

The changes introduced by this patch are straightforward and do not introduce any new functionality or potential issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes unnecessary casting from 'void *' to 'struct netxeth_platform_data *'. The casting is unnecessary because casting from 'void *' to any pointer type is automatic. The patch has been reported by Sergei Shtylyov and signed-off by Jingoo Han and David S. Miller. The change is a simple and straightforward fix that improves code readability and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes an unnecessary "&" operation from the code. The change is simple and does not introduce any new functionality or potential issues. It has also been reviewed and Acked-by Greg Kroah-Hartman, who is a trusted maintainer. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch adds exit code defines to the kselftest framework, allowing tests to use these defines directly instead of hardcoding the return codes. This improves code readability and maintainability. The patch also enables harnesses and other tooling to use the defines, further enhancing the usability of the framework.

The patch has been reviewed by several maintainers and experts in the field, including Shuah Khan, Ingo Molnar, Peter Zijlstra, Thomas Gleixner, Davidlohr Bueso, and KOSAKI Motohiro. It has also been signed-off by Darren Hart and Shuah Khan.

Overall, this patch is a straightforward and beneficial addition to the kselftest framework. Therefore, I recommend accepting it in Linux -stable releases.
false || ACK

This patch modifies the drm/edid module to give a real name to the est3 mode struct. It also changes the type of the est3_modes array to use a struct minimode instead of an anonymous struct. This change ensures that the extra modes inferred from ranges have the same type.

The patch has been reviewed by multiple developers and has been tested by Takashi Iwai. It does not introduce any new functionality or behavior, but rather improves the code structure and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue with the initialization of the 5/10MHz channel width on the ar9003 chip in the ath9k driver. The patch moves the call to ath9k_hw_set_rfmode() after ath9k_hw_process_ini() to avoid overwriting the AR_PHY_MODE register with default values.

The patch has been reviewed and signed-off by Lorenzo Bianconi and John W. Linville, who are both recognized contributors to the Linux kernel.

Based on the provided information, it appears that the patch addresses a specific issue and has been reviewed by experts in the field. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a suspicious RCU usage warning in the net_sched module. The warning indicates that there is a potential issue with how RCU is being used in the code. The patch modifies the code to use rcu_dereference_bh instead of rcu_dereference, which is the correct function to use in this context.

The patch has been reviewed and Acked by John Fastabend, who is a recognized expert in the field. This adds credibility to the patch and suggests that it has been thoroughly reviewed.

Therefore, based on the information provided, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the display of the "cache" option in /proc/mounts for CIFS filesystems. It deprecates the separate display of "strictcache", "forcedirectio", and "fsc" options. The patch has been reviewed and signed-off by Jeff Layton and Pavel Shilovsky.

The addition of the "cache" option provides more clarity and consistency in displaying the mount options for CIFS filesystems. It allows users to easily see the caching behavior of the filesystem.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a message to be printed when firmware fails to be requested in the case of platform data being used. It also distinguishes between the error messages of the device tree and platform data cases.

The patch is a simple and straightforward improvement to the code, providing better error reporting and making it easier to debug issues related to firmware requests. It does not introduce any new functionality or change the behavior of the code.

The patch has been reviewed and Acked-by Sascha Hauer, indicating that it has already been reviewed and approved by another developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a potential kernel panic that can occur during boot when a recovery is queued for a stopped hardware. The patch verifies that the wl->state is on before queuing a new recovery, preventing the panic from happening.

The patch has been reviewed and signed-off by multiple developers, indicating that it has gone through the necessary review process.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a new function `dce_v10_0_check_soft_reset` to the `dce_v10_0_ip_funcs` structure in the `dce_v10_0.c` file of the AMDGPU driver. This function checks if the display is hung and updates the `hang` flag in the `ip_block_status` structure accordingly.

The addition of this function is necessary for proper handling of soft resets in the DCE (Display Core Engine) version 10.0. It ensures that the soft reset is only performed when the display is hung, preventing unnecessary resets and improving system stability.

The patch has been reviewed by Christian König and signed-off by Chunming Zhou and Alex Deucher, who are all recognized contributors to the AMDGPU driver.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch constifies the drm_proc_list[] array and related pointers in the drm_proc.c file. Constifying these variables ensures that they cannot be modified, which can help prevent accidental modifications and improve code safety.

The patch also updates the function signatures of drm_proc_create_files() and drm_proc_remove_files() to take const pointers to the drm_info_list[] array. This change is appropriate because these functions do not modify the array, so the const qualifier accurately reflects their behavior.

Overall, this patch improves code safety and correctness by constifying variables and updating function signatures appropriately. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch modifies the wacom_raw_event function in the hid-wacom.c file. The patch moves the check for tablet reports specific to Wacom Graphire tablets inside the case statement for USB_DEVICE_ID_WACOM_GRAPHIRE_BLUETOOTH. This ensures that the check is only performed for Graphire tablets and not for other devices like Intuos4 WL tablets. If the report does not start with 0x03, an error message is printed and the function returns 0.

The patch has been reviewed and Acked-by Ping Cheng from Wacom, indicating that it has been reviewed and approved by a relevant expert. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a null pointer dereference issue in the staging/lustre/lnet/klnds/socklnd/socklnd.c file. The issue is identified by the Klocwork Insight tool and the patch provides a fix for it.

The patch adds a null pointer check for the 'best_iface' variable at line 832 to prevent it from being dereferenced when it is null. Additionally, it adds a comment to clarify that the 'best_iface' variable is expected to be non-null at this point in the code.

The patch has been reviewed by multiple developers from Intel and has been signed-off by them. It also includes a link to the Intel bug report related to this issue.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases to fix the null pointer dereference issue in the staging/lustre/lnet/klnds/socklnd/socklnd.c file.
false || ACK

This patch adds a call to the tpic2810_set function in the tpic2810_direction_output function. This ensures that the proper output level is set when the direction is set to output. The patch also includes the necessary header file inclusion and function declaration.

Overall, this patch improves the functionality of the tpic2810 driver by ensuring that the output level is set correctly. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the netfilter ipset code where the function ipset_nest_end() was being called needlessly in the error path. The patch removes the unnecessary calls to ipset_nest_end() and moves them to the correct location in the code.

The patch has been suggested by Pablo Neira Ayuso and signed-off by Jozsef Kadlecsik, who are both recognized contributors to the Linux kernel.

The changes in the patch are localized to the netfilter/ipset directory, specifically in the files ip_set_bitmap_gen.h, ip_set_hash_gen.h, and ip_set_list_set.c. The changes involve removing the ipset_nest_end() calls from the error path and placing them in the correct location.

Based on the analysis, the patch appears to be a valid fix for the bug and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the acpi_power_meter driver that causes the kernel to crash when it encounters unexpected events or internal implementation errors. The patch replaces the BUG() macro with the WARN() macro, which allows the kernel to continue running instead of crashing.

By replacing the BUG() macro with the WARN() macro, the patch ensures that the unexpected events or implementation errors are logged as warnings instead of causing a kernel crash. This is a safer and more stable behavior for the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the target_core_device.c file in the Linux kernel to make virtual_lun0 a nullio device. The nullio device is a special type of device that does not expect any read or write operations. This change is made by initializing the 'buf' variable with the value "rd_pages=8,rd_nullio=1" instead of using memset and sprintf to set it to "rd_pages=8".

The patch appears to be a valid and reasonable change. It improves the code by simplifying the initialization of the 'buf' variable and makes the intention of making virtual_lun0 a nullio device clearer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes a redundant assignment for gpio->da9052 in the da9052_gpio_probe function. The assignment is done twice in the original code, which is unnecessary. Removing the redundant assignment improves code clarity and efficiency. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch staticizes the symbols 'ab8500_alternate_functions' and 'ab8500_gpio_irq_cluster' in the pinctrl-ab8500.c file. These symbols are only used within this file, so making them static is a good practice to avoid potential conflicts with other symbols in the kernel. The patch also includes the necessary changes to make these symbols static. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for setting the rotation property of a plane from userspace. It defines the ->set_property hook for the planes and sets it to drm_atomic_helper_plane_set_property(). This allows the rotation property to be set using DRM_IOCTL_MODE_OBJ_SETPROPERTY.

The patch also includes the necessary functions for updating, disabling, destroying, resetting, and duplicating the plane state.

Overall, this patch adds important functionality to the DRM subsystem and should be accepted in Linux -stable releases.
false || ACK

This patch fixes two return values in the greybus audio_apbridgea driver. The patch replaces the use of -ENOSYS with -EOPNOTSUPP for the two stub operations. The use of -ENOSYS is reserved for missing syscalls, so it is more appropriate to use -EOPNOTSUPP in this case.

The patch has been reviewed and signed-off by Johan Hovold and Viresh Kumar. It has also been signed-off by Greg Kroah-Hartman, who is a well-known maintainer in the Linux kernel community.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for Qualcomm's PTM v1.1 peripheral ID to the coresight-etm3x driver. The patch includes the necessary changes to the etm_ids array to add the PTM 1.1 Qualcomm ID.

The patch has been signed-off by multiple developers, including Ivan T. Ivanov, Mathieu Poirier, and Greg Kroah-Hartman, which indicates that it has been reviewed and approved by them.

Since the patch adds support for a specific device found in MSM8974 and APQ8064 chipsets, it is important for the stability and compatibility of the Linux kernel to include this patch in the -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a call to the function file_update_time in the ll_page_mkwrite function of the Lustre filesystem driver. The purpose of this call is to update the file times only if the page_mkwrite flag is not set. This change ensures that the file times are updated correctly in the Lustre filesystem.

The patch has been reviewed by multiple developers from Intel and has been tested. It also includes the necessary Signed-off-by tags from the authors.

Therefore, based on the information provided, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch makes the pxa_freqs arrays const, which means they can only be read and not modified. This improves code safety and maintainability. The patch also updates the arrays declaration, find_freq_tables(), and its callsites.

The patch has been suggested by Joe Perches and signed-off by Fabian Frederick and Rafael J. Wysocki, who are reputable contributors to the Linux kernel.

Overall, this patch improves the code by making the arrays const and has received positive feedback from experienced contributors. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes the `I2CR` and `I2CW` macros in the staging/comedi/s626.c file and expands them in place. These macros are only used in one place each and include the name of a local variable `devpriv` in their expansion.

By removing these macros and expanding them in place, the code becomes more readable and eliminates the need for the macros. This improves maintainability and reduces the risk of errors introduced by the macros.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the ENQUEUE_NOCLOCK flag to the enqueue_task() function calls in several places in the kernel/sched/core.c file. The ENQUEUE_NOCLOCK flag is necessary because the DEQUEUE_SAVE function already updates the runqueue clock, so the ENQUEUE_RESTORE function should also update the clock to maintain consistency.

By adding the ENQUEUE_NOCLOCK flag, the patch ensures that the runqueue clock is correctly updated when tasks are enqueued. This is important for maintaining accurate scheduling and preventing any inconsistencies.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the phy-omap-usb2 driver to use generic clock names "wkupclk" and "refclk" instead of platform-specific clock names. This allows the device tree node to specify the platform-specific clock names.

The patch has been reviewed and signed-off by multiple developers, including Felipe Balbi and Roger Quadros. It also includes appropriate error handling and warning messages in case the clock names cannot be found.

Overall, this patch improves the portability and maintainability of the driver by using generic clock names. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch introduces the long-awaited `->get_direction()` callback for the `gpio-pca953x` driver. It adds the implementation of the `pca953x_gpio_get_direction()` function, which retrieves the direction of a GPIO pin from the hardware.

The addition of this callback is beneficial as it provides a way to retrieve the direction of a GPIO pin, which was previously not available in the driver. This can be useful for various applications that need to know the current direction of a GPIO pin.

The patch also includes the necessary changes to the `pca953x_setup_gpio()` function to assign the `gc->get_direction` callback to `pca953x_gpio_get_direction`.

Overall, this patch improves the functionality of the `gpio-pca953x` driver and should be accepted in Linux -stable releases.
false || ACK

This patch updates the initcall_sync variants in init.h to fix build errors that occur when using custom initcall levels with tristate Kconfig options in device drivers. The patch also updates the comment in init.h to describe valid use cases for custom initcall levels.

The changes in this patch are necessary to address build errors and improve the clarity of the comment. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch adds two WARN_ON statements to check if the ULT CPU is paired with the LPT-LP PCH. This is important because the ULT CPU is only supported with the LPT-LP PCH. If the ULT CPU is not paired with the LPT-LP PCH, it could lead to compatibility issues and potential system instability. Therefore, adding these WARN_ON statements is a good practice to catch any potential issues early on.
false || ACK

Explanation: The patch changes the conditional logic to check for an error code instead of a success code. This change ensures that the driver is properly registered and if there is an error, it will clean up the debugfs before returning. This patch improves the error handling and ensures that the driver is properly initialized. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch replaces the use of pr_err with dev_err in the cpsw driver. The use of dev_err is preferred as it provides better integration with the device model and allows for more consistent error reporting. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch issue related to alignment in the ni_labpc.c file in the staging/comedi directory. The patch aligns the enum scan_mode mode parameter in the labpc_ai_scan_period() function and the unsigned int value parameter in the labpc_eeprom_write() function with the open parenthesis.

The patch is a simple and straightforward fix that improves code readability and maintains consistency with the coding style guidelines. It does not introduce any functional changes or potential regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code readability and consistency by breaking lines before operators instead of after them. It also fixes the indentation of the ternary operator. These changes do not affect the functionality of the code and are purely cosmetic. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the function `s_vGetFreeContext` to `vnt_get_free_context` in the `vt6656` driver in the staging directory. The function is used to get a free context for sending USB packets. The renaming improves code readability and follows the Linux kernel coding style.

The patch also updates the function calls to use the new function name `vnt_get_free_context` instead of `s_vGetFreeContext`.

Overall, this patch is a simple and straightforward code cleanup that improves code readability without introducing any functional changes. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an error path cleanup and prevents a crash due to a null dereference. It adds a check for the failure of kzalloc and returns -ENOMEM if it fails. This is a necessary fix to ensure proper memory allocation and error handling. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch fixes a channel mismatch issue in the ak4642 codec driver. The original code incorrectly set the minimum number of channels to 1 for both playback and capture, while the correct value should be 2. The patch correctly updates the minimum number of channels to 2 for both playback and capture, ensuring that the channel configuration is consistent. This fix is necessary for proper operation of the ak4642 codec and should be accepted in Linux -stable releases.
false || ACK

This patch updates the virtio_net driver to use the new ethtool API functions, ethtool_{get|set}_link_ksettings, instead of the deprecated ethtool_{get|set}_settings. The patch modifies the virtnet_validate_ethtool_cmd, virtnet_set_settings, and virtnet_get_settings functions to use the new API functions.

The new ethtool_{get|set}_link_ksettings functions provide a more comprehensive and flexible way to get and set link settings, including speed, duplex, and link mode masks. The patch ensures that the driver properly handles these settings and validates them before applying any changes.

Overall, this patch improves the compatibility and future-proofing of the virtio_net driver by using the latest ethtool API functions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch replaces the use of smp_mb() with smp_store_mb() and smp_store_release() in the walk_shadow_page_lockless_begin() and walk_shadow_page_lockless_end() functions in the arch/x86/kvm/mmu.c file.

The smp_mb() function is used to ensure memory ordering and synchronization between different CPUs. However, it can be expensive and unnecessary in some cases. The smp_store_mb() and smp_store_release() functions provide a more efficient and specific memory ordering guarantee.

By using smp_store_mb() and smp_store_release(), the patch ensures that the write to vcpu->mode in walk_shadow_page_lockless_begin() and walk_shadow_page_lockless_end() is not reordered ahead of the following spte read and the write to vcpu->mode in walk_shadow_page_lockless_end() respectively.

This patch improves the performance and efficiency of the code without introducing any functional changes. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the documentation for the '--call-graph' command line option in the perf report tool. It adds information about the optional print_limit argument and also updates the parsing of the option to use strtoul() since its type is u32.

The patch also includes the necessary changes in the code to parse the print_limit argument correctly.

Overall, this patch improves the documentation and ensures correct parsing of the '--call-graph' option. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the handling of queue deletion in the NVMe driver. It uses the online queue count instead of the number of allocated queues to determine the number of queues to delete. This ensures that only the created queues are deleted, and any queues that were not created are ignored. This is a more correct behavior.

The patch has been reviewed by multiple developers and has been reported to fix an issue. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch converts the ptp driver for the blackfin device to use the 64-bit get/set time methods. This is necessary because the device uses a 64-bit nanoseconds register, and with this patch, the driver will be ready for the year 2038.

The patch updates the bfin_ptp_gettime and bfin_ptp_settime functions to use struct timespec64 instead of struct timespec, which allows for 64-bit time values. The patch also updates the ptp_clock_info structure to use the gettime64 and settime64 function pointers.

Overall, this patch is necessary for the blackfin ptp driver to properly handle 64-bit time values and should be accepted in Linux -stable releases.
false || ACK

This patch introduces the VA_START macro in the arm64 architecture, which replaces the lengthy expression (UL(0xffffffffffffffff) << VA_BITS) used in multiple places. The VA_START macro simplifies the code and improves readability.

The patch has been reviewed and signed-off by Andrey Ryabinin and Catalin Marinas, who are recognized contributors in the arm64 architecture.

The changes made in the patch are straightforward and do not introduce any potential issues or regressions. The patch is a simple code refactoring that improves the maintainability of the codebase.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for locking IRQs when starting them in the bcm-kona GPIO driver. It introduces two new functions, bcm_kona_gpio_irq_startup() and bcm_kona_gpio_irq_shutdown(), which are used to lock and unlock the GPIO lines as IRQs are started and stopped.

The patch has been reviewed and tested by multiple individuals, including Christian Daudt, Grygorii Strashko, Markus Mayer, and Javier Martinez Canillas. It has also been signed-off by Linus Walleij, the maintainer of the bcm-kona GPIO driver.

The addition of locking IRQs when starting them is a valuable enhancement to the bcm-kona GPIO driver, as it ensures proper synchronization and prevents potential race conditions. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes an unnecessary memset operation in the ftdi_sio driver. The memset operation is used to initialize a struct, but the struct is already allocated and initialized using kzalloc, so the memset is redundant. Removing the memset operation will improve the efficiency of the code. The patch has been reviewed and signed-off by the relevant developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for reading from the video device in the soc_camera driver. It checks if the camera bus driver supports reading and if so, it tries to read from the video device and returns the result. It also adds a debug line for debugging purposes.

The patch is signed-off by multiple developers, indicating that it has been reviewed and tested by them.

The changes in the patch are straightforward and do not introduce any new functionality or complexity. It simply adds a check and a return statement to enable reading from the video device if supported.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds interrupt disabling around one of the existing invocations of call_rcu() in the rcutorture module. The purpose of this change is to test the behavior of call_rcu() when interrupts are disabled.

Interrupt disabling is a common technique used in kernel code to ensure that critical sections are executed atomically without being interrupted by hardware interrupts. By adding local_irq_disable() before the call to call_rcu() and local_irq_enable() after the call, this patch ensures that call_rcu() is tested in a scenario where interrupts are disabled.

Testing call_rcu() with interrupts disabled is important because it allows for the detection of potential issues or bugs that may arise when call_rcu() is invoked in such a context. By including this test in the rcutorture module, the patch enhances the overall testing coverage and helps to ensure the correctness and reliability of call_rcu().

Therefore, based on the provided information, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a compile issue in the staging/lustre/obdclass/obd_mount.c file. The variable "index" was not being initialized before being used in the lmd_make_exclusion function. The patch initializes the variable to 0, resolving the issue.

The patch has been reviewed by multiple individuals from Intel and has been tested. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes a check that is not doing anything useful and is blocking the removal of the __clk_get_flags() API. The patch has been Acked-by Tero Kristo and Signed-off-by Stephen Boyd, indicating that it has been reviewed and approved by the relevant maintainers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the .owner field for the spi-armada-3700 driver. The .owner field is used to keep track of the module that "owns" the driver. However, in this case, the .owner field is set to THIS_MODULE, which is a macro that automatically sets the owner to the module that defines the driver. Since the .owner field is set automatically, there is no need to explicitly set it in the driver structure.

Removing the .owner field does not affect the functionality of the driver and simplifies the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch adds a handler function to the Periodic Inquiry command complete event in the Bluetooth subsystem. It also includes the necessary definitions for the HCI_OP_PERIODIC_INQ command.

The patch has been signed-off by multiple developers, including Andre Guedes, Marcel Holtmann, and Gustavo Padovan. This indicates that it has undergone review and is considered acceptable by these experts.

Therefore, based on the provided information, I would recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch updates the definition of OVSP_LOCAL in the openvswitch.h header file to be a 32-bit value instead of a 16-bit value. This change is necessary because OVS ports are now 32-bit, so OVSP_LOCAL should also be 32-bit to maintain consistency.

The patch has been signed-off by Jarno Rajahalme and Jesse Gross, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the useless initialization of the variable 'ret' to zero at the time of declaration in the function ath6kl_read_fwlogs(). The return value of ath6kl_diag_read32() later replaces the initialized value. Therefore, removing the useless zero assignment improves the code readability and does not affect the functionality of the function.
false || ACK

This patch updates the AR9485 initvals in the ath9k driver. It fixes a bug where the HW peak detect calibration would fail for AR9300 chips. The patch implements the software way of doing the peak detect calibration instead of relying on the hardware. The changes in the patch modify the values in the ar9485_1_1_baseband_postamble array.

The changes in the patch seem to be correct and necessary to fix the bug. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

The patch replaces the use of kmalloc() with kzalloc() in the idmapper code. This change allows for memory allocation that has already been zeroed, eliminating the need for the subsequent memset() calls. This improves code readability and potentially reduces the risk of bugs related to uninitialized memory.

The patch has been signed-off by the authors, indicating that it has been reviewed and tested. The change is also straightforward and does not introduce any new functionality or dependencies.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the error handling in the OMAPDSS HDMI driver. It adds a check for the return value of the hdmi_panel_init() function and handles the error case properly by printing an error message and cleaning up resources before returning the error code.

Additionally, the patch also moves the initialization of the hdmi.ip_data.lock mutex to the same place as the hdmi.lock mutex, which improves code organization and readability.

Overall, this patch improves the robustness and maintainability of the OMAPDSS HDMI driver, and therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the plane state during initialization in the drm/i915 driver. It ensures that the plane_mask is accurate for atomic plane updates. The patch has been reviewed by Matt Roper and signed-off by Maarten Lankhorst and Jani Nikula.

The changes in the patch set the primary->crtc and primary->state->crtc pointers to &intel_crtc->base, update the state framebuffer, and update the plane_mask for the crtc. These changes ensure that the plane state is correctly initialized and updated.

Overall, the patch appears to be necessary for correct plane state initialization and updates, and it has been reviewed and signed-off by relevant developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch moves the duplicated callback functions from the codec driver to the component driver in the ASoC codec driver for the wm9713. This is a clean-up change that eliminates the need for the quick-hack of copying the functions from the codec side to the component side during register timing.

The patch also updates the codec driver structure to use the component driver structure for the controls, dapm widgets, and dapm routes.

Overall, this patch improves code organization and eliminates duplication, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch is a cleanup of the open count handling in the mac802154 driver. It simplifies the code by removing unnecessary checks and ensures that the open_count variable is incremented and decremented correctly.

The patch also fixes a bug in the close function where the open_count was decremented twice, which could lead to incorrect behavior.

Overall, this patch improves the clarity and correctness of the code without introducing any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an odd use of WARN_ON() in the Linux kernel code. The current implementation uses a constant string as the argument to WARN_ON(), which works but is not clear in its intent. The patch improves the warning message by showing the value of the "state" variable, making it more useful for debugging purposes.

The patch has been signed-off by two developers, Grant Grundler and Roland Dreier, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the __must_check attribute to the declarations of the dvb_usb_generic_rw() and dvb_usb_generic_write() functions in the dvb-usb driver. This attribute indicates that the return value of these functions must be checked by the caller, as they may indicate errors.

By adding this attribute, the patch ensures that the drivers will be doing the right thing in the case of errors, as the return values will be properly handled. This improves the overall reliability and stability of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the code in the ivtv driver to use the v4l2_g_ctrl and v4l2_s_ctrl functions instead of the deprecated g_ctrl and s_ctrl ops. The v4l2_g_ctrl and v4l2_s_ctrl functions are the recommended way to get and set control values in V4L2 subdevices.

By using the v4l2_g_ctrl and v4l2_s_ctrl functions, the code becomes more future-proof and aligns with the current V4L2 API guidelines. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the ixgbe driver where the incorrect bit is toggled to reset the data pipeline on Restart_AN assertion. The patch correctly updates the AUTOC register with the toggled LMS[2] bit and Restart_AN. The change is simple and does not introduce any new risks or regressions. It has been tested by Phil Schmitt and signed-off by multiple developers from Intel. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a build error when the PM_SLEEP is disabled. It adds the "static inline" keyword to the function definition of "tegra_pm_validate_suspend_mode" when the PM_SLEEP is disabled, preventing a multiple definition error. The patch also includes the reported-by and signed-off-by tags.

Based on this information, it seems like a valid fix for the build error and should be accepted in Linux -stable releases.
false || ACK

This patch improves the code by using the __set_current_state() function instead of directly assigning the new state to current->state. This change helps in tracking who changed the state and is especially useful in environments with CONFIG_DEBUG_ATOMIC_SLEEP enabled.

The patch has been reviewed and signed-off by multiple developers, including Davidlohr Bueso, Andrew Morton, and Linus Torvalds. Therefore, it can be considered reliable and suitable for inclusion in Linux -stable releases.
false || ACK

This patch adds a BUILD_BUG_ON check to ensure that the size of struct bt_skb_cb does not exceed the size of skb->cb. This check is important to ensure that the struct bt_skb_cb size stays within the limits of skb->cb at all times.

By adding this check at compile time, any potential issues with the size of struct bt_skb_cb can be caught early on, preventing any runtime errors or buffer overflows.

Therefore, this patch is a valuable addition to the Linux kernel and should be accepted in Linux -stable releases.
false || ACK

This patch adds a module option "nested" to the kvm_intel module, which controls whether the guest can use VMX instructions, allowing nested virtualization. The option currently defaults to 0, meaning nested VMX must be explicitly enabled. 

The patch also adds a function `nested_vmx_allowed()` which checks whether a guest should be allowed to use VMX instructions and MSRs. This function checks if the "nested" module option is enabled and if the guest has the VMX cpuid bit enabled.

Overall, this patch provides a useful feature for enabling nested virtualization and adds the necessary functionality to control and check for nested VMX support. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes some typos in the netvsc.c file in the staging directory. The typos are in the error messages printed by the netvsc_init_recv_buf() and netvsc_receive() functions. The patch corrects the spelling of "initialization" and "satisfy" in the error messages.

The patch has been reported by Joe Perches and signed-off by Haiyang Zhang, K. Y. Srinivasan, and Greg Kroah-Hartman. It is a simple fix that improves the readability and correctness of the error messages. There are no known negative side effects of applying this patch.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the "amlogic,meson-gxbb-i2c" compatible string to the Amlogic Meson I2C controller driver. It also updates the device tree binding documentation accordingly.

The patch has been reviewed and Acked-by Kevin Hilman, who is a recognized maintainer for this driver. Additionally, it has been signed-off by Neil Armstrong, Jerome Brunet, and Wolfram Sang.

The changes in the patch are necessary to support the "amlogic,meson-gxbb-i2c" compatible string, which is a valid and required property for the Amlogic Meson I2C controller. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch makes local symbols used only in the "sge.c" file static. Making these symbols static improves code encapsulation and reduces the risk of symbol conflicts with other files. The patch also changes the visibility of several functions to static, which further improves code encapsulation and reduces the risk of symbol conflicts.

Overall, this patch improves code organization and reduces the risk of symbol conflicts, making it suitable for inclusion in Linux -stable releases.
false || ACK

The patch is a simple type change from int to unsigned long for the variable "remain" in the function wmi_call(). The patch is fixing an inconsistency in the usage of the wait_for_completion_timeout() function, which returns an unsigned long value. The patch has been compile tested and is against the 4.1-rc3 kernel version. It also has the necessary Signed-off-by tags from the authors.

Based on this information, it seems that the patch is correct and should be accepted in Linux -stable releases.
false || ACK

This patch adds missing sanity checks on the version-request payload size in the greybus driver. Without these checks, there is a potential for buffer overflows or other security vulnerabilities. By adding the checks, the patch ensures that the payload size is validated before further processing is done.

The patch also includes an error message that is printed if the payload size is less than the expected size. This helps in debugging and identifying any potential issues.

Overall, this patch improves the robustness and security of the greybus driver, and therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the identification of mmu engine ids for host faults in the gk104- driver of the nouveau DRM module. It adds new engine ids for DISPLAY, CAPTURE, SCHED, and various HOST engines. It also removes the NVKM_ENGINE_FIFO data from the entries and clarifies that resetting all of PFIFO is not the correct way to handle such faults.

The changes in this patch seem reasonable and necessary for proper identification and handling of host faults in the gk104- driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the common clock architecture in the Rockchip PCI Express (PCIe) driver. The patch sets the Common Clock Configuration bit in the Link Control Register, indicating that the Rockchip's RC is using common clock architecture instead of asynchronous clock architecture.

This change is necessary to avoid confusion for some EP drivers that may need different settings based on the clock architecture. By setting the Common Clock Configuration bit, the patch ensures that the correct clock architecture is used, improving compatibility and functionality.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds an unregister function for the sunxi factors clock, which was missing previously. The unregister function ensures that the clock is properly cleaned up when it is unregistered, preventing memory leaks. Additionally, the patch keeps pointers to the mux and gate structs so that they can be freed when the clock is unregistered.

The patch also adds the unregister function declaration to the clk-factors.h header file.

Overall, this patch improves the code by adding necessary cleanup functionality and should be accepted in Linux -stable releases.
false || ACK

This patch fixes plymouth issues on certain EFI MacBooks by adding a loop that writes 0x00000000 to certain registers. The patch is simple and does not introduce any new code or changes to existing functionality. It only adds a loop to write values to specific registers. The patch has been signed-off by the author and is targeted at the correct file and location.

Based on the information provided, it appears that this patch is a valid fix for the reported issue and should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the PHY polling code from atl1c_open function. The comment in the patch states that the FPGA version of the PHY does not require additional code in atl1c_open. The removal of the code is safe and does not affect the functionality of the driver. Therefore, the patch can be accepted in Linux -stable releases.
false || ACK

This patch modifies the i40e driver in the Linux kernel to change the label of the "crc_errors" statistic to "rx_crc_errors". The patch is simple and straightforward, and it accurately reflects the nature of the statistic as an RX counter. The change is also consistent with the naming convention used for other statistics in the driver.

The patch has been tested and signed-off by multiple developers from Intel, indicating that it has undergone thorough testing and review. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a type casting issue in the staging/lustre driver's ll_dir_ioctl function. The patch properly casts the ll_fid2path argument to __user, which is necessary for correct handling of user space pointers.

The patch has been reviewed and signed-off by Oleg Drokin and Greg Kroah-Hartman, indicating that it has been reviewed and tested by experienced developers.

The change is a simple and straightforward fix that addresses a potential issue with type casting. It does not introduce any new functionality or behavior changes.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adjusts the scale and offset calculation in the iio: hid-sensors: ALS driver to be compliant with the IIO ABI. It introduces new variables `scale_pre_decml`, `scale_post_decml`, `scale_precision`, and `value_offset` to store the scale and offset values. The `als_read_raw` function is modified to return the scale and offset values correctly. The `als_parse_report` function is also modified to calculate the scale precision and store the scale values.

Overall, this patch improves the accuracy and compliance of the ALS driver in the Linux kernel. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the code in the staging/iio/adc/mxs-lradc.c file to use the iio_push_to_buffers_with_timestamp() function instead of the previous method of manually setting the timestamp. This change makes the code shorter and improves readability.

The patch has been reviewed by Lars-Peter Clausen and Marek Vasut, and they have both signed-off on it. Additionally, Fabio Estevam has been CC'd on the patch.

The modified code replaces the previous code block that manually set the timestamp with a single function call to iio_push_to_buffers_with_timestamp(). This function takes care of setting the timestamp and pushing the data to the buffers.

Based on the provided information, it seems that this patch is a straightforward improvement to the code and should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch replaces the use of sprintf() with snprintf() in order to avoid buffer overflow vulnerabilities. The use of snprintf() ensures that the buffer size is respected and prevents potential buffer overflows. The patch also includes the necessary changes in the code to accommodate the use of snprintf(). The patch has been signed-off by multiple developers and has been tested, indicating that it has undergone review and testing. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a checkpatch problem by removing the NULL assignment for the global variables `ll_remote_perm_cachep` and `ll_rmtperm_hash_cachep` in the `remote_perm.c` file of the Lustre staging driver. The patch simply removes the unnecessary NULL assignment, which is not needed since global variables are automatically initialized to NULL by default.

The patch has been signed-off by Swee Hua Law and Greg Kroah-Hartman, indicating that it has been reviewed and approved by the relevant developers.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for NEC extended keys in the it913x driver. It changes the default remote to RC_MAP_MSI_DIGIVOX_III and updates the module version to 1.11. The changes in the code look correct and do not introduce any obvious issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the POD X3 Live device in the ALSA line6 driver. It adds a new USB ID for the POD X3 Live and includes the necessary changes to the device ID table and properties table.

The patch is signed-off by two developers, indicating that it has been reviewed and tested.

Based on the provided information, there doesn't seem to be any potential issues or regressions introduced by this patch. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch allows the CODEC DAPM context to be accessed elsewhere, which is necessary for integrating with signal sources in the audio portion. It adds a new member "dapm" to the "struct arizona" to store the DAPM context. This change does not introduce any new functionality or modify existing behavior, but rather provides a necessary interface for other device functions.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the driver registration order in the staging/comedi/drivers/das08_cs.c file. It changes the order of registration for the comedi_driver and pcmcia_driver. The patch first registers the comedi_driver using the comedi_driver_register() function, and then registers the pcmcia_driver using the pcmcia_register_driver() function.

The patch also handles the case where the pcmcia_driver registration fails. If the registration fails, the patch unregisters the previously registered comedi_driver using the comedi_driver_unregister() function.

This change ensures that the driver registration follows the same order as other comedi driver types, which improves consistency and maintainability.

The patch has been reviewed and signed-off by multiple developers, including H Hartley Sweeten and Greg Kroah-Hartman.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a minor issue in the debug message in the drm_dp_i2c_do_msg() function. The missing newline at the end of the message makes the logs hard to read when a device defers a lot. The patch adds a newline character to the message, resolving the issue.

The patch has been reviewed and signed-off by multiple developers, including Todd Previte, Paulo Zanoni, Alex Deucher, and Daniel Vetter. It is a simple and straightforward fix that does not introduce any new functionality or risk.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the ip_forward function in the Linux kernel by computing the struct net from the input device before it is used. This ensures that the correct network namespace is used throughout the function.

The patch adds a new variable "net" of type struct net and assigns it the value of dev_net(skb->dev). This allows the subsequent usage of "net" in IP_INC_STATS and IP_INC_STATS_BH functions to correctly reference the network namespace associated with the input device.

By computing the struct net once and using it throughout the function, this patch improves code readability and maintainability. It also ensures that the correct network namespace is used consistently, which is important for proper network functionality.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch moves the function CsrUInt16ToHex from csr_util.c to csr_wifi_hip_card_sdio_intr.c, as it is only called in that file. This improves code organization and reduces the scope of the function. Additionally, the function is made static, indicating that it is only used within the file it is defined in.

The patch also updates the header file csr_util.h to remove the declaration of CsrUInt16ToHex, as it is no longer needed there.

Overall, this patch improves code organization and reduces the potential for conflicts or misuse of the CsrUInt16ToHex function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the btrfs_add_nondir function in the btrfs filesystem to take btrfs_inode pointers instead of inode pointers. This change allows for better type safety and improves code readability.

The patch updates all the calls to btrfs_add_nondir in the btrfs filesystem to pass btrfs_inode pointers instead of inode pointers.

The changes in this patch are straightforward and do not introduce any new functionality or behavior. They only improve the type safety and readability of the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a definition for the MAC_SM_RST register and uses it to reset the internal state machine in two places: r6040_init_mac_regs() and r6040_mac_address(). This improves code readability and maintainability by using a named constant instead of a magic number.

The patch also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the V4L2_TUNER_CAP_1HZ flag to the videodev2.h header file. This flag indicates that the tuner supports 1 Hz resolution. The patch also includes the necessary changes to the v4l module.

The patch has been signed-off by multiple developers, including Antti Palosaari, Hans Verkuil, and Mauro Carvalho Chehab. This indicates that the patch has been reviewed and approved by these developers.

The addition of the V4L2_TUNER_CAP_1HZ flag is a useful enhancement as it provides support for 1 Hz resolution in tuners. This can be beneficial for applications that require fine-grained control over the tuner frequency.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes redundant assignments of the "ret" variable in the pca953x_write_single, pca953x_gpio_direction_input, pca953x_gpio_direction_output, and pca953x_remove functions. These assignments are unnecessary because the "ret" variable is updated later in the code. Removing these redundant assignments improves code readability and reduces unnecessary operations.

Additionally, the patch corrects the indentation of the constant definition and removes one empty line, which are minor code formatting improvements.

Overall, the changes made by the patch are beneficial and do not introduce any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch replaces the deprecated function create_singlethread_workqueue() with alloc_ordered_workqueue() with WQ_MEM_RECLAIM set. This change ensures forward progress under memory pressure. The patch has been reviewed and signed-off by multiple developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the cleanup_perf_probe_events() function in the perf probe feature. The function was not freeing resources related to perf probe events, only trace probe events. This patch adds a call to clear_perf_probe_event() to properly free resources for perf probe events as well.

The patch has been reported by Wang Nan and signed-off by Namhyung Kim. It has also been Acked by Masami Hiramatsu. The patch has been reviewed and tested by multiple individuals, including Jiri Olsa and Peter Zijlstra.

The patch is a small and straightforward fix that addresses a specific bug. It has been reviewed and tested by multiple individuals, indicating that it has undergone thorough scrutiny. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the dma_dir parameter to the alloc memop in the vb2_queue structure. It also adds the dma_dir parameter to the alloc functions in the vb2_dc_alloc, vb2_dma_sg_alloc, and vb2_vmalloc_alloc functions. This change is necessary for the next patch where the dma-sg alloc memop needs to know the dma_dir.

The patch has been reviewed and Acked-by Pawel Osciak. It has also been signed-off by Hans Verkuil and Mauro Carvalho Chehab.

Based on the provided information, it appears that this patch is necessary and does not introduce any issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds some informational print statements to the simplefb driver. These print statements provide details about the framebuffer such as its address, size, mapping, format, mode, and line length. This information can be useful for debugging and troubleshooting purposes.

The patch has been reviewed and Acked-by Stephen Warren, indicating that it has been reviewed and approved by him. Additionally, it has been Cc'd to David Herrmann for his information.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the unnecessary call to free_irq in the remove function. This is because the irq is allocated using devm_request_irq, which automatically handles the freeing of the irq. Therefore, calling free_irq is redundant and can be safely removed.
false || ACK

Explanation: The patch fixes a bug in the code where the power state bits are not checked correctly. The patch correctly shifts and masks the obtained value before comparing it with the target value. This ensures that the comparison is done correctly and the power state is updated only when necessary. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds variable resolution support to the gspca driver by allowing subdrivers to specify try_fmt and enum_framesizes functions. It modifies the try_fmt_vid_cap and vidioc_enum_framesizes functions in gspca.c and adds two new function pointers (try_fmt and enum_framesizes) to the sd_desc structure in gspca.h.

The patch is well-written and includes proper sign-offs from the authors. It adds functionality that can be useful for users of the gspca driver, allowing them to specify custom resolutions. The changes are also backward-compatible and do not introduce any regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK). 

The patch removes the use of __devinit, __devexit_p, __devinitdata, __devinitconst, and __devexit attributes in the skge and sky2 drivers. These attributes are being removed because the CONFIG_HOTPLUG option is going away. 

The patch also removes the __devinit and __devexit attributes from the skge_show_addr, skge_probe, skge_remove, sky2_init, sky2_show_addr, sky2_test_intr, sky2_test_msi, sky2_probe, and sky2_remove functions. 

Overall, the patch is removing attributes that are no longer needed and aligning the code with the removal of the CONFIG_HOTPLUG option. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a local variable `scanned_queue` to the function `rtw_createbss_cmd23a_callback()` in the `rtw_cmd.c` file of the `rtl8723au` driver. The variable is used to simplify references to the `scanned_queue` member of the `mlmepriv` structure.

The patch also addresses a checkpatch.pl warning by reducing the line length to less than 80 characters.

Overall, this patch improves code readability and does not introduce any new functionality or potential issues. Therefore, it can be accepted in Linux -stable releases.
false || ACK

The patch is a simple renaming of the `enum dio200_layout` to `enum dio200_layout_idx`. It is only used once and does not introduce any functional changes. Renaming the enum frees up the `dio200_layout` tag for potential future use. The patch also includes the necessary changes in the `struct dio200_board` and `dio200_boards` array to reflect the renaming.

Since this patch is a straightforward renaming without any functional impact, it can be accepted in Linux -stable releases.
false || ACK

This patch adds a names database to the port command in usbip. It improves the display of imported USB devices by converting the vendor string from "unknown" to the actual vendor name. This enhancement provides better visibility and identification of USB devices.

The patch also includes error handling for opening the names database file and frees the resources in case of errors. This ensures proper cleanup and prevents resource leaks.

Overall, this patch improves the functionality and reliability of the usbip port command. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch implements the rate_update hook in the iwlwifi driver's rate scaling (rs) module. It re-initializes the rate scaling information for a station when the rate_update hook is called, which happens when the remote STA changes bandwidth or sends a VHT opmode notification.

The patch adds a new parameter "init" to the rs_initialize_lq and iwl_mvm_rs_rate_init functions, which is used to control whether the rate scaling information should be initialized or not. This allows the rate scaling information to be re-initialized when the rate_update hook is called.

The patch also adds a new function rs_rate_update, which is registered as the rate_update callback in the rate_control_ops structure. This function is called when the rate_update hook is triggered. It stops any ongoing aggregations and re-initializes the rate scaling information for the station.

Overall, this patch adds necessary functionality to handle rate updates in the iwlwifi driver's rate scaling module. It is a valid and necessary addition to the codebase, and therefore should be accepted in Linux -stable releases.
false || ACK

The patch removes an unnecessary check before calling the function "vb2_put_vma". The function itself already checks if the argument is NULL and returns immediately if it is. Therefore, the check around the function call is redundant and can be safely removed.

The patch has been reviewed and Acked-by Marek Szyprowski and signed-off by multiple developers, indicating that it has been reviewed and approved by them.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

The patch removes the HDMI PLL reset code, which is unnecessary as the SYSRESET bits in the HDMI PLL do not actually reset the PLL itself. The patch also mentions that the SYSRESET bits are not used in other PLLs, so removing the HDMI PLL reset will make the PLL code simpler and more consistent with other PLLs. Therefore, accepting this patch in Linux -stable releases is recommended.
false || ACK

This patch should be accepted in Linux -stable releases. The patch replaces the use of `lookup_one_len()` with `lookup_one_len_unlocked()` in the `reconnect_one()` function in `fs/exportfs/expfs.c`. 

The reason for this change is to handle the case where the lookup yields a different dentry. The patch includes a comment explaining the non-obvious logic in this case. It states that if the `tmp` dentry is not equal to the `dentry` passed as an argument, it means that the dentry has been renamed since `exportfs_get_name()` was called. In this case, the patch simply releases the `tmp` dentry and proceeds to the `out_reconnected` label.

This change improves the code readability and simplifies the logic in the `reconnect_one()` function. It also ensures that the correct dentry is used in subsequent operations. Therefore, the patch should be accepted.
false || ACK

This patch ensures that the vm_struct structure has its phys_addr member filled in, which allows /proc/vmallocinfo to show the physical address for ioremap mappings. This is a useful feature for debugging and analyzing memory mappings.

The patch has been Acked-by Nicolas Pitre, who is a recognized expert in the field. Additionally, it has been signed-off by Russell King, who is a maintainer of the ARM architecture code.

The change itself is straightforward and does not introduce any new functionality or complexity. It simply assigns the physical address of the ioremap mapping to the phys_addr member of the vm_struct structure.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves error handling in the bcm2835-audio driver by replacing NULL values returned by vc_vchi_audio_init() with error pointer values. It returns ERR_PTR(-EINVAL) when too many instances of the audio service are initialized, ERR_PTR(-ENOMEM) when kzalloc fails, and ERR_PTR(-EPERM) when vchi connections fail to open.

The patch also replaces a NULL check with IS_ERR() where vc_vchi_audio_init() is called.

By replacing NULL with error pointer values and using IS_ERR(), the patch enhances error reporting and makes the code more robust.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the unused functions psbfb_suspend() and psbfb_resume() from the gma500 framebuffer driver. These functions are not being used anywhere in the codebase and are unnecessary. Removing them will help to clean up the code and reduce potential confusion for developers.

Additionally, the patch does not introduce any new functionality or changes to existing code, so it should not introduce any new bugs or issues.

Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch converts the DRM_MINOR_* constants into an enum, which improves code readability and maintainability. It also adds a DRM_MINOR_CNT constant, which allows for range-checks in future follow-up patches.

The change in the IDs of the minor-types by -1 is acceptable since they are not used as indices. The patch has been reviewed and signed-off by relevant maintainers.

Overall, this patch improves the code structure and does not introduce any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the s390/vmur driver to link the parent CCW device during UR device creation. This change ensures that the UR device is properly associated with its parent device.

The patch is signed-off by two developers, indicating that it has been reviewed and tested. The code changes are straightforward and do not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes redundant code in the bnx2x_init_dev() function in the bnx2x_main.c file. The code sets the power state to D0 using the bnx2x_set_power_state() function, but this is unnecessary because the power state is already set to D0 by the pci_enable_device() function. Additionally, the patch removes redundant code for finding the power management capability, as the pci core has already saved the value in pdev->pm_cap.

The patch has been reviewed and Acked-by Yuval Mintz <yuvalmin@broadcom.com>.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds the "--sample-cpu" option to the perf record tool. This option allows the user to explicitly enable CPU sample type, which is currently only enabled implicitly in case the target is CPU related. The patch also updates the relevant documentation and adds the necessary code changes to support this option.

The addition of this option can be useful for tools like c2c record, which can benefit from explicitly enabling CPU sample type.

The patch has been reviewed and signed-off by multiple developers, including Jiri Olsa, David Ahern, Namhyung Kim, and Peter Zijlstra. The patch also includes a link to the discussion thread on the LKML.

Based on the analysis, it appears that the patch is well-implemented and addresses a specific need. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a race condition in the dm_thin_find_block() function in the dm-thin-metadata.c file. The race condition occurs when checking the fail_io flag outside the metadata device's root_lock, which can lead to incorrect behavior.

The patch correctly moves the check for the fail_io flag inside the root_lock, ensuring that the flag is properly synchronized and preventing the race condition.

The patch also includes the necessary locking operations (down_read and up_read) to properly handle the root_lock.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a warning related to NOHZ local_softirq_pending. It replaces the use of netif_rx() with netif_rx_ni() which should be used from process/softirq context. The change is simple and straightforward, and it addresses the issue correctly. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch adds a MODULE_ALIAS for the aat2870-regulator platform. This allows the module to be loaded using the alias name instead of the full module name. This can be useful for system integrators or users who want to load the module using a more generic name. Since this change does not introduce any functional changes or potential issues, it can be accepted in Linux -stable releases.
false || ACK

This patch adds debug error messages to report command timeout in the liquidio driver. It adds a timeout error message in the function lio_process_ordered_list() and also adds the host failure status in an existing error message in the function if_cfg_callback().

The addition of these error messages will help in diagnosing and troubleshooting issues related to command timeouts in the liquidio driver. It provides more information about the failure status and the timeout duration, which can be useful for debugging and resolving issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the redundant use of of_match_ptr() in the tegra_usb_phy_driver structure. The of_match_ptr() function is not needed because the data structure it protects is always compiled in. Therefore, removing it simplifies the code without affecting its functionality. The patch also includes the necessary Signed-off-by tags and Cc's.
false || ACK

This patch improves the code in the staging/comedi/ni_stc.h file by tidying up the NI_M_CDO_MODE_REG bits. It renames the CamelCase and converts enums into defines. It also uses the BIT() macro to define the bits.

The changes in the patch are straightforward and improve the readability and maintainability of the code. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch constifies the of_device_id arrays in three different drivers: mxc_w1.c, omap_hdq.c, and w1-gpio.c. The of_device_id arrays are used as const in these drivers, so constifying them is a correct and safe change.

By constifying the of_device_id arrays, it ensures that these arrays are not modified accidentally or intentionally, which can lead to unexpected behavior or bugs. Making them const also improves code readability and maintainability.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the whitelist in the i915_reg_read_ioctl function in the intel_uncore.c file. It changes the gen_bitmask value for the RING_TIMESTAMP register from GEN_RANGE(4, 8) to GEN_RANGE(4, 9).

The change in the gen_bitmask value allows the reg_read ioctl to return RCS_TIMESTAMP for the RENDER_RING_BASE register for generations 4 to 9. This is an improvement as it expands the range of supported generations.

The patch has been reviewed and signed-off by multiple developers, including Rodrigo Vivi and Damien Lespiau from Intel. This indicates that the patch has undergone thorough review and testing.

Therefore, based on the information provided, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces a locked variant of the `nouveau_abi16_get()` function in the `drm/nouveau/abi16` module. The purpose of this patch is to ensure that the `cli->mutex` is locked when accessing the ABI16 data, providing limited interoperability for USIF.

The patch modifies the existing `nouveau_abi16_get()` function to call a new static function `nouveau_abi16()` which performs the actual retrieval of the ABI16 data. The `nouveau_abi16_get()` function then locks the `cli->mutex`, calls `nouveau_abi16()`, and unlocks the mutex before returning the ABI16 data.

This patch improves the synchronization and thread safety of the `nouveau_abi16_get()` function by ensuring that the `cli->mutex` is locked when accessing the ABI16 data. This is important to prevent race conditions and ensure correct behavior when multiple threads are accessing the ABI16 data concurrently.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the behavior of the atusb driver to not overwrite csma settings when setting the channel afterwards. The patch replaces the call to atusb_write_reg() with atusb_write_subreg() to set the channel, which ensures that the csma settings are not changed.

The patch has been reviewed and Acked-by Stefan Schmidt <stefan@osg.samsung.com>. It also has the Signed-off-by tags from Alexander Aring <aar@pengutronix.de> and Marcel Holtmann <marcel@holtmann.org>.

Based on the provided information, the patch appears to be a valid fix for the described issue and has received the necessary review and sign-offs. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the missing helper function `crypto_ahash_blocksize` to the Linux kernel's crypto subsystem. This function returns the block size of an ahash algorithm. The patch also includes the necessary documentation for the function.

The addition of this helper function is beneficial as it provides a convenient way for other parts of the kernel or external modules to obtain the block size of a cipher. This can be useful for various cryptographic operations.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the performance of the fib_table_lookup function in the net/ipv4/fib_trie.c file by using the __fls() function instead of fls() when the argument is known to be non-null. The __fls() function is faster than fls() and since the patch ensures that the argument is non-null, it is safe to use __fls().

The patch also includes a comment explaining that fls(x) is equal to __fls(x) + 1, which helps in understanding the code.

Overall, this patch improves performance and does not introduce any new risks or issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the missing mutex_destroy() function calls in the emmaprp_probe() and emmaprp_remove() functions of the mx2-emmaprp driver. The mutex_destroy() function is used to properly clean up the mutexes used by the driver when it is removed.

By adding the mutex_destroy() calls, the patch ensures that the mutexes are properly destroyed and released when the driver is removed, preventing any potential resource leaks.

The patch has been signed-off by multiple developers, indicating that it has been reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds a line of code to clear the link status when the interface is down. This is important because when the interface is down, the mailbox command to get context statistics fails. By restricting the driver from issuing the get statistics command when the interface is down, it prevents any potential issues or errors.

The patch has been signed-off by the original author and the maintainer of the qlcnic driver. It is a small and straightforward change that addresses a specific issue. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch moves the check for backlog size from l2cap_core.c to l2cap_sock.c. It removes the socket specific code from l2cap_core.c and adds it to l2cap_sock.c. The patch also adds the necessary check for backlog size in l2cap_sock_new_connection_cb() function.

The patch has been reviewed and Acked-by Andrei Emeltchenko <andrei.emeltchenko@intel.com>. It also has the necessary Signed-off-by tags from Gustavo Padovan <gustavo.padovan@collabora.co.uk> and Marcel Holtmann <marcel@holtmann.org>.

Based on the provided information, the patch appears to be a valid and necessary change. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes an unnecessary memset operation in the qlcnic_alloc_tx_rings function in the qlcnic_main.c file. The memset operation is used to initialize memory allocated with vzalloc, but since vzalloc already zeroes out the allocated memory, the memset operation is redundant and can be safely removed. The patch has been reviewed and Acked by Shahed Shaikh and signed-off by Christophe JAILLET and David S. Miller, indicating that it has been reviewed and tested by multiple developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a signature mismatch in the function `regulator_get_error_flags()` in the `include/linux/regulator/consumer.h` header file. The original function signature does not match when the `CONFIG_REGULATOR` configuration option is not defined. This patch updates the function signature to include an additional parameter `unsigned int *flags` to match the correct signature.

By adding the missing parameter, this patch ensures that both declarations of `regulator_get_error_flags()` match, preventing any potential compiler errors.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the libceph module to defer building the osd request until just before submitting it in all callers except ceph_writepages_start(). This change improves the efficiency of the code by reducing unnecessary operations.

The patch has been reviewed and signed-off by Alex Elder and reviewed by Josh Durgin. The changes are specific to the fs/ceph/addr.c, fs/ceph/file.c, and net/ceph/osd_client.c files.

The patch removes the ceph_osdc_build_request() function call from the start_read(), ceph_sync_write(), ceph_osdc_readpages(), and ceph_osdc_writepages() functions in the respective files. Instead, the ceph_osdc_build_request() function is called just before submitting the request.

The patch also includes a commented-out BUG_ON() statement, which suggests that there might be a bug in the code. However, since it is commented out, it does not affect the functionality of the code.

Overall, this patch improves the code efficiency and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the Gemini Lake platform to the cpufreq intel_pstate driver. It includes the necessary changes to the x86_cpu_id table to enable the same parameters as the INTEL_FAM6_ATOM_GOLDMONT platform.

Since the patch is adding support for a new platform and the changes are specific to the intel_pstate driver, it is appropriate to include this patch in the Linux -stable releases.
false || ACK

This patch adds support for a new advertising setting in the Bluetooth controller. The new setting allows switching the controller into connectable mode independently of the global connectable setting. This can be useful in certain scenarios where the controller needs to be connectable for specific purposes while the global connectable setting is disabled.

The patch modifies the `include/net/bluetooth/hci.h` and `net/bluetooth/mgmt.c` files to add the new advertising setting and handle its value appropriately.

The patch has been reviewed and signed-off by Marcel Holtmann <marcel@holtmann.org> and Johan Hedberg <johan.hedberg@intel.com>, indicating that it has undergone proper review and testing.

Based on the provided information, the patch appears to be well-implemented and addresses a specific need in the Bluetooth functionality. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch extends the frequency range for the Si2157 tuner to cover the complete ATSC/QAM-B range. By changing the minimum frequency from 110000000 to 55000000, it allows the tuner to support a wider range of frequencies. This change is necessary for the Si2157 tuner to properly function with ATSC signals. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the unnecessary '0x' notation when using the %pad format in the USB DWC2 driver. The %pad format automatically prints in hexadecimal format, so the '0x' prefix is redundant and can lead to a '0x0x' string.

The patch has been reviewed and Acked-by Paul Zimmerman and signed-off by Fabio Estevam and Greg Kroah-Hartman.

The change is a simple and straightforward fix that improves code readability without introducing any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes unnecessary forward declarations of struct super_block in multiple files. Forward declarations are used to declare a type before it is defined, but in this case, the struct super_block is not used in any of the files. Therefore, removing these forward declarations does not affect the functionality of the code.

Removing unnecessary code is generally considered good practice as it reduces code clutter and improves code readability. Since this patch removes unnecessary forward declarations without affecting the functionality of the code, it can be accepted in Linux -stable releases.
false || ACK

This patch adds missing L2 cache events and DTLB refills for the arm64 architecture. The patch has been Acked-by Will Deacon and signed-off by Florian Fainelli and Catalin Marinas, who are experts in the field. The changes in the patch are straightforward and do not introduce any potential issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds a check to ensure that encryption policies can only be set on directories in the ext4 filesystem. This is a necessary security measure to prevent encryption policies from being set on files, which could lead to unexpected behavior or security vulnerabilities.

The patch has been reviewed and signed-off by Theodore Ts'o, who is a well-known and respected contributor to the Linux kernel. Additionally, Chao Yu from Samsung has also reviewed the patch and confirmed its correctness.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a typo in the code by changing the name of the fixup from ALC269_FIXUP_DMIC to ALC269VB_FIXUP_DMIC. The fixup itself is not actually used, so this change is purely cosmetic. It does not affect the functionality or behavior of the code.

The patch has been signed-off by two developers, David Henningsson and Takashi Iwai, which indicates that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the use of the generic clk framework API in the ARM mxc audmux-v2 driver. It replaces the calls to clk_enable and clk_disable with clk_prepare_enable and clk_disable_unprepare respectively. This change ensures that the clock is properly prepared before enabling it and properly unprepared before disabling it.

Using the generic clk framework API is a recommended practice for managing clocks in the Linux kernel. It provides a more consistent and reliable way of handling clocks across different platforms.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code in the comedi_test driver by using the comedi_fc helper function cfc_check_trigger_arg_is() to validate the trigger arguments when the source is TRIG_TIMER. It also changes the local variable "tmp" to an unsigned int and renames it to "arg" for aesthetic reasons.

The patch correctly rounds the trigger arguments to the nearest microsecond and checks if the rounded value is different from the original value. If there is a difference, it sets the "err" variable to indicate an error.

Overall, this patch improves the code readability and ensures that the trigger arguments are properly validated. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the WHEA _OSC call in the ACPI APEI subsystem. The WHEA _OSC call is necessary to enable APEI firmware first mode on some machines, which ensures that there is a GHES hardware error record for hardware error notification. The patch adds a new function, apei_osc_setup(), which performs the necessary setup for the WHEA _OSC call.

The patch has been reviewed by Andi Kleen and Matthew Garrett, and has been signed-off by Huang Ying and Len Brown.

The patch is necessary to ensure proper error handling and notification in the ACPI APEI subsystem, and it has been reviewed and signed-off by relevant developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch increases the scan timeout from 7 seconds to 15 seconds in the iwlwifi driver. The reason for this change is that when the first interface is active, scanning on it or the second interface can take a little longer than 7 seconds, typically around 8 seconds. By increasing the timeout to 15 seconds, the patch ensures that a scan is not aborted prematurely if it is still running but taking more time.

The patch has been reviewed and signed-off by Emmanuel Grumbach and Johannes Berg, who are both from Intel. This indicates that the patch has undergone a thorough review process and has been deemed suitable for inclusion in the Linux kernel.

Therefore, based on the information provided, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch moves the SCHED_RESET_ON_FORK flag from the policy field to the new attr::sched_flags field. It also updates the sched_setscheduler and sched_setscheduler_nocheck functions to properly handle the new flag.

The patch is well-documented and the changes are straightforward. It fixes a bug in the handling of the SCHED_RESET_ON_FORK flag and improves the code readability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch adds a new variable "neg_one" to the sysctl.c file. It also includes the necessary documentation and is signed-off by multiple developers. The patch does not introduce any new functionality or change any existing code, but rather adds a standard constraint that will be used by a future patch. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch converts the atlx driver to use the SKB paged frag API for mapping transmit buffers. The patch replaces the use of pci_map_page() with skb_frag_dma_map() to map the transmit buffers. This change improves the performance and efficiency of the driver.

The patch has been reviewed and signed-off by multiple developers, including the driver maintainer and the netdev mailing list. It also includes a detailed commit message explaining the changes made.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the function `odm_TxPwrTrackSetPwr88E` to `dm_txpwr_track_setpwr`. The function is renamed to follow the Linux kernel coding style, which prefers lowercase with underscores for function names. The patch also updates the function name in the code and the debug message.

The patch does not introduce any functional changes and only improves the code readability and maintainability. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes two erroneous defines for the PLLs and adds new defines for the reset pin controls in the db5500-prcmu driver. The changes appear to be correct and necessary for proper functionality. The patch has been signed-off by the relevant developers, indicating that it has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a device node reference leakage issue in the shmobile_init_delay function in the ARM shmobile code. The patch simplifies the code by moving the CPU identification logic inside the loop over cpu nodes, replacing of_find_compatible_node() calls with of_device_is_compatible(). This change reduces the complexity from O(n) to O(1).

The patch has been reviewed and Acked-by Magnus Damm and Signed-off-by Laurent Pinchart and Simon Horman.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the cache push and clear code for the ColdFire V4e with MMU enabled. It adds a check for CPU_IS_COLDFIRE and flushes the branch cache using flush_cf_bcache() function. This change is necessary for the write-through cache setup of the ColdFire V4e with MMU enabled.

The patch has been reviewed and Acked-by multiple developers, including Greg Ungerer, Geert Uytterhoeven, Matt Waddel, and Kurt Mahan.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch addresses a potential issue where the sequence number can become out of sync if an endpoint is disabled after some data transfers and then enabled again. The patch adds a function `ep_clear_seqnum` to reset the sequence number and calls it when the endpoint is enabled. 

The patch has been tested and signed-off by multiple developers, including Ricardo Ribalda Delgado and Mian Yousaf Kaukab. It also includes a comment explaining the purpose of the added code.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch migrates the jazz driver to the new 'set-state' interface provided by the clockevents core. The earlier 'set-mode' interface is marked as obsolete. This migration enables the implementation of callbacks for new states of clockevent devices, such as ONESHOT_STOPPED.

The patch removes the unused ->set_mode() callback, which was not doing anything.

Overall, this patch improves the code by using the new interface and removing unnecessary code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch declares the function __jbd2_journal_temp_unlink_buffer() as static. This means that the function can only be accessed within the same source file and cannot be called from other files. 

Since this function is only used within the same file (transaction.c) and is not intended to be called from other files, declaring it as static is appropriate. This helps to improve code encapsulation and reduces the risk of accidental misuse of the function.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the setup of the AUX_CTRL register for RT3090, RT3390, RT3593, and RT5592 chips in the rt2800pci driver. It enables PCIe wakeup for these chips, similar to what is done in the 2011_1007_RT5390_RT5392_Linux_STA_V2.5.0.3_DPO driver.

The patch checks if the device is using PCIe and if it is one of the specified chips. If so, it reads the current value of the AUX_CTRL register, sets the FORCE_PCIE_CLK and WAKE_PCIE_EN fields to 1, and writes the modified value back to the register.

The patch has been signed-off by Gabor Juhos and John W. Linville, indicating that it has been reviewed and tested.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes an off-by-one error in the o2cb_cluster_check() function in the ocfs2 file system. The patch correctly checks if the loop iteration is less than O2CB_MAP_STABILIZE_COUNT - 1 before calling msleep(1000), which avoids an unnecessary delay on the final loop iteration.

The patch has been reviewed and signed-off by multiple developers, including Daeseok Youn, Mark Fasheh, Joel Becker, Andrew Morton, and Linus Torvalds. This indicates that the patch has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch simplifies the boolean tests in the via-camera driver by replacing "if (override_serial == 0)" with "if (!override_serial)". This change improves code readability and reduces mental parsing time. The patch does not introduce any functional changes and is a straightforward improvement. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the PM/Freezer code by correctly returning the return code from schedule_timeout_killable() instead of the one from freezer_count(). The bug is currently harmless as all the current callers ignore the return code, but it is still worth fixing.

The patch adds a new local variable "__retval" to store the return code from schedule_timeout_killable(). Then, it returns this value after calling freezer_count(). This ensures that the correct return code is propagated to the callers.

Since this patch fixes a bug and does not introduce any new issues, it should be accepted in Linux -stable releases.
false || ACK

This patch adds warnings for unresolved control methods in the ACPICA disassembler. It introduces two new global variables, `acpi_gbl_num_external_methods` and `acpi_gbl_resolved_external_methods`, which are used to track the number of external methods and the number of resolved external methods, respectively.

By adding warnings for unresolved control methods, this patch improves the disassembler's ability to handle method invocations with unknown argument counts. This can help identify potential issues and improve the overall reliability of the disassembler.

The patch also initializes the new global variables to zero in `acpi_ut_init_globals()`, ensuring that they start with the correct initial values.

Overall, this patch provides a useful enhancement to the ACPICA disassembler and should be accepted in Linux -stable releases.
false || ACK

This patch adds support for 1080p capture at 2 fps and 5 fps to the webcam emulation in the vivid driver. It updates the VIVID_WEBCAM_SIZES constant to include the new frame size and adds the corresponding frame intervals. It also updates the logic for selecting the webcam size and interval index.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review.

Overall, this patch adds a useful feature to the vivid driver without introducing any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the Bluetooth management code where the Start Discovery command does not return the correct address type in the response message. The patch adds the missing code to return the same address type that was passed to the command.

The patch has been reviewed and Acked-by Marcel Holtmann, who is a recognized Bluetooth expert. The code changes are straightforward and do not introduce any new risks or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes an unreachable code block that contains a pr_debug() statement. The comment in the patch states that the pr_debug() statement will never be executed. Removing unreachable code is generally considered a good practice as it improves code readability and maintainability. Since the patch does not introduce any new issues and improves the code, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the vt6655 driver where the byPacketType variable is not being set. The patch adds a call to CARDbyGetPktType to set the byPacketType variable. Additionally, the patch changes the CARDbIsOFDMinBasicRate function to check the basic_rates variable instead of the wBasicRate variable.

The changes in this patch are straightforward and address a specific issue in the driver. The patch has been reviewed and signed-off by multiple developers, including the driver maintainer. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a helper function called `sk_stream_is_writeable()` to replace a hardcoded condition in several call sites. The purpose of this helper function is to handle the change in the condition for TCP sockets when TCP_NOTSENT_LOWAT support is added.

The patch is signed-off by Eric Dumazet and David S. Miller, and it has been Acked-by Neal Cardwell. The patch modifies the `net/sock.h` file and updates several call sites in different files.

The patch itself is straightforward and does not introduce any new functionality or behavior. It simply replaces the hardcoded condition with a helper function, which improves code readability and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the code in fs/aio.c to use the cancel_delayed_work_sync() function instead of cancel_delayed_work() and cancel_work_sync() functions. The cancel_delayed_work_sync() function cancels a delayed work item and waits for it to complete, ensuring that all pending work is finished before proceeding.

Using cancel_delayed_work_sync() instead of cancel_delayed_work() and cancel_work_sync() provides a more robust and reliable cancellation mechanism for the work queue associated with the kioctx structure.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for CRC interrupts for pre-gen5/vlv Intel GPUs in the DRM driver. It also includes a small refactoring for gen2 GPUs. The patch has been reviewed by Ville Syrjälä and signed-off by Daniel Vetter.

The changes in the patch are necessary to enable CRC interrupts for the specified GPUs, which can be useful for debugging and testing purposes. The code changes are minimal and do not introduce any new risks or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch addresses an issue where the fbc frontbuffer tracking flush callback is occasionally called without any bit set. The patch filters out these no-op flush calls, which can occur when filtering flush calls due to GPU rendering. The issue was reported by Paulo Zanoni and reviewed by him as well. The patch has also been signed-off by Daniel Vetter.

The patch adds a check to return early if no frontbuffer bits are set, which effectively filters out the no-op flush calls. This ensures that only valid flush calls are processed further.

Based on the information provided, the patch appears to be a valid fix for the reported issue and has been reviewed by the relevant parties. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch prevents recursion in the get_user_pages() function in the amdgpu driver. It introduces a new structure `amdgpu_ttm_gup_task_list` to keep track of tasks inside `get_user_pages()` and ignores MMU callbacks from there. The patch also adds a spinlock `guptasklock` and a list `guptasks` to protect the access to the `guptask` structure.

The patch has been reviewed by Christian König and Felix Kuehling, both from AMD, and signed-off by Alex Deucher, also from AMD.

The patch addresses a specific issue and introduces necessary changes to prevent recursion and ensure proper handling of tasks inside `get_user_pages()`. It has been reviewed and signed-off by relevant developers, which indicates that it has undergone thorough testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes a duplicated "const" keyword in the pinctrl-imx.c file, which fixes a smatch warning. The patch has been reviewed and Acked-by two developers, Richard Zhao and Dong Aisheng. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch makes the VLAN deletion function symmetric with the VLAN addition function in the mlxsw spectrum driver. The patch removes the VLAN deletion code from the init sequence and adds it after the pvid check. This change ensures that both functions are symmetric and removes the constraint that forced them to be non-symmetric.

The patch also adds error handling for the VLAN deletion operation and returns the appropriate error code if the operation fails.

Overall, this patch improves the code symmetry and adds error handling, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch fixes an out-of-bounds read issue in the dw-mipi-dsi driver. It avoids the use of casting a u16 and instead explicitly encodes the endianness. The patch also checks the length of the tx_buf before accessing its elements to prevent any potential buffer overflow. Overall, this patch improves the safety and stability of the driver, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch adds a validation step to the early demux function in the TCP IPv4 code. It checks if the route interface matches the input device's interface index before setting the socket's destination. This validation step ensures that the reverse path filtering is not violated.

The patch is signed-off by David S. Miller, who is a well-known and respected contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the unnecessary initialization of the static variable "pin_base" to 0. Initializing static variables to 0 is not necessary as they are already initialized to 0 by the compiler. The patch also fixes a checkpatch error. The patch has been reviewed and Acked by Linus Walleij and Sachin Kamat. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the port offset for DMEM registers in the drm/nouveau/falcon driver. The patch correctly updates the register addresses for writing and reading data to/from the DMEM registers based on the port number. The previous code was using an incorrect offset calculation, which could lead to incorrect data being written or read.

The patch also correctly handles the case when the size is not a multiple of 4, ensuring that the last word is masked to prevent garbage data from being written or read.

Overall, this patch improves the accuracy and reliability of accessing the DMEM registers in the driver, and it should be accepted in Linux -stable releases.
false || ACK

This patch changes the value of GEN6_RP_DOWN_TIMEOUT to decimal, which is consistent with the other RP magic values used in the code. It also changes the order of the register writes to match the BIOS spec, making it easier to verify.

The patch has been reviewed by multiple developers and has been signed-off by them. Therefore, it can be considered safe to include in the Linux -stable releases.
false || ACK

Based on the patch description and the code changes, it appears that this patch fixes a specific issue related to the fence number in DPFC_CTL on SNB (Sandy Bridge) architecture. The documentation explicitly states that the fence number in DPFC_CTL must be 0 on SNB, and when it's not zero, the GTT tracking doesn't work properly.

The patch removes the setting of the fence number in DPFC_CTL for SNB by removing the line "dpfc_ctl |= (DPFC_CTL_FENCE_EN | obj->fence_reg);" and adding a condition to set the fence number only if the device is of GEN5 (Sandy Bridge) architecture.

The patch has been reviewed and signed-off by multiple developers, including Ville Syrjälä and Chris Wilson.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases to fix the issue with the fence number in DPFC_CTL on SNB architecture.
false || ACK

This patch changes the data type of the variables "start" and "size" from "phys_t" to "phys_addr_t" in the file "arch/mips/kernel/setup.c". This change is necessary to ensure consistency and compatibility with the MIPS architecture.

The patch has been reviewed and signed-off by Jaedon Shin, Ralf Baechle, and Linus Torvalds, which indicates that it has been tested and approved by the relevant parties.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the DAPM (Dynamic Audio Power Management) widget IO operations in the ASoC (Audio System on Chip) subsystem. Currently, not all DAPM widget IO operations are holding the component mutex (codec or platform). This patch ensures that the component mutex is held for all DAPM widget IO operations.

The patch introduces two new inline functions, `soc_widget_lock` and `soc_widget_unlock`, which are used to lock and unlock the component mutex based on whether the widget belongs to a codec or a platform. These functions are called in the `soc_widget_update_bits_locked` function to ensure that the mutex is held while performing widget updates.

Additionally, the `soc_widget_update_bits` function is modified to call `soc_widget_lock` before reading the widget value and `soc_widget_unlock` after writing the updated value. This ensures that the component mutex is held during the entire widget update process.

The `dapm_reg_event` function and the `dapm_seq_run_coalesced` function are also modified to call `soc_widget_update_bits_locked` instead of `soc_widget_update_bits` to ensure that the component mutex is held during widget updates.

Overall, this patch improves the synchronization and thread-safety of DAPM widget IO operations by ensuring that the component mutex is held during the entire widget update process. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a NULL check for the platform data in the ramoops_probe function. This check ensures that the platform data is not NULL, which should only be possible if a driver incorrectly sets up a probe request without defining the platform_data structure.

Additionally, the patch includes a check for already initialized ramoops area and a check for the validity of the platform data pointer.

These checks improve the robustness and reliability of the ramoops driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the variable "pfScanResult" to "result" in the struct scan_attr and updates the references to this variable in the code. The renaming is done to avoid using CamelCase naming convention.

The patch is a simple renaming of a variable and does not introduce any new functionality or change the behavior of the code. It is a clean and straightforward change that improves code readability and consistency.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch is a simple renaming of a function from "rpcrdma_receive_wc" to "rpcrdma_wc_receive". The patch also updates the function name in the assignment of "rr_cqe.done" field. This change follows the naming convention used elsewhere in the codebase. The patch does not introduce any new functionality or change the behavior of the code. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch modifies the file_operations structure in multiple files to switch from using the iterate() function to the iterate_shared() function. The iterate_shared() function is a new function that provides shared access to the directory entries, eliminating the need to lock the directory in the dcache_dir_lseek() function.

The patch also removes the unnecessary inode_lock() and inode_unlock() calls in the dcache_dir_lseek() function.

Overall, this patch improves the efficiency and correctness of the code by using the iterate_shared() function and removing unnecessary locking. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an incorrect error message in the ext4_ext_insert_index function. Currently, when the eh_entries of curp is bigger than eh_max, error messages are printed out, but the content is about logical and ei_block, which is incorrect.

The patch updates the error message to correctly display the values of eh_entries and eh_max. This will provide more accurate information to the user when this error condition occurs.

The patch has been reviewed and signed-off by Robin Dong and Theodore Ts'o, who are recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple formatting fix that adds spaces around the '>>' operator in the code. The change is purely cosmetic and does not affect the functionality of the code. It is a good practice to follow the coding style guidelines, and adding spaces around the '>>' operator is preferred. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch moves some deallocation code into the `dev_release()` function, which is a step towards using the class device lifetime management features more effectively. The patch frees the `rdev->constraints` and releases the `rdev->dev.of_node` in the `regulator_dev_release()` function, which is called when the device is released. This ensures that the memory allocated for `rdev->constraints` is properly freed and the reference to `rdev->dev.of_node` is released.

Overall, this patch improves the code by centralizing the deallocation logic and using the appropriate lifetime management features. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the MODULE_DEVICE_TABLE macro to the of_device table in the palmas driver. This macro is used to generate the necessary data structures for device probing and matching based on device tree information.

By adding this macro, the palmas driver will be able to properly match and probe devices based on their device tree entries, improving compatibility and functionality.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a few spots in the rbd_header_from_disk() function in the rbd.c file. It replaces the use of sizeof (type) with sizeof (object) to improve readability and uses a local variable to record sizes, which shortens some lines.

The patch also fixes a potential overflow issue by checking if the snap_count is greater than the maximum size allowed for the header->snapc->snaps array. If it is, the function returns -EINVAL.

Additionally, the patch fixes memory allocation issues by using the correct size when allocating memory for header->snapc, header->snap_names, header->snap_sizes, and header->object_prefix.

Overall, this patch improves the code readability and fixes potential issues, so it should be accepted in Linux -stable releases.
false || ACK

This patch is a simple correction to a warning message in the uvesafb driver. It streamlines the message and does not introduce any functional changes. The patch has been reviewed and Acked-by Wang YanQing, indicating that it has been tested and approved by another developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the Bluetooth L2CAP implementation where a channel is not disconnected when the remote device sends data without having any credits. According to the L2CAP specification, the channel should be disconnected in this situation. The patch adds the necessary code to send an L2CAP Disconnect request when there are no credits to receive data.

The patch has been signed-off by Johan Hedberg and Marcel Holtmann, who are recognized contributors to the Bluetooth subsystem.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch fixes a section mismatch warning in the pmagb-b-fb driver. The warning is caused by a missing __init annotation in the pmagbbfb_erase_cursor function. The patch removes the __init annotation from the function, which resolves the section mismatch issue.

The patch has been signed-off by two developers, Maciej W. Rozycki and Bartlomiej Zolnierkiewicz, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation:
The patch removes the dummy implementation of the ->load_lut() callback function in the mdp4_crtc_helper_funcs and mdp5_crtc_helper_funcs structures. The comment in the patch states that the ->load_lut() callback is optional, so the dummy implementation is not needed.

Since the dummy implementation is not necessary, removing it will simplify the code and reduce unnecessary overhead. Therefore, accepting this patch in Linux -stable releases is recommended.
false || ACK

The patch removes an unnecessary check before calling the function "platform_device_put". The function itself already checks if the argument is NULL and returns immediately if it is. Therefore, the check around the call is redundant and can be safely removed.

The patch has been reviewed and signed-off by multiple developers, indicating that it has gone through the necessary review process.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

This patch is a sparse fix that moves the declaration of the function `selinux_complete_init` from `security/selinux/include/security.h` to `security/selinux/ss/services.c`. The patch also removes the redundant declaration of `selinux_complete_init` from `security/selinux/ss/services.c`.

The patch is a simple code refactoring that improves code organization and removes redundancy. It does not introduce any new functionality or change the behavior of the code. Therefore, it can be accepted in Linux -stable releases.
false || NAK

The patch seems to be making a random change to the code without providing any clear explanation or justification. It is not clear why the specific bit is being switched off or what impact it will have on the functionality of the code. Without more information, it is difficult to determine whether this change is necessary or beneficial. Therefore, I would recommend not accepting this patch in Linux -stable releases.
false || ACK

Reasoning: The patch makes the "data" variable in the mpc5xxx_can_probe function const. This is a good practice as it ensures that the variable is not modified accidentally, improving code safety and readability. The patch has also been reviewed and acknowledged by Uwe Kleine-König and signed-off by Marc Kleine-Budde, indicating that it has been tested and approved by other developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch modifies the f2fs_write_end function in the fs/f2fs/data.c file. It replaces the calls to unlock_page and page_cache_release with a call to f2fs_put_page. This change is made for the purpose of achieving a uniform style in the f2fs code.

Based on the provided information, it appears that this patch is a valid improvement to the code. The use of f2fs_put_page is consistent with the style of the rest of the f2fs code, and it is likely to improve the overall maintainability and readability of the codebase.

Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a regression in the NFS code related to directio writes. The commit 57208fa7e51 did not modify the calls in direct.c, which prevented direct io from using pnfs. This patch reintroduces that capability by modifying the calls in direct.c to use the write_pageio_init() function from NFS_PROTO.

The patch is signed-off by Fred Isaman and Trond Myklebust, who are both from NetApp, indicating that it has been reviewed and tested by experts in the field.

Based on the provided information, it appears that the patch addresses a specific issue and has been properly reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the use of the NDEV_FMT and NDEV_ARG macros, which are described as "silly use-once macros that simply obfuscates the code." Removing these macros simplifies the code and makes it easier to understand. The patch also replaces the usage of the macros with direct access to the ndev->name field, which is more straightforward. Overall, this patch improves the code quality and should be accepted in Linux -stable releases.
false || ACK

This patch fixes section conflicts in mm/percpu.c by changing the declaration of the pcpu_fc_names array from "extern const char *pcpu_fc_names[PCPU_FC_NR]" to "extern const char * const pcpu_fc_names[PCPU_FC_NR]". It also updates the definition of the array in the same file from "const char *pcpu_fc_names[PCPU_FC_NR] __initdata" to "const char * const pcpu_fc_names[PCPU_FC_NR] __initconst".

The change from "extern const char *pcpu_fc_names[PCPU_FC_NR]" to "extern const char * const pcpu_fc_names[PCPU_FC_NR]" ensures that the array is treated as a constant pointer to constant data, preventing any unintended modifications to the array elements.

The change from "const char *pcpu_fc_names[PCPU_FC_NR] __initdata" to "const char * const pcpu_fc_names[PCPU_FC_NR] __initconst" ensures that the array is initialized with constant data and placed in the init section, which is appropriate for this array.

Overall, this patch resolves section conflicts and improves the correctness and maintainability of the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the pxa27x_udc_stop() function in the pxa27x_udc.c file of the USB gadget driver. It replaces the 'driver' argument with NULL in the stop_activity() function call.

The purpose of this patch is to prepare for future patches that will remove the 'driver' argument from the udc_stop() function. By making this change, the UDC (USB Device Controller) in the pxa27x_udc driver will no longer rely on the 'driver' argument.

Based on the provided information, this patch appears to be a valid and necessary change. It ensures that the UDC in the pxa27x_udc driver does not rely on the 'driver' argument before it is removed in future patches. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch implements reading support for radio 0x2057 in the N-PHY driver for the b43 wireless driver. It adds a check for the device's PHY revision and sets the appropriate value for the register based on that. This ensures that the correct register value is used for reading from the radio.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved by them.

Based on the information provided, the patch appears to be a valid and necessary addition to the driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch fixes a warning in the ti-vpe driver where the format specifier for the start_addr field is incorrect. The warning is caused by using the %x format specifier for a dma_addr_t type, which is incorrect. The patch changes the format specifier to %pad, which is the correct format specifier for dma_addr_t types. This ensures that the start_addr field is printed correctly without any warnings. The patch also includes the Reported-by and Signed-off-by tags. Overall, the patch is a simple fix for a warning and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes alignment issues in the staging/android/ion code. The patch corrects the alignment of parentheses in several places, ensuring that they match the open parenthesis. This improves code readability and maintainability.

The patch also fixes alignment issues in function arguments and struct declarations, ensuring that they match the open parenthesis. This improves code consistency and readability.

Overall, this patch addresses whitespace alignment issues and improves the code quality in the staging/android/ion code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a minor cleanup that renames the resource variable in the OMAPDSS HDMI driver. The patch does not introduce any functional changes and only improves the readability of the code.

The patch is signed-off by the original author and another contributor, indicating that it has been reviewed and tested. The change itself is straightforward and does not introduce any potential issues or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a missing newline character to the debug messages in the 'valleyview_init_gt_powersave' and 'cherryview_init_gt_powersave' functions in the 'intel_pm.c' file of the i915 driver. The missing newline character could cause the debug messages to be displayed incorrectly or concatenated with other messages.

The patch has been reviewed by Deepak S and signed-off by Ville Syrjälä and Daniel Vetter, who are both recognized contributors to the Linux kernel.

The change is a simple fix that improves the readability and consistency of the debug messages. It does not introduce any new functionality or risk of regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue with the RTC alarm interrupt numbers on the S2MPS11 device. The patch ensures that the interrupt numbers for RTC alarms 0 and 1 are consistent with the S2MPS14 device. It also adds a BUILD_BUG_ON check to ensure future generations of the device maintain the same interrupt numbers.

The patch has been reviewed and signed-off by Krzysztof Kozlowski and Lee Jones, who are recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the NFC (Near Field Communication) subsystem related to unlinking LLCP (Logical Link Control Protocol) child sockets from the parent socket. The current implementation assumes that the parent socket is always present, which is not always the case. If the parent socket is freed before its children, accessing it through the parent can lead to a null pointer dereference.

The patch modifies the llcp_sock_release() function to handle this scenario correctly. If the llcp_sock is the parent socket, it sets the corresponding entry in the local->sockets array to NULL. Otherwise, it directly unlinks the llcp_sock from the parent's list.

This change ensures that the children sockets are properly unlinked from the parent socket, regardless of whether the parent socket is still present or not. Therefore, it is a necessary fix for the NFC subsystem.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the argument name of the host_int_add_ptk function in the staging wilc1000 driver. The first parameter of the function declaration and definition now have the same name as hif_drv. This change improves code readability and consistency.

The patch has been reviewed and signed-off by the author and the maintainer of the wilc1000 driver. It is a simple and straightforward fix that does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the deprecated create_singlethread_workqueue() function and replaces it with alloc_ordered_workqueue() with WQ_MEM_RECLAIM set. This change ensures forward progress under memory pressure.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a check to validate the number of reserved QPs in the mlx4_init_qp_table function. It calculates the number of reserved QPs from both the firmware and the driver's requirements. If the sum of the reserved QPs from the top and bottom exceeds the total number of QPs supported by the device, an error message is printed and -EINVAL is returned.

This check ensures that the number of reserved QPs is within a feasible range and prevents potential issues caused by exceeding the maximum number of QPs supported by the device.

The patch also initializes the reserved_from_bot variable to the number of reserved SQPs obtained from mlx4_num_reserved_sqps() function.

Overall, this patch improves the reliability and stability of the mlx4 driver by validating the number of reserved QPs. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a missing check for the return value of sme_wait_for_reply in the sme_ap_config function in the csr/sme_blocking.c file. It ensures that if sme_wait_for_reply returns a value other than 0, the function will fail and return that value.

This is a necessary fix to ensure proper error handling and improve the stability of the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || NAK

Explanation: The patch is reverting a previous commit that set the "vblank_disable_allowed" flag to true in the mtk_drm_drv.c file. Without further context, it is difficult to determine the reason for the revert. However, if the previous commit was made to fix a specific issue or improve functionality, reverting it may reintroduce the issue or remove the improvement. Therefore, without more information, it is not recommended to accept this patch in Linux -stable releases.
false || ACK

Explanation: This patch adds support for different clock configurations for the i.MX6 Quad/Dual and the i.MX6 Solo/DualLite. It modifies the CCM_CBCMR register to reuse the gpu2d_core bits for the MLB clock configuration in the i.MX6 Solo/DualLite. This change is necessary to ensure proper clock configuration for the MLB clock on the i.MX6 Solo/DualLite platform. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the MIPS math-emu code by replacing the use of DPSIGN() with SPSIGN() in the ieee754sp_sub() function. The patch is signed-off by Ralf Baechle, who is a recognized contributor to the Linux MIPS architecture.

The change itself appears to be a quick fix-up for certain cases where the input values have specific IEEE754 classes. By using SPSIGN() instead of DPSIGN(), the patch ensures that the correct sign bit is modified.

Based on the information provided, there doesn't seem to be any obvious issues or potential regressions introduced by this patch. Therefore, I would recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch fixes a checkpatch.pl issue in the lis3l02dq_core.c file in the staging directory of the Linux kernel. The issue is related to the use of printk(KERN_ERR) instead of the preferred netdev_err(netdev, .. then dev_err(dev, .. then pr_err(..) function.

The patch replaces the printk(KERN_ERR) statement with dev_err(&spi->dev, ..) which is the recommended function for error logging in the Linux kernel.

The patch has been reviewed and signed-off by Ebru Akagunduz and Josh Triplett. It has also been signed-off by Greg Kroah-Hartman, who is a maintainer of the Linux kernel.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch replaces the direct usage of put_device() with the new power_supply_put() API. The patch has been reviewed and acked by multiple developers, including Pavel Machek, Bartlomiej Zolnierkiewicz, Sebastian Reichel, and Ingo Molnar. The change is a simple and straightforward replacement, and it improves the code by using the new API. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for DCBX firmware commands in the mlx5 driver. It introduces two new functions, `mlx5_query_port_dcbx_param` and `mlx5_set_port_dcbx_param`, which allow querying and setting the DCBX_PARAM register respectively. These functions are necessary for managing the DCBX (Data Center Bridging Exchange) parameters of the Mellanox mlx5 network adapter.

The patch also adds two new register definitions, `MLX5_REG_DCBX_PARAM` and `MLX5_REG_DCBX_APP`, which are used by the new functions.

Overall, this patch adds important functionality to the mlx5 driver and should be accepted in Linux -stable releases.
false || ACK

This patch adds a line of code to clear the "out" structure before executing the command in the mlx5_cmd_free_uar function. Clearing the structure ensures that there are no leftover values from previous commands, which could potentially cause issues or unexpected behavior.

By clearing the "out" structure, the patch improves the reliability and correctness of the mlx5_cmd_free_uar function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the iwlwifi driver's BT Coex functionality. The patch changes the condition for enabling reduced Tx power based on the BT status received from the firmware notification, rather than using the activity grading indication.

The change in the patch is correct because it ensures that reduced Tx power is only enabled when BT is on, as intended. The previous condition using the activity grading indication could lead to incorrect behavior.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and review.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch fixes a build issue in the brcmfmac driver when the CONFIG_BRCMDBG configuration option is not set. The build issue is caused by the undeclared BRCMF_FWS_TYPE_SEQ_LEN define, which was introduced in a previous commit but placed under #ifdef DEBUG.

The patch removes the conditional part of the source file and defines BRCMF_FWS_TYPE_SEQ_LEN unconditionally. This ensures that the build issue is resolved regardless of the DEBUG configuration.

The patch has been reviewed and signed-off by relevant developers from Broadcom, indicating that it has been tested and verified by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch changes the return type of the function `host_int_set_mac_chnl_num` from `s32` to `int`, which is consistent with the return type of the `wilc_mq_send` function that it calls. The data type of `s32Error` is also changed to `int` to match the return type. This change ensures consistency and avoids any potential issues related to type mismatch.

Additionally, the patch includes the necessary changes in the header file `host_interface.h` to update the function prototype.

Overall, the patch appears to be a straightforward and necessary fix, and it should be accepted in Linux -stable releases.
false || ACK

This patch adds a "_ALL" macro to validate if the set bits are in a valid range for the XT_HASHLIMIT mode. It checks if the mode bits are within the range of the defined flags using the "_ALL" macro. If the mode bits contain any unknown flag bits, it returns an error.

This patch improves the validation of the mode bits in the hashlimit_mt_check function, ensuring that only valid flag bits are accepted. It also adds the XT_HASHLIMIT_ALL macro, which includes all the valid flag bits.

By adding this validation, the patch enhances the reliability and security of the netfilter xt_hashlimit module. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a potential deadlock issue in the IPv6 address configuration code. The patch ensures that the write lock is released before calling ndisc_send_rs() in the addrconf_rs_timer() function. Without this patch, there is a possibility of a deadlock when the vxlan module calls ip6_dst_lookup() in the TX path, which holds the write lock.

The patch has been reviewed by Hannes Frederic Sowa and signed-off by Cong Wang and David S. Miller, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the function `drbd_may_finish_epoch()` in the `drbd_receiver.c` file of the `drivers/block/drbd` directory. The patch changes the function signature to take a `struct drbd_tconn` pointer instead of a `struct drbd_conf` pointer as the first argument.

The patch also removes the unnecessary wake-up call to `wake_up(&mdev->ee_wait)` in the `drbd_may_finish_epoch()` function.

The changes in the patch are correct and do not introduce any new issues. The modified function signature improves code clarity and consistency. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple code improvement that replaces a hardcoded value with a macro. The macro name "DUMMY_DATA" makes it clear that the value is dummy data. This change improves code readability and maintainability. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces PT_MAX_HUGEPAGE_LEVEL constant in the KVM MMU code. It is suggested by Paolo Bonzini and signed-off by Xiao Guangrong and Paolo Bonzini. The patch modifies several functions in the mmu.c file and adds a constant in the mmu.h file.

The patch introduces a new constant PT_MAX_HUGEPAGE_LEVEL, which is calculated as PT_PAGE_TABLE_LEVEL + KVM_NR_PAGE_SIZES - 1. This constant is used in several for loops to iterate over the page table levels. The patch replaces the hard-coded value PT_PAGE_TABLE_LEVEL + KVM_NR_PAGE_SIZES with PT_MAX_HUGEPAGE_LEVEL in these for loops.

The patch improves the readability and maintainability of the code by introducing a named constant instead of using a hard-coded value. It also makes the code more flexible, as the value of PT_MAX_HUGEPAGE_LEVEL can be easily changed if needed.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a processor identifier for the M5150 processor in the MIPS architecture. It is a simple addition to the existing list of processor identifiers in the cpu.h file. The patch has been signed-off by multiple developers and has also been submitted to the Linux MIPS mailing list for review.

Since this patch is a straightforward addition and does not introduce any new functionality or changes, it can be considered safe for inclusion in Linux -stable releases.
false || ACK

This patch modifies the xgene GPIO driver to use the gpiochip data pointer instead of relying on container_of(). This change improves the code readability and maintainability.

The patch replaces the to_xgene_gpio() function with gpiochip_get_data() to retrieve the pointer to the state container. This change is applied to all the functions in the driver that require access to the state container.

The patch also updates the xgene_gpio_probe() function to use gpiochip_add_data() instead of gpiochip_add(). This ensures that the gpiochip data pointer is properly set during the registration of the gpiochip.

Overall, this patch improves the code structure and eliminates the need for container_of() in the xgene GPIO driver. It is a clean and straightforward modification that should be accepted in Linux -stable releases.
false || ACK

This patch adds support for displaying the tx priority pause counter in ethtool stats for the be2net driver. It adds the necessary code to both the be_ethtool.c and be_main.c files to retrieve and display the tx_priority_pauseframes statistic.

The patch is straightforward and does not introduce any new functionality or changes that could potentially cause issues. It simply adds support for displaying an existing statistic. Therefore, it can be considered safe to include in Linux -stable releases.
false || ACK

This patch replaces the calls of the function cfs_trace_free_string_buffer() with kfree() in the module.c file of the Lustre staging driver. The reason for this change is that the cfs_trace_free_string_buffer() function is not required.

The patch has been reviewed and Acked-by James Simmons <jsimmons@infradead.org>. It has also been signed-off by Shivani Bhardwaj <shivanib134@gmail.com> and Greg Kroah-Hartman <gregkh@linuxfoundation.org>.

The change itself is straightforward and eliminates the unnecessary function call. It is a safe and clean modification that improves the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch corrects the calculation of the empty_bit variable in the uart_usp_ff_empty_mask function. It adds 1 to the result of ilog2(port->fifosize), which is the correct calculation according to the code logic. This fix ensures that the empty_bit value is calculated correctly and will likely prevent any potential issues related to the incorrect calculation. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch is a cleanup patch that removes undesired spaces, lines, and tabs to comply with the coding style. It does not introduce any functional changes or bug fixes. The patch has been reviewed and Acked by Pavel Machek and reviewed by Dan Carpenter, indicating that it has been reviewed by experienced developers and deemed acceptable.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the ioremap() interface in the ECAM kernel implementation to use pci_remap_cfgspace(). The current implementation of ioremap() is not safe on some architectures as it provides mappings that allow posted write transactions. This can create ordering issues for software as posted writes transactions on the CPU host bus are non-posted in the PCI express fabric.

By using pci_remap_cfgspace(), the patch ensures that non-posted writes transactions are issued for memory writes within the ECAM memory mapped address region. This guarantees the correct ordering of transactions and avoids potential issues.

The patch has been reviewed and signed-off by Lorenzo Pieralisi and Bjorn Helgaas, indicating that it has undergone thorough testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the message output in the mtd_nandecctest driver. It replaces the use of printk with pr_* functions, which is the recommended practice for printing messages in the Linux kernel. It also changes the log level for the hexdump of data from KERN_DEBUG to KERN_INFO, which provides more appropriate logging for this information.

Additionally, the patch factors out the hexdump code into a separate function, which improves code readability and maintainability.

Overall, these changes enhance the message output in the mtd_nandecctest driver without introducing any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a simple LRU memslot caching mechanism to the kvm search_memslots function. It improves the average lookup time by approximately 40% for typical guest boot workloads where only 2-3 memslots are extensively used.

The patch introduces a new atomic_t variable, lru_slot, to keep track of the most recently used memslot. When searching for a memslot, the function first checks if the requested gfn falls within the range of the most recently used memslot. If it does, the function returns the memslot without iterating through all the memslots. This optimization reduces the average lookup time significantly.

The patch has been reviewed and signed-off by two Red Hat developers, Igor Mammedov and Paolo Bonzini. It also includes the necessary header file modification.

Based on the provided information, it seems that the patch is well-implemented and provides a noticeable performance improvement. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a return value to the function `kvmppc_core_check_requests` in the PowerPC implementation of the KVM module. The return value is used to indicate whether the function wants to get back into the guest or not.

The patch modifies three files: `arch/powerpc/include/asm/kvm_ppc.h`, `arch/powerpc/kvm/book3s_pr.c`, and `arch/powerpc/kvm/booke.c`. In each of these files, the function `kvmppc_core_check_requests` is modified to return an integer value.

The addition of the return value allows requests to tell the KVM module whether it needs to go back into host state or not. This improves the flexibility and control of the KVM module.

Based on the analysis, it seems that this patch is a valid and beneficial addition to the Linux kernel. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds minimal capability for vendor command/event testing in the mac80211_hwsim driver. It allows wpa_supplicant/hostapd to send a vendor command and verify the response to that command and a vendor event.

The patch introduces a new vendor command, QCA_NL80211_SUBCMD_TEST, which is handled by the mac80211_hwsim_vendor_cmd_test function. This function parses the command data, sends a vendor event as a test, and sends a response to the command.

The patch also adds support for vendor-specific events by advertising the support for vendor-specific events with the OUI_QCA and subcmd 1.

Overall, this patch adds useful functionality for testing vendor commands and events in the mac80211_hwsim driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch makes the platform data for the INTC irq pin driver static, which allows for multi-soc build. Making the platform data static ensures that it is only accessible within the file it is defined in, preventing any potential conflicts or unintended modifications. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the structure of the sctp_transport in the Linux kernel. It adds a new member, dst_cookie, to the structure and packs it into the first cacheline hole for 64-bit hosts. This change improves the memory layout of the structure and reduces the overall size of the structure.

The modification does not introduce any new functionality or behavior changes. It only improves the memory usage and potentially improves cache performance by packing the dst_cookie member into the existing cacheline hole.

The patch has been reviewed and Acked-by Neil Horman and signed-off by Fan Du and David S. Miller.

Based on the analysis, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug introduced by commit a4b6a77b77ba4f526392612c2365797fab956014, which broke the MODVERSIONS loading of any module using memcmp on x86_32. The patch replaces VMLINUX_SYMBOL_STR with __VMLINUX_SYMBOL_STR, which resolves the issue.

The patch has been reported by Tetsuo Handa and Andy Shevchenko, and has been tested by both of them as well. It has also been signed-off by James Hogan and Rusty Russell.

Given that the patch addresses a bug and has been tested, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a check to turn off panel fitting at flip time if needed. It updates the pipe size and adjusts the fitter accordingly. The patch also includes a check for the fastboot parameter to enable this feature. The changes made in the patch seem reasonable and do not introduce any obvious issues. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds missing reset status information to the GFX hwmod for the ARM OMAP2+ AM33xx platform. It updates the GFX hwmod data structure with the .rstst_off and .st_shift information, which are necessary for proper handling of the reset status register (PRM_GFX.RM_GFX_RSTST).

The patch also includes the necessary changes to the omap_hwmod structure to reflect the new reset status register offset (rstst_offs).

Overall, this patch is a necessary fix to ensure proper handling of the reset status register for the GFX hwmod on the AM33xx platform. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a section mismatch in the board file for the ARM OMAP4 keyboard. The variable `keypad_pads` is referred to by `keypad_data`, which is not `__initdata`. Therefore, `keypad_pads` should not be `__initdata` either.

The patch removes the `__initdata` attribute from the declaration of `keypad_pads`, ensuring that it is consistent with `keypad_data`.

The patch has been reviewed by Felipe Balbi and signed-off by Bjarne Steinsbo and Tony Lindgren.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds the delivery system type at the fe struct for the mb86a16 frontend driver in the Linux media subsystem. The patch adds the SYS_DVBS value to the delsys field of the dvb_frontend_ops structure. This indicates that the frontend supports the DVB-S delivery system.

The patch is signed-off by the author and is a simple addition that improves the functionality of the driver. It does not introduce any new code or modify existing code, so it is unlikely to introduce any regressions or issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the iommu_map() function where the wrong paddr value was being used in the trace_map() function. The patch adds a new variable "orig_paddr" to store the original paddr value and uses it in the trace_map() function. This ensures that the correct paddr value is reported in the trace_map() function.

The patch also includes proper sign-offs from the authors.

Based on the analysis, it appears that this patch is a valid fix for the bug and should be accepted in Linux -stable releases.
false || ACK

This patch improves the code clarity by replacing the use of container_of() with rb_entry() to handle the rbtree. The patch has been reviewed and acked by multiple developers, indicating that it has been thoroughly reviewed and deemed acceptable for inclusion in the Linux -stable releases.
false || ACK

This patch fixes a bug in the perf header code. The check_magic_endian() function is responsible for determining the version and endianness of the perf data file. However, if the magic number indicates the same endianness, the version number is not updated, causing confusion.

The patch correctly sets the version number to PERF_HEADER_VERSION_2 before checking the magic number. This ensures that the version number is always updated correctly, regardless of the endianness.

The patch has been reviewed by multiple developers and has received positive feedback. It also includes a link to the discussion thread on the Linux kernel mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code by using rb_entry instead of container_of to get a node as it is iterated in the rbtree. rb_entry is semantically more appropriate in this context. The patch also includes the necessary changes to the code.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the workqueue creation in the nfsd module. The old interface is deprecated, so it is necessary to update it. The functionality remains the same, but the new interface ensures that only one work item is running at a time. This is important for the nfsd4_process_cb_update() function, which assumes that no other thread is running it and that no new callbacks are starting while it's running.

The patch has been reviewed and signed-off by Jeff Layton and J. Bruce Fields, indicating that it has been reviewed and tested by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes unnecessary parentheses in the code. The use of parentheses in this context does not provide any additional clarity or functionality. The removal of these parentheses improves code readability and reduces unnecessary clutter. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch improves the debugging capabilities for critical host errors in the xHCI driver. It adds code to print out the contents of the TRB (Transfer Request Block) and the event ring when certain errors occur. This information can be very helpful for users in diagnosing and troubleshooting issues with their USB devices.

By providing this additional debugging information, users no longer need to recompile their kernel to get information about what went wrong. This improves the user experience and makes it easier for them to identify and resolve issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes a pointless cast in the sha1_mb_mod_init() function in the sha1_mb.c file. The cast is unnecessary because kzalloc() already returns a void pointer. The patch simplifies the code and improves readability without affecting functionality. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a second parent option for the debug base clock in the socfpga clock driver. It allows the debug base clock to be bypassed from the main PLL to the OSC1 clock. The patch adds a new function `clk_periclk_get_parent` to get the correct parent for the debug base clock. It reads the bypass register `CLKMGR_DBCTRL` to determine the parent clock source.

The patch also updates the `__socfpga_periph_init` function to use the new `clk_periclk_get_parent` function and adds support for multiple parent names. It uses the `of_clk_parent_fill` function to fill the `parent_name` array with the parent names obtained from the device tree.

Overall, this patch improves the functionality of the socfpga clock driver by adding support for a second parent option for the debug base clock. It is a necessary enhancement and should be accepted in Linux -stable releases.
false || ACK

This patch adds error handling for the return value of the register_netdev() function in the driver probe routine. If the register_netdev() function fails, it returns an error code, and this patch adds a check for that error code. If the function fails, it will now return -ENODEV.

This is a good practice as it ensures that any errors during the registration of the network device are properly handled. By returning -ENODEV, the driver can indicate to the caller that the network device registration failed.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces two helper functions, `its_read_baser` and `its_write_baser`, for accessing the ITS BASERn register. These functions provide a convenient way to read and write the register value.

The patch also modifies the `its_alloc_tables` function to use the new helper functions instead of directly accessing the register. This improves code readability and maintainability.

Overall, the patch is a clean and useful addition to the codebase. It does not introduce any new functionality or change existing behavior. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch fixes a bug in the oz_handle_app_elt() function in the ozpd.c file of the ozwpan staging driver. The patch adds a check to prevent a kernel crash when the app_id is zero or greater than OZ_APPID_MAX. The patch has been reviewed and Acked by Chris Kelly, indicating that it has been tested and found to be correct. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch exports the functions bdi_alloc_node() and bdi_put() in the bdi module. These functions are required by MTD (Memory Technology Devices) and need to be called directly. The patch has been reviewed by Christoph Hellwig and signed-off by Jan Kara and Jens Axboe.

Exporting these functions will allow MTD to use them directly, improving the functionality and compatibility of the Linux kernel. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the videobuf2-core module where the q->bufs[vb->index] is not filled in correctly before calling buf_init(). The patch adds the missing assignment statement q->bufs[vb->index] = vb in two places where it is needed.

By filling in q->bufs[vb->index] correctly, the patch ensures that the buffer is initialized correctly and avoids potential issues with memory allocation and buffer initialization.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the staging driver for the rts5208/ms card reader. The functions mg_get_local_EKB and mg_get_ICV were not properly releasing resources before returning with an error code. This patch adds a jump to the appropriate label to ensure that the resources are properly released before returning.

The patch has been reviewed and signed-off by Quentin Lambert and Greg Kroah-Hartman, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the trailing comma in enum declarations in the ACPICA code. The trailing comma is causing issues with the SunStudio compiler, so removing it will resolve the compilation error. The patch has been signed-off by multiple developers from Intel, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the incorrect marking of some interrupts as reserved in the ARM mx53 platform. It updates the interrupt source for these interrupts to the correct values. The changes are straightforward and do not introduce any new functionality or potential issues.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and verification. Therefore, it can be considered safe to include in Linux -stable releases.
false || ACK

This patch updates the ioctl version in the dm driver to 4.32.0. It is important to keep the ioctl version up to date so that userspace can detect the changes made in the dm-stats from the 4.2 merge. The patch also updates the DM_VERSION_MINOR and DM_VERSION_EXTRA values accordingly.

The patch has been reported by Alasdair G Kergon and signed-off by Mike Snitzer. It is a simple and straightforward update that does not introduce any new functionality or changes. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch is a cleanup in the cifs_read() function in the fs/cifs/file.c file. It addresses a Smatch complaint about the cast to "int" in the min_t() macro potentially changing very large values of current_read_size into negative values, resulting in the wrong value being returned by min_t(). The patch removes the const keyword and changes the type of the second argument of min_t() from int to uint.

The patch is correct and improves the code by ensuring that the correct value is returned by min_t(). It does not introduce any new functionality or behavior changes. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch adds support for loopback mode in the spi-imx driver. Loopback mode can be activated by setting the LBC (LoopBack Control) bit in the ECSPI_TESTREG register. The patch modifies the mx51_ecspi_config() function to read the current value of the ECSPI_TESTREG register, set or clear the LBC bit based on the SPI_LOOP flag in the configuration, and write the modified value back to the register.

The patch also updates the spi_imx_probe() function to include the SPI_LOOP flag in the mode_bits field of the spi_master structure. This ensures that the loopback mode is enabled when the spi-imx driver is used.

Overall, the patch adds a useful feature to the spi-imx driver without introducing any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch switches over to use common extra gpio methods, reducing code duplication on SH-ARM. The patch also acknowledges that these functions should be replaced by correct gpio functions in the future.

The patch has been Acked by Magnus Damm and signed-off by Kuninori Morimoto and Rafael J. Wysocki.

Overall, the patch improves code organization and acknowledges the need for future improvements. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code structure by moving the multi device fixup code into a separate helper function called "denali_multidev_fixup". This makes the code more readable and maintainable.

The helper function sets various parameters related to multi device support, such as the logical page size, erase size, write size, oob size, chip size, page shift, erase shift, bbt erase shift, chip shift, pagemask, and ECC parameters. These parameters are adjusted based on the value of "devnum", which is read from the "DEVICES_CONNECTED" register.

The patch also removes the duplicate code in the "denali_init" function that performs similar operations for multi device support. Instead, the "denali_multidev_fixup" function is called to handle these operations.

Overall, this patch improves code organization and reduces code duplication, making it easier to understand and maintain. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes the use of macros `pci9111_ai_range_[gs]et` and replaces them with direct register access. This change makes the code more readable and eliminates the reliance on a specific variable name. The patch also fixes a bug where the range is not set correctly in `pci9111_ai_insn_read` function. The patch ensures that the range is set correctly before reading the data. Overall, the patch improves the code quality and functionality of the driver.
false || ACK

This patch adds a new parameter to the 'dbg_check_name()' debugging function in the UBIFS file system. The new parameter is a pointer to 'struct ubifs_info *c'. This change is necessary for future commits that will switch to debugfs. The patch also marks the parameters as 'const'.

The patch is a preparation for future changes and does not introduce any functional changes. It only adds a new parameter to a debugging function and updates the function calls accordingly. The patch is small and straightforward, and it does not introduce any risk or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch makes the function "target_send_reply_msg" static, as it is not referenced outside of the "ldlm_lib.c" file. This improves code organization and reduces the risk of accidental misuse or conflicts with other functions. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the openvswitch code to use the flow hash during the flow lookup operation. By using the flow hash, the patch can detect hash collisions and avoid unnecessary flow key comparisons in the flow lookup process.

The patch adds a condition to check if the flow's mask is equal to the given mask and if the flow's hash is equal to the calculated hash. This ensures that the flow being looked up matches both the mask and the hash, improving the efficiency of the lookup operation.

Overall, this patch improves the performance of the flow lookup operation in openvswitch and should be accepted in Linux -stable releases.
false || ACK

This patch fixes a coding style issue in pcl818.c by correcting a line that exceeds 80 characters. The change is simple and does not affect the functionality of the code. It has been reviewed by Ian Abbott and signed-off by Simon Guo and Greg Kroah-Hartman.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch moves the print statement inside the `identity_mapping_add()` function in the ARM mm code. The print statement provides useful information about the idmap being set up. By moving the print statement, the information will be printed at the appropriate place in the code, making it easier to understand and debug.

The patch also includes the necessary Cc's and Signed-off-by's.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the incorrect Probe Response offload support for Interworking (IEEE 802.11u) in the ath6kl driver. Since ath6kl does not support this feature, it is necessary to remove the capability flag that was incorrectly added. This patch ensures that the driver is not advertising support for a feature it does not actually have. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds the capability for a device tree source (DTS) author to flag a particular timer in the system as the system timer. If the chosen node contains a "system-timer=<&foo>" entry, then that handle will be used to determine the system timer. If no such entry exists, then the first found timer will be used, which is the current behavior.

The patch modifies the time_init() function in the microblaze kernel timer.c file. It first checks if the "system-timer" property exists in the chosen node of the device tree. If it does, it retrieves the phandle value and uses it to find the corresponding timer node. If the "system-timer" property does not exist, it prints an informational message and continues with the default behavior of finding the first compatible timer node.

The patch also adds a check to ensure that a valid timer node is found. If no valid timer node is found using the "system-timer" property, it falls back to finding a compatible timer node using the of_find_compatible_node() function.

Overall, this patch adds a useful capability for DTS authors to specify the system timer and improves the robustness of the timer initialization process. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the clarity of the code by simplifying the interrupt handling logic in the iwlwifi driver. It replaces the previous structure with a clearer if-else statement, making it easier to understand the flow of the code. The patch also renames the functions to better reflect their purpose.

Overall, this patch does not introduce any new functionality or fix any bugs, but it improves the readability and maintainability of the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the SM pairing parameters negotiation in the Bluetooth module. It improves the negotiation process by taking into account the features of the host and connection requirements. The patch simplifies the key negotiation method by not exchanging any key if the system is in the "not pairable" state. It also updates the pairing command structure to include the necessary parameters for key distribution and authentication.

Overall, this patch improves the security and functionality of the Bluetooth module. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch.pl warning by replacing the use of printk(KERN_ERR, ...) with pr_err() in the staging/line6/driver.h file. The use of pr_err() is preferred over printk(KERN_ERR, ...) according to the checkpatch.pl warning.

The patch is signed-off by Stefan Hajnoczi and Greg Kroah-Hartman, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch aims to reduce contention on the gfs2_log_lock in the GFS2 file system. It modifies the functions gfs2_trans_add_meta and gfs2_trans_add_data to check whether the buffer_head is already in a transaction. If it is, the patch avoids taking the gfs2_log_lock.

The patch adds a check for buffer_pinned(bh) before acquiring the gfs2_log_lock. If the buffer is pinned, it sets the TR_TOUCHED flag and skips acquiring the lock. This helps to reduce contention on the gfs2_log_lock and improves performance.

The patch also adds a label "out" to skip the unlock_buffer(bh) call if the buffer is pinned. This ensures that the buffer remains locked until the end of the function.

Overall, this patch provides a necessary optimization to reduce contention on the gfs2_log_lock and improve performance in the GFS2 file system. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch increases the dump size in the ipr driver to 80MB, which will help in debugging several new SAS controllers. The patch has been signed-off by Wen Xiong and Acked-by Brian King, indicating that it has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for DMA resume capability in the Skylake ASoC driver. It saves the DMA position when the stream is suspended and resumes the stream from that position when it is resumed. This is a useful feature that improves the efficiency and reliability of the audio stream. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the mxcmmc driver where the default value for available voltages is not set correctly when not provided. The patch ensures that the default value is set to MMC_VDD_32_33 | MMC_VDD_33_34 if no other value is specified.

The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch simplifies the NULL comparison in the iio_dummy_evgen driver by replacing the explicit comparison with the simpler form using the negation operator. This change improves code readability and reduces the chances of introducing errors.

The patch has been reviewed and signed-off by the author and the maintainer of the driver. It also includes the specific file and line numbers where the changes are made.

Overall, the patch is a straightforward and safe improvement to the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds SERDES initialization values for the AR9462 2.1 chip in the ath9k driver. It initializes the PCIe SERDES and PCIe SERDES Low Power arrays with specific values. These values are necessary for proper operation of the AR9462 2.1 chip.

The patch also includes the necessary changes in the ar9462_2p1_initvals.h file to define the new arrays.

Based on the information provided, it appears that this patch is necessary for proper functioning of the AR9462 2.1 chip in the ath9k driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the i40e driver by only polling on the NVM semaphore if there is time left on a previous reservation. It also adds more information to debug messages. The patch has been Acked by Jesse Brandeburg and tested by Jim Young.

The changes in the patch are beneficial as they optimize the NVM acquisition process and provide more detailed debug information. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the PWM related clocks to the meson-gxbb clock driver, allowing them to be referenced as PWM source clocks. The patch also updates the definitions in the include/dt-bindings/clock/gxbb-clkc.h file to include the new clock IDs.

The patch is signed-off by Neil Armstrong and Michael Turquette, who are recognized contributors to the Linux kernel.

Overall, this patch is a straightforward addition that enhances the functionality of the meson-gxbb clock driver. It does not introduce any new risks or issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the lpfc driver where the fw_func_mode field is defined too small, causing it to not recognize the dual-chute mode. The patch changes the data type of fw_func_mode from uint8_t to uint32_t, which allows it to accommodate the required values.

The change is straightforward and does not introduce any new functionality or potential issues. It only corrects a data type mismatch, ensuring that the driver can properly recognize the dual-chute mode.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds error handling to the watchdog_ping function in the watchdog core. Currently, any errors returned by the watchdog_ping function are ignored by the watchdog core. This patch modifies the watchdog_write and watchdog_ioctl functions to propagate the error code returned by watchdog_ping to the user space.

By propagating the error code, the watchdog daemon can be informed about possible hardware errors or if the underlying device driver gets unregistered. This improves the overall reliability and error reporting of the watchdog functionality.

The patch has been reviewed by Guenter Roeck and signed-off by multiple developers, including Alexander Usyskin and Tomas Winkler from Intel. The changes are minimal and do not introduce any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the NVMe driver where the number of submission and completion queues were being set incorrectly. The patch changes the function `nvme_get_features` to `nvme_set_features` to correctly set the number of queues by calling the Set Features command instead of the Get Features command.

The patch also removes the unused `result` parameter from the `nvme_get_features` function.

The patch has been tested and reported by Kwok Kong and signed-off by Matthew Wilcox, who is a recognized contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch marks the functions ft_tpg_alloc_fabric_acl(), ft_register_configfs(), and ft_deregister_configfs() as static in tcm_fc/tfc_conf.c because they are not used outside this file. This eliminates the warnings for missing prototypes for these functions.

The patch has been reviewed and signed-off by Rashika Kheria and Josh Triplett. It also includes the sign-off from Nicholas Bellinger.

The changes in this patch are localized to the tcm_fc/tfc_conf.c file and do not affect any other parts of the kernel. Making these functions static improves code organization and reduces the risk of accidental use outside of the intended scope.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds two clocks, "ckil" and "rtc_gate", which are needed by the mxc rtc driver for the imx35 platform. The patch also registers these clocks with appropriate clock devices.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an error handling issue in the mv88e6xxx_set_port_state function in the mv88e6xxx driver. The patch correctly returns the error code if the _mv88e6xxx_reg_read function returns an error. This ensures that the error is properly propagated and handled.

The patch has been reviewed by Guenter Roeck and Andrew Lunn, and the issue was reported by the kbuild test robot. It has also been signed-off by David S. Miller, the maintainer of the drivers/net/dsa/mv88e6xxx.c file.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch improves the code in the staging/octeon-usb/octeon-hcd.c file by cleaning up the usage of hcpriv. It replaces the packing of both pipe handle and submit handle into the same field with separate fields for each. This improves code readability and maintainability.

The changes made in this patch are correct and do not introduce any new issues. The patch has been reviewed and signed-off by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the dma_ops_free_addresses function in the amd_iommu.c file. Instead of setting the need_flush flag, it directly flushes the iommu tlb when the address plus the number of pages exceeds the next_bit value of the range.

The change seems reasonable and improves the code by simplifying it. It ensures that the iommu tlb is properly flushed when necessary, which is important for correct memory management and avoiding potential issues.

Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the issue with no audio output for the internal speaker and headphone on Asus AiO ZN270IE with ALC256. It enables GPIO 2 as an amp and pulls it high. The patch adds a new fixup entry for Asus AiO ZN270IE in the ALC256 fixup array, which sets up GPIO2 for the speaker amp. It also adds a new PCI quirk entry for Asus AiO ZN270IE in the alc269_fixup_tbl.

Based on the provided information, the patch appears to be a valid fix for the audio issue on Asus AiO ZN270IE. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a code refactoring that absorbs the `pci224_attach_common()` function into the `pci224_auto_attach()` function. The `pci224_attach_common()` function is now only called from `pci224_auto_attach()`, so it makes sense to merge them together.

The patch also updates the function signature of `pci224_auto_attach()` to match the new merged implementation.

The changes in this patch do not introduce any new functionality or behavior, but rather improve code organization and readability. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch replaces the use of sscanf with kstrtoint, which is a safer and more modern function for converting strings to integers. The patch also adds error handling for the conversion, returning the error code if something goes wrong.

The patch also improves the validation of the input values. It checks if the level is within the acceptable range (0-3) and returns -EINVAL if it is not. Similarly, it checks if the reset value is 1 and returns -EINVAL if it is not.

Overall, this patch improves the code by using a safer function for string to integer conversion and adds better input validation. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the missing platform_set_drvdata function call in da9052_bat_probe. Without this call, calling platform_get_drvdata in da9052_bat_remove would return NULL, which could lead to potential issues or crashes.

By adding platform_set_drvdata, the driver sets the driver-specific data for the platform device, allowing it to be retrieved later when needed.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch adds a log message to indicate if DP link training fails in the Nouveau display driver. It adds an error message when the variable "ret" is less than 0, indicating a failure in the link training process. This log message can be helpful for debugging and troubleshooting purposes.

Since this patch adds a useful log message without introducing any new functionality or potential issues, it can be considered safe to include in Linux -stable releases. Therefore, I recommend accepting this patch.
false || ACK

This patch adds error handling for the nla_put_be32 function in the bonding driver's bond_fill_info function. The nla_put_be32 function is used to add a 32-bit attribute to a netlink message. If the function fails to add the attribute, it returns an error code. 

In the original code, the return value of nla_put_be32 is not checked, which means that if the function fails, the error is ignored and the code continues execution. This can lead to potential issues if the attribute is not added correctly.

The patch adds a check for the return value of nla_put_be32 and if it fails, it jumps to a label called "nla_put_failure". This ensures that if the function fails, the error is properly handled.

By adding this error handling, the patch improves the robustness of the bonding driver and helps prevent potential issues caused by failed attribute additions. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the MC13783 RTC functionality in the MX31PDK board. It modifies the mc13xxx_platform_data structure to include the MC13XXX_USE_RTC flag. This indicates that the RTC functionality of the MC13783 PMIC should be used.

Since this patch adds support for a specific hardware feature and does not introduce any new issues, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the topology file of ABI v4 in the ASoC subsystem. It allows the kernel to continue parsing the topology file generated by ABI v4, instead of quitting. The patch also updates the ABI version macros to reflect the current version (v5) and the oldest version supported (v4).

The patch includes necessary changes in the sound/soc/soc-topology.c file to validate the ABI version. If the ABI version is greater than the current version or less than the oldest version supported, an error message is logged.

This patch is important for maintaining backward compatibility and ensuring that users can continue using topology files generated by ABI v4. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a request for P2P (Peer-to-Peer) capabilities during target initialization in the ath6kl driver. P2P capabilities are requested using the ath6kl_wmi_info_req_cmd function with the appropriate flags. If the request fails, an error message is printed, but it does not affect the status returned by the function.

This patch is a reasonable addition to the code as it enhances the functionality of the driver by requesting P2P capabilities. It does not introduce any obvious issues or regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the code in the intel_gvt_init function in the drm/i915/gvt module. It adds a new code path that is executed when the initialization of GVT fails. In this code path, the i915.enable_gvt variable is set to 0, indicating that GVT is disabled.

This change is beneficial because it allows userspace to easily detect when GVT fails to load as requested. By setting i915.enable_gvt to 0, userspace can check the value of this variable and take appropriate action if GVT is not available.

The patch also includes a testcase and has been reviewed by Zhi Wang, providing additional confidence in its correctness.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue where the regulatory_hint() function is called before the wiphy is registered. By setting the ar->wiphy_registered flag to true when the wiphy is registered and false when it is unregistered, the patch ensures that the regulatory_hint() function is only called when the wiphy is registered.

This patch is necessary to prevent potential issues that may arise from calling regulatory_hint() before the wiphy is registered. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the vidioc_create_bufs ioctl operation in the blackfin media driver. It has been tested and signed-off by multiple developers. The changes are limited to the bfin_capture.c file and do not appear to introduce any new issues or regressions. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch improves the V4L2 compliance of the saa7134 driver by filtering audio modes that came from the tuner in radio mode. It keeps only MONO and STEREO audio modes. This change ensures that only valid audio modes are reported for radio mode, which aligns with V4L2 standards. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch improves the initialization order of the bcm2835aux SPI driver by requesting the interrupt only after the hardware is initialized. It also replaces the use of irq_of_parse_and_map with platform_get_irq.

The change in initialization order ensures that the interrupt is only requested after the hardware is fully initialized, which can prevent potential issues with interrupt handling. The use of platform_get_irq is preferred over irq_of_parse_and_map as it provides a more standardized and reliable way to obtain the IRQ number.

Additionally, the patch includes a reset of the SPI-HW block before registering the SPI master, which ensures a clean state for the SPI controller.

Overall, these changes improve the reliability and stability of the bcm2835aux SPI driver, making it suitable for inclusion in Linux -stable releases.
false || ACK

Reasoning:
The patch converts the usage of wait_for(I915_READ(reg)) to intel_wait_for_register() in the drm/i915 driver. This change improves efficiency by using the hybrid wait_for() contained within intel_wait_for_register(). Additionally, it reduces code bloat by avoiding numerous inlined loops. The patch has been reviewed and signed-off by the relevant developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch exports the "tegra_chip_id" variable, which is needed for powergating and reset handling code to differentiate between Tegra variants. The patch also includes the necessary header file changes to export the variable.

The patch has been reviewed and tested by Stephen Warren, who is an acknowledged expert in Tegra platforms. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug where the timer used the incorrect clock rate for the ARMadillo800eva board. The patch moves the clock rate initialization before the timer initialization, ensuring that the correct clock rate (24MHz) is used.

The patch has been reviewed and Acked-by Kuninori Morimoto, indicating that it has been tested and approved by another developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the deprecated create_singlethread_workqueue() function and replaces it with alloc_ordered_workqueue() with WQ_MEM_RECLAIM set. This change ensures forward progress under memory pressure.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a typo and an issue in the creation of the vid and mixer debugfs entries in the sti_compositor_debugfs_init() function. The patch correctly renames the function from sti_compositor_debufs_init() to sti_compositor_debugfs_init() and updates the function calls accordingly.

The patch also fixes the loop conditions in the for loops that iterate over the vid and mixer arrays. The patch correctly checks if the vid or mixer element is not NULL before calling the corresponding debugfs initialization function.

Overall, the patch addresses a bug in the code and improves the stability and functionality of the sti_compositor module. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch deletes the 'rtl819xU_cmd_isr' function that is not used anywhere in the driver. It also fixes a sparse warning in the r8192U_core.c file. Since the function is not used and the patch fixes a warning, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch moves the struct mei_me_client from hw.h to mei_dev.h as it is not part of the hardware API. The struct does not need to be packed. Additionally, it adds kdoc documentation for the structure.

The patch is a clean and straightforward change that improves the organization of the code and adds documentation. It does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch encapsulates the boot vector code into a function for cpuidle in the ARM Exynos architecture. It introduces a new function called exynos_cpu_set_boot_vector() which sets the boot vector address and flags. This improves code readability and maintainability.

The patch has been reviewed by Tomasz Figa and signed-off by Daniel Lezcano and Kukjin Kim, who are recognized contributors in the Linux kernel community.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the dev_priv pointer to the intel_gmbus structure in the drm/i915 driver. This change allows freeing up the bus->adaptor.algo_data pointer and makes it available for use with the bitbanging fallback algorithm. The patch has been reviewed and signed-off by the relevant developers.

The patch modifies the intel_gmbus structure by adding the dev_priv pointer. This pointer is then used in the gmbus_xfer and intel_setup_gmbus functions to access the drm_i915_private structure. This change ensures that the correct dev_priv pointer is used in these functions.

Overall, the patch appears to be well-implemented and addresses a specific issue in the drm/i915 driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes an unused argument from the function cx24123_pll_writereg(). The argument "p" of type struct dvb_frontend_parameters is not used within the function, so it can be safely removed. This change does not affect the functionality of the code and improves code readability by removing unnecessary code.

The patch has been signed-off by Mauro Carvalho Chehab, who is a recognized contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a timeout for ramrod replies in the cnic driver for the bnx2x device. The timeout is implemented using the wait_event_timeout() function, which allows the driver to make forward progress and reset the chip if it has encountered parity errors.

The patch also initializes the kcqe structure and sets the completion_status to FCOE_KCQE_COMPLETION_STATUS_ERROR. This ensures that if the wait_event_timeout() times out, the completion_status will be set to indicate an error.

Additionally, the patch sets the CTX_FL_DELETE_WAIT flag and queues a delayed work task to delete the connection after a timeout of 2000 milliseconds.

Overall, this patch improves the robustness of the cnic driver by adding a timeout for ramrod replies and handling error conditions properly. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves error handling in the qcom_scm_probe function of the qcom_scm driver. Previously, when devm_clk_get failed to acquire the core clock, the failure was ignored and the core_clk was explicitly set to NULL. However, now the patch returns the failure when devm_clk_get fails for the core clock.

This change improves the error reporting and ensures that any failure in acquiring the core clock is properly handled. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch modifies the drm/dp/mst code to reply with ACK instead of NACK to UP requests. This change ensures that receivers are not confused by the NACK response. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review. Additionally, the patch does not introduce any new functionality or potential issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch fixes a bug in the hpsa driver where it returns -1 on kzalloc failure instead of the correct error code -ENOMEM. The bug was reported by Dan Carpenter and reviewed by Mike Miller. The patch has also been signed-off by Stephen M. Cameron and Christoph Hellwig.
false || ACK

This patch adds hardware capability bits and feature tags to /proc/cpuinfo for the "Vector Packed Decimal Facility" and the "Vector Enhancements Facility 1" on s390 architecture. These additions provide more detailed information about the vector facilities supported by the CPU.

The patch modifies the `arch/s390/include/asm/elf.h`, `arch/s390/kernel/processor.c`, and `arch/s390/kernel/setup.c` files to include the necessary definitions and logic for reporting the new vector facilities.

The changes in `arch/s390/include/asm/elf.h` add the hardware capability bits `HWCAP_S390_VXRS_BCD` and `HWCAP_S390_VXRS_EXT` for the Vector Packed Decimal Facility and the Vector Enhancements Facility 1, respectively.

The changes in `arch/s390/kernel/processor.c` add the corresponding strings "vxd" and "vxe" to the `hwcap_str` array, which is used to display the hardware capabilities in `/proc/cpuinfo`.

The changes in `arch/s390/kernel/setup.c` update the `elf_hwcap` variable to include the new hardware capability bits if the machine has the Vector Enhancements Facility (MACHINE_HAS_VX). Additionally, it checks for the presence of specific facilities (facility 134 and 135) and sets the corresponding hardware capability bits accordingly.

Overall, this patch enhances the reporting of vector facilities on s390 architecture, providing more accurate information about the CPU capabilities. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the FSI clock in the sh73a0 ARM architecture. It is required for the FSI sound driver. The patch has been tested and acknowledged by multiple developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the setting of EQ (interrupt) delay multiplier in the lpfc driver. It adds a loop to configure the EQ delay multiplier for interrupt coalescing using MODIFY_EQ_DELAY for all EQs created. The patch also modifies the lpfc_modify_fcp_eq_delay function to take a uint32_t parameter instead of uint16_t.

The patch has been reviewed by Hannes Reinecke and signed-off by multiple developers from Emulex and Odin. It also includes changes in the lpfc_sli.c and lpfc_sli4.h files to update function prototypes and declarations.

Based on the provided information, the patch appears to be a valid fix for the issue and has undergone review and testing. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a helper function called tcp_tsopt_ecr_before to the tcp_input.c file in the Linux kernel. The purpose of this helper function is to prepare for the main RACK patch.

The patch itself is relatively small and does not introduce any major changes or new functionality. It simply adds a helper function and modifies an existing function to use this helper function.

Based on the information provided, there are no obvious issues or concerns with this patch. It appears to be a straightforward addition that is necessary for the main RACK patch. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds hardware capabilities and structures for SR-IOV E-Switch in the mlx5 driver. It updates the HCA capabilities and HW struct to include the necessary capabilities for the upcoming Ethernet Switch. The patch also adds new fields and updates existing fields in the mlx5_ifc_cmd_hca_cap_bits and mlx5_ifc_nic_vport_context_bits structures.

The patch is signed-off by multiple developers, including Saeed Mahameed, Or Gerlitz, and David S. Miller. It also includes changes to the include/linux/mlx5/mlx5_ifc.h header file.

Based on the provided information, it seems that this patch is necessary for supporting SR-IOV E-Switch functionality in the mlx5 driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes timeout issues in the qat_hal_check_ae_alive, qat_hal_init_esram, and qat_hal_clear_gpr functions in the qat_common/qat_hal.c file. 

The patch changes the data type of the 'times' variable from unsigned int to int, as the value of 'times' should be -1 after the loop. This change ensures that the loop terminates correctly when the timeout condition is reached.

The patch also updates the timeout condition in the 'if' statements to check if 'times' is less than 0, instead of checking if 'times' is equal to 0. This change ensures that the correct error message is printed and the appropriate error code is returned when the timeout condition is reached.

Overall, this patch improves the reliability and correctness of the qat_hal_check_ae_alive, qat_hal_init_esram, and qat_hal_clear_gpr functions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a simple typo in the greth.c file by correcting the spelling of "reseting" to "resetting". The change is a minor fix that improves the accuracy of the debug message. It does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Based on the patch description, it appears that the functionality provided by the "drv_priv" pointer is no longer needed. The patch reverts the commit that added this functionality, indicating that no driver has turned up needing it. Additionally, the patch author mentions that they have implemented the functionality they wanted in a different way.

Therefore, it is reasonable to accept this patch and remove the "drv_priv" pointer from the code.
false || ACK

Explanation: The patch removes the unnecessary "const" modifier from the SOC_ENUM_SINGLE_DECL macro. Since SOC_ENUM_SINGLE_DECL already contains the const modifier, it is redundant to have it in its users. The patch has been reviewed and Acked by multiple developers, indicating that it has been thoroughly reviewed and deemed acceptable. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for dma_memcopy to the bcm2835-dma driver. It also includes a check for an error condition in bcm2835_dma_create_cb_chain. The patch has been tested using dmatest for all enabled channels.

The changes in the patch are well-documented and reviewed by multiple developers. The code changes appear to be correct and do not introduce any obvious issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch fixes a 'maybe-uninitialized' warning in the bcm2835_clock_choose_div_and_prate() function by initializing the best_rate variable to 0. This ensures that the variable is always initialized before being used. The patch also includes the necessary Signed-off-by and Fixes tags, as well as the Reported-by and Reviewed-by tags. Overall, the patch is a simple and straightforward fix for a warning and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds an event buffer cache to the USB DWC3 core. The cache is used to copy triggered events from the event buffer and process them later in the bottom half handler. This is necessary to implement a workaround for a known erratum in recent DWC3 releases.

The patch allocates memory for the cache using devm_kzalloc, and checks if the allocation was successful. If the allocation fails, it returns an error. This ensures that the cache is properly allocated and avoids potential memory allocation failures.

The cache is added to the dwc3_event_buffer structure in the core.h header file.

Overall, this patch adds a necessary feature to the USB DWC3 core and handles memory allocation properly. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for allocating multiple MSIs at the same time in the armada_370_xp_msi_alloc function. It allows the MSI_FLAG_MULTI_PCI_MSI flag to be added to the msi_domain_info structure. This change enables the allocation of multiple MSIs in a more efficient manner.

The patch also updates the armada_370_xp_msi_free function to clear the bits corresponding to the freed MSIs in the msi_used bitmap.

Overall, this patch improves the functionality of the armada-370-xp irqchip driver and does not introduce any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds AFTR mode support for the Exynos3250 SoC. AFTR mode brings reduced energy consumption and is a prerequisite for more advanced power saving modes. The patch modifies the firmware.c and pm.c files to add the necessary support for AFTR mode.

The changes in the Exynos3250 SoC AFTR mode support compared to Exynos4x12 SoCs are:
- Different secure firmware calls are used.
- Different wakeup mask is used.
- An additional wakeup mask needs to be set.
- The C2_STATE BOOT mode flag needs to be set/cleared pre/post AFTR.

The patch has been reviewed and tested by multiple developers from Samsung, including Kyungmin Park and Chanwoo Choi. It has also been signed-off by Bartlomiej Zolnierkiewicz and Kukjin Kim.

Based on the provided information, it seems that the patch is well-tested and addresses the necessary changes for AFTR mode support on the Exynos3250 SoC. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch fixes a build problem by adding the missing argument to the ap136_pci_init function. The change is necessary to ensure that the function is called correctly. The patch has been reviewed and signed-off by the relevant maintainers, indicating that it has been tested and approved. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a call to pwm_apply_args() after requesting the PWM device in the lp8788 backlight driver. This ensures that the polarity and period of the PWM are initialized according to the information provided in pwm_args.

The patch also includes a comment stating that pwm_apply_args() should be removed once the atomic PWM infrastructure is in place and the driver makes use of it.

Based on this analysis, the patch appears to be a necessary and temporary fix to correctly initialize the PWM configuration. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the FSI (Full Serial Interface) driver in the ASoC (Audio System on Chip) subsystem. The bug causes noise on playback when the FSI DMAEngine is not stopped properly at the start/stop time.

The patch adds a call to dmaengine_terminate_all() to ensure that the DMA engine is stopped before starting or stopping the FSI stream. This will prevent the noise issue during playback.

The patch has been reviewed and signed-off by Kuninori Morimoto and Mark Brown, who are both recognized contributors to the Linux kernel.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds functionality to reclaim reboot state when re-establishing clientid in NFSv4.0. It sets NFS4CLNT_LEASE_EXPIRED and clears NFS4CLNT_LEASE_CONFIRM when encountering v4.0 errors and recoverable errors on EXCHANGE_ID for v4.1. It also clears and starts reclaiming reboot state when encountering -NFS4ERR_STALE_CLIENTID.

This patch improves the stability and reliability of the NFS client by handling lease errors and reclaiming reboot state when necessary. Therefore, it should be accepted in Linux -stable releases.
false || NAK

Explanation: The patch removes the __devexit annotation from the function ie6xx_wdt_debugfs_exit(). However, this function is still called from ie6xx_wdt_probe() as part of its error cleanup path. The __devexit annotation is used to indicate that a function is only used during device initialization and can be discarded after that. Removing this annotation without changing the calling function can lead to a section mismatch warning during the kernel build. Therefore, the patch should not be accepted in Linux -stable releases.
false || ACK

This patch adds a missing of_node_put to decrement the reference count. The of_node_put is added in the error handling path when rdata allocation fails. Additionally, two more of_node_put calls are added at the end of the function to release the acquired device tree node references.

The patch is necessary to prevent a memory leak and ensure proper resource management. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch marks the rapl_ids array as __initconst, which means its memory can be released after initialization is done. This change is safe because the RAPL ids are only tested in the rapl_init() function, which is itself an __init function. Additionally, the change does not affect the functionality of the MODULE_DEVICE_TABLE() file2alias, as it only cares about the symbol name, not the section.

The patch has been reviewed and Acked-by Jacob Pan <jacob.jun.pan@linux.intel.com>. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the NFC digital driver where the command pending flag was never set. The patch adds the necessary code to set the flag to 1. This fix ensures that the same command is not sent twice, which improves the reliability and efficiency of the NFC digital driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the clarity of the page allocator code by replacing the use of set_page_private and page_private with set_freepage_migratetype and get_freepage_migratetype functions. The patch also includes necessary changes in mm/page_alloc.c and mm/page_isolation.c files.

The patch has been reviewed and Acked by multiple developers, including KAMEZAWA Hiroyuki, Yasuaki Ishimatsu, and Mel Gorman. It has also been signed-off by Minchan Kim, Andrew Morton, and Linus Torvalds.

Overall, the patch seems to be well-tested and improves the code readability without introducing any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the debug module parameter from the cypress_m8.c file in the USB Serial driver. The reason for removing it is that all usb-serial modules are now using dev_dbg() for debugging, so the debug module parameter does not serve any purpose and can cause confusion if someone tries to use it.

The patch is a clean and straightforward removal of the debug module parameter. It does not introduce any new code or changes to the existing functionality. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch improves the readability of the code by using defined macros instead of hard-coding values. It replaces the hard-coded value JUMP_LABEL_TRUE_BRANCH with the macro JUMP_LABEL_TYPE_TRUE_BRANCH, and JUMP_LABEL_TYPE_FALSE_BRANCH for better readability.

The patch has been Acked-by Steven Rostedt and Jason Baron, indicating that they have reviewed and approved the changes.

The changes in the patch are straightforward and do not introduce any new functionality or potential issues. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch adds missing "break" statements in the ath5k_hw_set_spur_mitigation_filter function in the ath5k driver. The missing "break" statements were causing the code to fall through to the next case statement, which could lead to incorrect calculations and behavior.

By adding the "break" statements, the code will correctly exit the switch statement after each case is executed, ensuring that the correct calculations and behavior are applied for each case.

The patch also includes a reported-by tag and a signed-off-by tag, indicating that the patch has been tested and reviewed by the appropriate individuals.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a code style cleanup in the rt2800lib.c file of the rt2x00 driver. It does not introduce any functional changes, but only improves the code style and readability.

The patch has been reviewed and Acked-by two developers, Gertjan van Wingerde and Ivo van Doorn. This indicates that the patch has been reviewed and approved by these developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes a pointless copy operation in the nfsd4_exchange_id function. The comment above the removed code indicates that the two verifiers are already the same. Therefore, removing the copy operation does not affect the functionality of the code. The patch has been signed-off by a recognized contributor.
false || ACK

Reasoning:
The patch removes unused variables and the corresponding lines of code that assign values to these variables. Removing unused variables and unnecessary lines of code improves code readability and maintainability. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch removes the "cpu" argument from the rcu_pending() function and replaces per_cpu_ptr() with this_cpu_ptr(). The argument to rcu_pending() is guaranteed to always be the current CPU, so there is no need to pass it as an argument. This change simplifies the code and improves readability.

The patch has been reviewed and signed-off by Paul E. McKenney and reviewed by Pranith Kumar. It also compiles without any errors or warnings.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the logging of link up/down messages in the ixgbevf driver. It replaces the use of hw_dbg with dev_info to log the messages. The patch has been tested and signed-off by multiple developers from Intel.

Using dev_info for logging is the recommended approach in the Linux kernel, as it ensures that the messages are properly logged and can be easily accessed by users and administrators. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch modifies the mx51_clocks_init() function in the ARM i.MX5 platform to make it a DT (Device Tree) call. This change is necessary because i.MX51 becomes a DT only platform. The patch also removes the mx51_clocks_init_dt() function, as it is no longer needed.

The patch is a clean and straightforward modification that aligns with the changes in the platform. It removes unnecessary code and improves the code structure by making the function a DT call. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation:
The patch removes the use of __devinitdata, which is no longer needed since CONFIG_HOTPLUG is going away as an option. This change does not affect the functionality of the code and is a cleanup. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch modifies the dw_shutdown() and dw_suspend_noirq() functions in the dw_dmac.c file. The patch replaces the call to platform_get_drvdata(pdev) with the already available dw variable.

The change improves code readability and eliminates redundant function calls. It also ensures that the dw variable is used consistently throughout the functions.

The patch has been reviewed and Acked-by Viresh Kumar and Reviewed-by Felipe Balbi, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the SYS-DMAC clocks in the r8a7796 SoC. The patch adds the necessary clock definitions for the sys-dmac2, sys-dmac1, and sys-dmac0 modules. These clocks are required for proper functioning of the DMA controller in the r8a7796 SoC.

The patch has been signed-off by two developers, Ulrich Hecht and Geert Uytterhoeven, indicating that it has been reviewed and tested.

Based on the information provided, it appears that the patch is necessary for proper functioning of the r8a7796 SoC and does not introduce any regressions or issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces two new functions, `vm_entry_controls_reset_shadow` and `vm_exit_controls_reset_shadow`, which reset the shadow values of the entry and exit control fields of the VMCS. This is done to avoid unnecessary read and write operations on these fields.

The patch also modifies the `nested_vmx_vmexit` function to use the new functions to reset the shadow values before initializing the entry and exit control fields.

Overall, this patch improves the efficiency of handling the entry and exit control fields in the VMCS, which is beneficial for performance. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch cleans up the ieee80211_i.h header file in the mac80211 subsystem. It removes a duplicate declaration of the ieee80211_tdls_peer_del_work function and ensures that it is properly declared only once. The patch also adds the missing declaration of the ieee80211_tdls_peer_del_work function.

The patch has been signed-off by the relevant developers, indicating that it has been reviewed and tested. It does not introduce any new functionality or changes that could potentially cause regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple renaming of the variable "pvRecvBuffer" to "recv_buf" in the wilc_mq_recv function in the wilc_msgqueue.c file. The renaming is done to follow the Linux kernel coding style, which prefers lowercase variable names with underscores.

The patch does not introduce any functional changes or bug fixes. It only improves the code readability and consistency with the rest of the Linux kernel codebase.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for host-protection-interruption in the s390 architecture for KVM. It checks if the guest is allowed to use ESOP and if so, it sets the host-protection-interruption bit in the scb_s->ecb field.

The patch has been Acked-by Christian Borntraeger and Signed-off-by David Hildenbrand and Christian Borntraeger, indicating that it has been reviewed and approved by experts in the field.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch modifies the key initialization of tcp_fastopen cookies to use the net_get_random_once function. This change ensures that if the user sets a custom key, net_get_random_once is called at least once to prevent overwriting the user-provided key when the first cookie is generated later on.

The patch also adds a new function, tcp_fastopen_init_key_once, which generates a dummy secret key but does not publish it. This is necessary to avoid regenerating a new key on the first invocation of tcp_fastopen_cookie_gen.

Overall, this patch improves the key generation process for tcp_fastopen cookies and ensures that user-provided keys are not overwritten. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the USB option driver to use the usb_{get,set}_serial_data functions to access usb-serial data. The patch also updates the option_probe function to use usb_set_serial_data to set the serial data, and the option_send_setup function to use usb_get_serial_data to get the serial data.

The patch appears to be correct and does not introduce any new issues. It improves the code by using the recommended functions for accessing usb-serial data. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for pause/resume functionality in cyclic DMA mode for the omap-dma driver. The patch modifies the omap_chan structure to include a new boolean field "paused" to keep track of the pause state of the DMA channel.

The patch also adds the omap_dma_pause() and omap_dma_resume() functions to handle the pause and resume operations respectively. These functions check if the DMA channel is configured in cyclic mode and then perform the pause or resume operation accordingly. If the DMA channel is not in cyclic mode, an error is returned.

The patch also modifies the omap_dma_terminate_all() function to avoid stopping the DMA channel twice if it is already paused. This ensures that the DMA channel is properly terminated and unlinked only when necessary.

Overall, this patch adds a useful feature to the omap-dma driver without introducing any regressions or breaking existing functionality. It has been reviewed and tested by multiple contributors, including the original author, and has received Acked-by tags from Vinod Koul and Tested-by tag from Janusz Krzysztofik.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code by using strncmp instead of strcmp for comparison, which ensures that the final %NUL terminator is not omitted. Additionally, it uses sizeof to determine the size of the id->name buffer, which is statically defined. These changes prevent potential buffer overflows.

The patch has been Acked-by Samuel Ortiz and Signed-off-by Tomas Winkler, indicating that it has been reviewed and approved by other developers.

Therefore, based on the improvements made and the positive reviews, I recommend accepting this patch in Linux -stable releases.
false || ACK

Based on the patch, it enables the BT Coex RRC feature only if the firmware advertises support for it. The patch adds a new capability flag, IWL_UCODE_TLV_CAPA_BT_COEX_RRC, to the iwl_ucode_tlv_capa enum. It also adds a new function, iwl_mvm_bt_is_rrc_supported, which checks if the BT Coex RRC feature is supported by the firmware.

The patch modifies the iwl_send_bt_init_conf_old function to use the iwl_mvm_bt_is_rrc_supported function to determine whether to enable the BT_COEX_RRC flag in the bt_cmd->flags field. This ensures that the BT Coex RRC feature is only enabled if it is supported by the firmware.

Overall, the patch adds support for the BT Coex RRC feature and ensures that it is only enabled when supported by the firmware. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a memory leak in the blk-mq code by freeing the hctx->ctx_map inside the blk_mq_free_queue() function. The change is straightforward and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds JPEG specific sequence initialization registers and bit definitions to the CODA7541 driver in the Linux kernel. These additions are necessary for proper JPEG encoding and decoding functionality. The patch also includes the necessary register definitions for JPEG parameter configuration, restart interval, thumbnail enable, size, and offset.

Since these additions are specific to the CODA7541 hardware, they do not affect other platforms or drivers. Therefore, accepting this patch in Linux -stable releases is appropriate and will not introduce any regressions or compatibility issues.
false || ACK

This patch modifies the lnet_ping() function in the staging/lustre/lnet/lnet/api-ni.c file. It changes the type of the "ids" parameter from "lnet_process_id_t *" to "lnet_process_id_t __user *". This change properly marks the userspace pointer of "ids" and also resolves sparse warnings about different address spaces.

The patch has been signed-off by Oleg Drokin <green@linuxhacker.ru> and Greg Kroah-Hartman <gregkh@linuxfoundation.org>, who are recognized contributors to the Linux kernel.

Based on the provided information, the patch appears to be a valid and necessary fix. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for handling linkup/linkdown WMI events in the wil6210 driver. When the firmware indicates a linkup event, the patch calls the `netif_carrier_on` function to turn on the carrier for the network device. Similarly, when the firmware indicates a linkdown event, the patch calls the `netif_carrier_off` function to turn off the carrier.

This functionality is important for accurately reflecting the link status of the network device. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the mac80211 module where the mutex is not unlocked in the error path of the ieee80211_ibss_join() function. The patch adds the missing mutex_unlock() call before returning -EINVAL. This ensures that the mutex is always unlocked, even in error cases.

The patch has been reviewed and signed-off by Dan Carpenter and John W. Linville, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch constifies the `ieee80211_qos_parameters` structure, which is only passed as the source parameter to the `memcpy` function. Since the fields of the `def_qos_parameters` structure are never modified, it can be declared as const. The patch adds the `const` qualifier to the declaration of the `def_qos_parameters` structure, making it const. This change improves code readability and helps prevent accidental modification of the structure.
false || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch fixes a naming collision of the variable "nr_irqs" in two different files: "irq.c" and "prm_common.c". The variable is renamed to "nr_irq" in both files to avoid the collision.

The patch also updates the usage of the variable in the code to reflect the new name.

Overall, the patch addresses a potential issue with variable naming and ensures consistency in the codebase. It does not introduce any new functionality or change the behavior of the code.

Therefore, I believe accepting this patch in Linux -stable releases would be appropriate.
false || ACK

This patch adds the missing forward declarations of the structures `cpuidle_state_kobj` and `cpuidle_driver_kobj` in `cpuidle.h`. Forward declarations are necessary to inform the compiler about the existence of these structures before they are used in the code.

By adding these forward declarations, the code will compile without any errors or warnings related to these structures. This patch does not introduce any functional changes to the code, but it improves code readability and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a memory leak in the pinctrl-mtk-common.c file of the MediaTek pinctrl driver. The patch correctly frees the 'configs' variable if an error occurs during the parsing of the device tree configuration. Additionally, the patch adds proper error handling and cleanup code in case of failures during the pin and function mapping process.

The patch has been reviewed by multiple developers and has received their Reviewed-by tags, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the ioh_gpio_get function in the gpio-ml-ioh.c file. It ensures that the return value of the function is clamped to [0,1] by using the ret = !!(val) design pattern. This is important because it allows gpio_chip .get() calls to return negative error codes and propagate to drivers.

The patch has been reviewed by Linus Walleij and has received the necessary Cc's. It is a simple and straightforward change that improves the functionality of the ioh_gpio_get function without introducing any potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: This patch adds entries in the HID table and references to the bytcht_da7213 driver. It also adds support for DLGS7212 and DLGS7213 platforms using the bytcht_da7213 driver. These changes are necessary to enable the BYT/CHT+DA7213 machine driver. The patch has been reviewed and Acked-by two Intel developers, Pierre-Louis Bossart and Vinod Koul. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch constifies the socket argument of the tcp_create_openreq_child() function. The const keyword indicates that the function does not modify the socket argument, which improves code readability and helps prevent accidental modifications.

The patch also updates the function declaration in tcp_minisocks.c to match the constification of the socket argument.

Overall, this patch is a simple and straightforward improvement that does not introduce any new functionality or risk. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code in drivers/acpi/osl.c by making a seemingly useless check more understandable. It also rearranges the code related to the check to make fewer checks. The patch adds documentation to explain the purpose of the check and prevents false positive lockdep complaints.

The changes in the patch are necessary to avoid potential issues with lockdep and improve code readability. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch moves the initialization of the 'status' variable into the error handling code in the function rsi_send_data_pkt(). This change makes the code more logical and improves readability.

The patch also includes appropriate sign-offs from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds platform device registration for the HDMI audio codec in the OMAP4 Pandaboard and PandaboardES boards. This allows for audio transmission through the HDMI output. The patch is signed-off by the relevant contributors and the code changes are straightforward.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch addresses an issue where the SDIO settings return to default when power is removed from the device. The patch adds a function "ath6kl_sdio_config" to reconfigure the SDIO settings after power is reapplied. The patch also includes error handling in case the configuration fails.

The patch has been reviewed by James Minor and Steve deRosier, and signed-off by Kalle Valo. It is a small and focused change that fixes a specific issue, without introducing any new functionality or potential regressions. Therefore, it is suitable for inclusion in Linux -stable releases.
false || ACK

Explanation: The patch removes a test for an impossible condition in the esas2r_ioctl.c file of the SCSI driver. The condition being checked is "path > 0 || tid > ESAS2R_MAX_ID". However, the patch correctly identifies that the condition "tid > ESAS2R_MAX_ID" is impossible because tid is not used in the code before this check. Therefore, removing this check will not affect the functionality of the code and will simplify it. The patch has been reported by Dan Carpenter and signed-off by Bradley Grove and James Bottomley, indicating that it has been reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch enables PM runtime code for new R-Car Gen2 SoCs, specifically for r8a7792 (R-Car V2H), r8a7793 (R-Car M2-N), and r8a7794 (R-Car E2). The patch adds these SoCs to the list of compatible machines in the sh_pm_runtime_init() function.

Enabling PM runtime for these new SoCs will ensure proper power management and improve energy efficiency. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch fixes a bug in the code by changing the return value from 0 to NULL in the host1x_bo_lookup() function. This change ensures that when the gem object is not found, the function returns a proper NULL value instead of 0. This is a correct and necessary fix, and it does not introduce any new issues. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch replaces the usage of the deprecated hid_output_raw_report function with the hid_hw_output_report function in the HID wiimote driver. The new function is equivalent to the old one for Bluetooth transport layer, so it is safe to use the new API where available.

The patch has been reviewed and signed-off by Benjamin Tissoires and David Herrmann, who are both recognized contributors in the Linux kernel community.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the unnecessary setting of the clock divider for each transfer in the i2c-meson driver. Instead, it sets the clock divider in the probe function, as the bus frequency is fixed and set in the device tree. This optimization reduces the overhead of setting the clock divider for each transfer, improving the performance of the driver.

The patch also removes the "frequency" member from the "struct meson_i2c" as it is no longer needed.

The changes in the patch are correct and improve the efficiency of the i2c-meson driver. Therefore, it should be accepted in Linux -stable releases.
false || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch modifies the error messages in the omapdrm driver's framebuffer creation code. Instead of printing the validation failures as error messages, the patch changes them to debug messages. This is done to prevent userspace from flooding the kernel log with error messages.

The change from `dev_err` to `dev_dbg` indicates that the error messages are no longer considered critical and are intended for debugging purposes only. This change improves the overall log readability and reduces unnecessary noise in the kernel log.

The patch has been reviewed by Laurent Pinchart and Tomi Valkeinen, who are both recognized contributors to the Linux kernel. Their reviewed-by tags provide additional assurance of the patch's quality.

Therefore, based on the provided information, I would recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning: The patch makes the variable "pseudo_primary" static, which means it will only be accessible within the scsi_debug.c file. Since the variable is only used in scsi_debug.c, making it static improves code encapsulation and reduces the risk of unintended access or modification from other parts of the codebase. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough scrutiny. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch removes an unnecessary check before calling the vfree() function in the asihpi_adapter_remove() function in the hpioctl.c file of the ALSA asihpi driver. The vfree() function already performs input parameter validation, so the check is redundant.

The patch has been reviewed and signed-off by Markus Elfring and Takashi Iwai, indicating that it has been tested and approved by the relevant developers.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Explanation: 

This patch moves the declaration of the variable ErrXDCode to the file smilsub.c, which is the only file that uses it. This improves code organization and reduces unnecessary declarations in other files. The patch also removes the extern declaration of ErrXDCode from the header file smil.h and the unnecessary declaration in smilmain.c.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough review and testing.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch improves error reporting during invalid guest state emulation in the KVM VMX module. It sets the appropriate exit reason and suberror code when instruction emulation fails, allowing userspace to properly handle the error. This enhancement improves the overall stability and reliability of the KVM subsystem. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the rawv6_send_hdrinc() function in the net/ipv6/raw.c file. It switches from passing msg->iov_iter.iov to passing msg itself as an argument. This change simplifies the code and makes it more readable.

The patch also updates the memcpy_fromiovecend() function call to use msg->msg_iter.iov instead of the previous 'from' argument. This ensures that the correct data is copied into the skb->transport_header.

Overall, this patch improves the clarity and maintainability of the code without introducing any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch moves the failure logging into the `isl29028_set_als_scale()` function, reducing the overall amount of code in the driver. It also ensures that the failure message is logged when `isl29028_set_als_scale()` fails.

The patch is well-structured and does not introduce any new issues. It improves code readability and maintainability by centralizing the failure logging. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a simple typo in the code by correcting the spelling of "reseting" to "resetting" in two files: zd_usb.c and zd_mac.c. The patch does not introduce any new functionality or change the behavior of the code. It only improves the readability and correctness of the error messages.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch renames the function `r8192_wx_set_retry` to `_rtl92e_wx_set_retry` in the `rtl8192e` staging driver. This change follows the naming convention used in other `rtlwifi` devices. The patch also updates the references to the renamed function in the `r8192_wx_handlers` array.

The patch is a simple renaming change that improves code consistency within the `rtlwifi` drivers. It does not introduce any functional changes or bug fixes. Therefore, it can be considered a safe and acceptable change for inclusion in Linux -stable releases.
false || ACK

This patch introduces a new function called reset_shadow_stats() which moves the code for resetting shadow counters into a separate function. This is done as preparation for moving it into its own object. The patch also modifies the existing perf_stat__reset_stats() function to call the new reset_shadow_stats() function after resetting the stats for each perf_evsel.

The patch is well-structured and follows the coding style of the Linux kernel. It introduces a new function to improve code organization and maintainability. The changes are localized to the perf/builtin-stat.c file and do not affect other parts of the kernel.

Based on the provided information, the patch appears to be a valid and beneficial addition to the Linux kernel. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch corrects the number of bitrates in the mwifiex driver by initializing the ".n_bitrates" field to the size of the "mwifiex_rates" array instead of hardcoding it to 14. This ensures that the number of bitrates is always accurate and reflects the actual size of the array.

By making this change, the patch improves the correctness and maintainability of the code. It eliminates the need to manually update the ".n_bitrates" field whenever the "mwifiex_rates" array changes in size.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for detecting the interlock-and-broadcast-suppression (IBS) facility on s390 architecture. The patch modifies the `sclp_info` structure to include a new field `has_ibs` and updates the `sclp_facilities_detect` function to set the value of `has_ibs` based on the corresponding bit in the `sccb` structure.

The patch has been reviewed and signed-off by Christian Borntraeger and David Hildenbrand, who are both experts in the s390 architecture. This indicates that the patch has been thoroughly reviewed and tested.

The addition of the `has_ibs` field and the corresponding detection logic is necessary for proper support of the IBS facility on s390. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the "dev_ready" function to the bcm47xxnflash driver in the MTD subsystem. It also sets the "chip_delay" value to 50. These changes improve the functionality and performance of the driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the assignment of the "owner" field in the platform_driver structure. This field is not necessary as it will be populated by the driver core. Therefore, the patch is correct and should be accepted in Linux -stable releases.
false || ACK

This patch modifies the tm6000 driver in the Linux kernel to use a 16 scancode bitmask for IR. This change allows the driver to support NEC remotes with 24 or 32 bits. The patch adds the necessary code to set the scanmask to 0xffff, which is needed for this support.

Based on the provided information, the patch appears to be a valid and necessary modification to the tm6000 driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch renames the firmware image filename for the xc4000 tuner driver to a more meaningful name for public release. The new filename includes the version number and build number of the firmware. This change improves clarity and makes it easier for users to identify the correct firmware version. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a termios/port flags mismatch in the tty serial driver. The patch ensures that the ASYNC_CTS_FLOW and ASYNC_CHECK_CD flags are set/cleared after calling the port driver's .set_termios method. This ensures that the termios settings are properly configured based on the available hardware support.

The patch also reloads the cflag from termios after calling uart_change_speed, which allows the port driver to override the flags if necessary.

Overall, this patch addresses a bug and improves the correctness of the tty serial driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch moves the qos_request field from the saa7134_fh structure to the saa7134_dev structure. The qos_request field is a global field and not a per-filehandle field, so it makes sense to move it to the saa7134_dev structure.

Moving the qos_request field to the saa7134_dev structure ensures that it is shared among all filehandles and avoids duplicating the field for each filehandle. This improves code clarity and reduces memory usage.

The patch also updates the references to the qos_request field in the saa7134_streamon and saa7134_streamoff functions to use the dev->qos_request field instead of fh->qos_request. This ensures that the correct qos_request field is used.

Overall, this patch improves code organization and reduces duplication. It is a clean and necessary change, so it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the MTD NAND driver to ignore ECC errors when scanning for simple bad block markers. The patch adds checks to handle the return value of the `mtd->read_oob()` function and returns 0 if the return value is -EUCLEAN or -EBADMSG, indicating an ECC error.

Ignoring ECC errors when scanning for bad block markers is reasonable because the relevant markers are assumed to be non-0xFF for true bad blocks. By ignoring ECC errors, the scanning process can continue without being interrupted by non-relevant errors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch moves the bus watcher initialization from the deprecated __initcall to the device_initcall. This change ensures that the bus watcher is properly initialized during device initialization, which is the correct place for it. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for setting the minimum inline header mode for VFs in the mlx5 driver. It introduces a new function `mlx5_modify_nic_vport_min_inline` which allows modifying the minimum inline header mode for a specific VF. The function sets the `min_wqe_inline_mode` field in the `nic_vport_context` structure and calls `mlx5_modify_nic_vport_context` to update the VF's context.

The patch also adds the necessary declarations for the new function in the header files `mlx5_ifc.h` and `vport.h`, and exports the `mlx5_query_nic_vport_min_inline` function.

Overall, this patch adds a useful feature to the mlx5 driver and does not introduce any obvious issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug where the auto defragmentation process would run even when the file system is frozen. The patch adds calls to sb_start_write() and sb_end_write() functions to ensure that the file system is not modified while it is frozen. This is a necessary fix to prevent potential data corruption or inconsistencies when the file system is frozen.

The patch has been reviewed and signed-off by Miao Xie and Chris Mason, who are both recognized contributors to the Btrfs file system code.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch simplifies the ternary operators in the mwifiex_config_scan function by using the GNU extension. The patch has been reviewed and signed-off by multiple developers. The changes in the patch do not introduce any new functionality or behavior, but rather simplify the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch cleans up the manual bias level transitions in the ASoC adau17x1 CODEC driver. Instead of manually setting the bias levels in the suspend and resume functions, the patch sets the suspend_bias_off flag to true in the codec driver structure. This makes the code shorter and cleaner.

The patch also removes the adau17x1_suspend function, as it is no longer needed. The set_bias_level function is now called with SND_SOC_BIAS_OFF in the suspend function and SND_SOC_BIAS_STANDBY in the resume function.

Overall, this patch improves the code readability and simplifies the bias level transitions in the adau17x1 CODEC driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adjusts the default values of some encoder parameters in the s5p-mfc driver. The changes set the default values of MAX_QP and GOP size encoder parameters to firmware recommended default values. This will enable applications to get a better encoded output using the default settings itself.

The changes in the patch seem reasonable and are aimed at improving the performance of the encoder. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the .owner and .bus fields from the b53_spi_driver structure in the b53_spi.c file. The reason for this removal is that the module_spi_driver() function is used, which automatically sets these fields. Removing these fields simplifies the code and avoids redundancy. The patch has been signed-off by the author and the maintainer. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch updates the format string specifier in the HID cp2112 driver to use the correct specifier for the size_t type. The original code used the %d specifier, which is incorrect for size_t. The patch replaces %d with %zd in two places in the code.

Using the correct format specifier is important for proper printing of the values. By using %zd, the code ensures that the size_t values are printed correctly.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the initialization of certain registers in the nva3_ram_ctor function in the nouveau driver. It replaces direct register assignments with calls to the ramfuc_stride function, passing the register address, stride value of 4, and the partition mask. This change allows for more flexibility in handling different partitions.

The patch appears to be a valid improvement to the code, as it enhances the functionality and maintainability of the driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch renames the function pga_event to out_drv_event, which is more descriptive and accurate. The function is used as an event handler for the OUT_DRV widgets. The patch also updates the references to the renamed function in the code. This change improves code readability and maintainability. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for reading the micbias voltage from the device property in the max98090 codec driver. It allows the micbias voltage to be configured through ACPI or device tree, providing flexibility for different hardware configurations.

The patch first reads the micbias voltage from the device property using the `device_property_read_u32` function. If the property is not found or the value is out of range, it falls back to a default value of 2.8v and prints a message to inform the user.

Then, it updates the micbias voltage register in the codec with the read value using the `snd_soc_update_bits` function.

Overall, this patch improves the configurability of the max98090 codec driver and ensures that the micbias voltage is set correctly based on the device property. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a regression introduced by a previous commit in the patch_hdmi.c file of the ALSA driver. The pin NID assignment was not done correctly, causing a regression. The issue was reported by Annie Liu and the patch was signed-off by Takashi Iwai.

The patch correctly assigns the pin NID to spec->pins[0].pin_nid, fixing the regression.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the assignment of the "owner" field in the platform_driver structures for the s390 block drivers "dcssblk" and "xpram". The "owner" field is not necessary as it will be populated by the driver core. Therefore, removing this assignment is safe and does not affect the functionality of the drivers.
false || ACK

This patch fixes a section mismatch warning in the sparc32 architecture. The warning occurs because the function `leon_callin()` references the function `leon_configure_cache_smp()` in the wrong section. The patch corrects this by annotating the `leon_configure_cache_smp()` function with the `__cpuinit` attribute, which matches the section of `leon_callin()`.

The patch has been reviewed and signed-off by the relevant developers. It is a simple and straightforward fix that addresses a warning in the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a logging issue in the staging/ion/chunk_heap module. Currently, the module is printing a success message at the "info" log level when creating the chunk heap. However, success messages should be logged at the "debug" log level instead.

The patch changes the log level from "info" to "debug" by replacing the `pr_info` call with `pr_debug`. This ensures that the success message is only printed when debugging is enabled.

Since this patch fixes a logging issue and improves the code's adherence to logging best practices, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the definition of the contiguous bit positions in the PTE and PMD for the arm64 architecture. It introduces the CONT_PTES and CONT_RANGE_OFFSET macros to handle contiguous pages. The addition of these macros will enable better management and handling of contiguous memory ranges in the arm64 architecture.

Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

The patch marks the resiliency_test function as __init, indicating that it is only called during the bootstrap process and can be freed after boot. This change improves memory management and reduces memory usage after boot. The patch has been reviewed and Acked-by Christoph Lameter, indicating that it has been reviewed and approved by an expert in the field. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the SFP insertion interrupt on X550EM devices with SFPs. It checks if the device ID is IXGBE_DEV_ID_X550EM_X_SFP and enables the interrupt accordingly. The patch also includes the necessary signed-off and tested-by tags.

Based on the provided information, it seems that the patch is correctly implemented and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch removes a redundant NULL check for the "brd" parameter in the dgnc_finalize_board_init() function. The "brd" parameter is already checked for NULL in the dgnc_found_board() function, so the additional check is unnecessary. The patch also removes the check for the DGNC_BOARD_MAGIC value, which is assigned once in the dgnc_found_board() function. Since the dgnc_finalize_board_init() function is only called from dgnc_found_board(), it is guaranteed that the "brd" parameter is not NULL and has the correct magic value. Therefore, the patch is safe to be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue where the regulatory data for 8000 series devices only contains 7000 series channels. By initializing the correct nvm channel list for 8000 devices, the regulatory data will be accurate. The patch also includes changes to the iwl_parse_nvm_mcc_info function in iwl-nvm-parse.c and iwl-nvm-parse.h, as well as the iwl_mvm_get_regdomain function in mac80211.c to pass the correct parameters to iwl_parse_nvm_mcc_info.

The patch has been reviewed and signed-off by Arik Nemtsov and Emmanuel Grumbach, both from Intel. The changes are necessary for proper functioning of the iwlwifi driver for 8000 series devices. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code by using the core function irq_set_affinity() instead of a custom implementation. It also switches to using for_each_active_irq() instead of iterating over all irq descriptors. These changes simplify the code and make it more maintainable.

The patch has been reviewed and signed-off by Thomas Gleixner and James Hogan, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the imp_known_replied_xid when trying to resend an already replied replay request. This is necessary because the xid of the replay request could be less than the current imp_known_replied_xid. The patch also adds the imp_known_replied_xid update after adding the request to the unreplied list.

The patch has been reviewed by multiple developers and has been tested. It addresses a specific issue and does not introduce any new functionality or potential regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch enables module alias autogeneration for the AMBA driver "nomadik-rng.c". By adding the MODULE_DEVICE_TABLE macro, the kernel will automatically generate the module alias information for this driver. This is a standard practice for AMBA drivers and will improve the overall usability and compatibility of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a trivial typo in the comment for the PCI_EXP_LNKCAP_CLKPM constant in the include/uapi/linux/pci_regs.h file. The typo is corrected from "L1 Clock Power Management" to "Clock Power Management". This change improves the accuracy and clarity of the comment.

Since this is a trivial fix and does not introduce any functional changes, it can be safely accepted in Linux -stable releases.
false || ACK

This patch removes the assignment of the local variable mq_rq in the mmc_blk_issue_rq_rq() function. The variable mq_rq is not used after this assignment, so removing it will not affect the functionality of the code. This change improves code clarity and removes unnecessary confusion. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds an optimized swahb32() byteswap helper for ARMv6 and later processors. It renames the existing swab16() helper to swahb32() and defines __arch_swab16() in terms of it. This allows calls to both swab16() and swahb32() to be optimized.

The patch has been reviewed and signed-off by multiple developers, including Dave Martin, Nicolas Pitre, and Russell King.

The patch is useful for converting 32-bit Thumb instructions between integer and memory representation on BE8 platforms.

Overall, the patch seems to be well-implemented and provides optimizations for ARMv6 and later processors. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a missing of_node_put() function call after calling of_parse_phandle(). The of_node_put() function is used to release the reference to the device node obtained from of_parse_phandle() when it is no longer needed. Failing to call of_node_put() can lead to a memory leak.

The patch also includes the necessary Cc and Signed-off-by tags, as well as an Acked-by tag from a relevant maintainer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes the __init annotation from the gpmc_hwecc_bch_capable() function in the gpmc-nand.c file. The reason for removing the __init annotation is that the gpmc_nand_init() function will be called from another driver's probe() function, and dropping the __init annotation prevents section mismatches.

The patch has been Acked by Grant Likely, indicating that it has been reviewed and approved by another developer.

Based on the information provided, it seems reasonable to accept this patch in Linux -stable releases.
false || ACK

This patch converts the set_frontend and get_frontend functions in the cx24110 driver to use DVBv5 parameters instead of the dvb_frontend_parameters struct. This allows for better compatibility with the supported standards and improves the overall functionality of the driver.

Additionally, the patch fills in the supported delivery systems at the dvb_frontend_ops struct, which provides more accurate information about the capabilities of the driver.

Overall, this patch improves the functionality and compatibility of the cx24110 driver, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch adds the necessary mfd cell information for the axp288 power key device. It defines the resources for the power button part of the axp288 PMICs, including the PEK_DBR and PEK_DBF interrupts.

The patch also adds the axp20x-pek mfd cell, which includes the axp288_power_button_resources resources.

Overall, this patch adds the required support for the power button functionality of the axp288 PMICs, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch is a simple renaming of the type PVOID to "void *" in the file Misc.c in the bcm staging driver. The change is consistent with the coding style used in the Linux kernel, where "void *" is preferred over PVOID. The patch also includes the necessary changes in the function declarations and function definitions.

There are no functional changes introduced by this patch, and it only affects the naming of a type and its usage in function signatures. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch introduces the use of platform_register_drivers() and platform_unregister_drivers() functions in the omap_drm_init() and omap_drm_fini() functions respectively. These new helpers simplify the implementation of multi-driver modules and properly handle the failure to register one driver by unregistering all previously registered drivers.

By using these new helpers, the code becomes more concise and easier to understand. It also ensures that all drivers are properly registered and unregistered, even in the case of failure.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch moves the err_request_irq error label up to reflect that tasklet_init and irq_of_parse_and_map have taken place. This change improves the readability and maintainability of the code. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds a new flag, NFT_SET_EVAL, to indicate that a set contains expressions for evaluation. It also includes a check to ensure that sets specifying both mapping and evaluation operations are rejected. Additionally, the patch includes a check in the nft_lookup_init function to return an error if the set has the NFT_SET_EVAL flag set.

This patch improves the functionality of nf_tables by allowing sets to contain expressions for evaluation. It also ensures that sets cannot specify both mapping and evaluation operations, which could lead to conflicts or unexpected behavior.

Overall, this patch appears to be well-implemented and addresses a specific need in nf_tables. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adapts the ARM OMAP3 igep0020 board to the changes in the ehci-omap driver. It registers the PHY's RESET regulators and the NOP PHY devices using the usbhs_init_phys() function. The patch also updates the usbhs_omap_platform_data structure for the igep2 and igep3 boards to reflect the changes in the port modes and reset GPIOs.

Overall, this patch ensures that the igep0020 board is compatible with the updated ehci-omap driver and properly initializes the USB host controller. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for port mirroring in the bcm_sf2 driver. It includes the necessary changes to the dsa_switch_ops structure to add the port_mirror_add and port_mirror_del functions. The patch also includes the required Signed-off-by lines.

Based on the provided information, there doesn't seem to be any obvious issues with the patch. It appears to be a straightforward addition of port mirroring support for the bcm_sf2 driver. Therefore, I would recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch adds an error path in the vmw_du_crtc_cursor_set() function in the vmwgfx driver. It unreferences the surface if it is not suitable for the cursor and returns an error code.

The patch has been reviewed by Thomas Hellstrom and signed-off by Jakob Bornecrantz and Dave Airlie, indicating that it has gone through the necessary review process.

The addition of the vmw_surface_unreference() function call ensures that the surface is properly unreferenced in the error path, preventing any potential memory leaks.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes a superfluous check and a stray newline in the octeon_i2c_test_iflg function in the i2c-octeon.c file. The change does not affect the functionality of the code and improves code readability. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch makes the struct i40e_stats const, which means that the data in this struct cannot be modified. This is a good practice as it ensures that the data remains unchanged and avoids any potential bugs or unintended modifications.

The patch also moves some data to the text section, which can help optimize the memory usage of the driver.

The patch has been signed-off by Joe Perches and tested by Andrew Bowers, which indicates that it has gone through some level of review and testing.

Overall, this patch improves the code by making the struct const and optimizing memory usage, and it has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
- The patch fixes a potential mis-interpretation of READ_TOPOLOGY reserved fields in the lpfc driver.
- The patch modifies the code to correctly handle the fc_eventTag and sli_flag variables.
- The changes are conditional based on the sli_rev variable, ensuring compatibility with older versions of the lpfc driver.
- The patch has been reviewed and signed-off by multiple developers.

Overall, the patch addresses a potential issue and improves the correctness of the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the validation of sysfs pm_qos_latency_tolerance by preventing users from directly writing negative values. It checks if the value is negative and returns an error if it is. This helps to ensure that only valid values are accepted for pm_qos_latency_tolerance. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a behavior inconsistency between IPv4 and IPv6 in handling ICMP_FRAG_NEEDED and ICMP6_PKT_TOOBIG messages for connected UDP sockets. In IPv4, the connected UDP socket receives an EMSGSIZE message on its next read from the socket when it receives an ICMP_FRAG_NEEDED message. However, this behavior is not present in IPv6.

The patch modifies the UDP error handler in IPv6 for ICMP6_PKT_TOOBIG to make it similar to the behavior in IPv4. When the machine receives an ICMP6_PKT_TOOBIG message, the connected UDP socket will now receive an EMSGSIZE message on its next read from the socket.

The patch has been reviewed and Acked-by Eric Dumazet and signed-off by Wei Wang and David S. Miller.

Based on the analysis, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes the error handling in the tty_ioctl function in the drivers/tty/tty_io.c file. Currently, if the retval is -ENOIOCTLCMD, it is being translated to -EINVAL. However, Linus pointed out that it should be translated to -ENOTTY instead.

The patch correctly updates the translation of -ENOIOCTLCMD to -ENOTTY in the tty_ioctl function. This ensures that the correct error code is returned to user mode when the ioctl function is called with an invalid command.

The patch has been reviewed and Acked-by Alan Cox, who is a recognized Linux kernel developer. This adds credibility to the patch and indicates that it has been reviewed by an expert in the field.

Therefore, based on the analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the use of __devexit_p, which is no longer needed since CONFIG_HOTPLUG is going away as an option. The patch updates the remove function in multiple drivers to remove the __devexit_p macro. This change is necessary to ensure compatibility with future Linux kernel versions. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch sets the led_classdev max_brightness to the maximum level value supported by hardware. This allows getting rid of the brightness conversion operation in brightness_set(). The patch also removes the bright_max variable, as it is no longer needed.

The changes in the patch are straightforward and do not introduce any new functionality or potential issues. The patch improves the efficiency of the brightness setting operation by eliminating the need for a conversion operation.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the libata-scsi driver to set the CmdQue bit in the standard INQUIRY data to 1. This change is aimed at avoiding a performance bottleneck when using SCSI pass-through to virtual machines with other operating systems, such as Windows, via virtio-scsi and scsi-block in qemu.

The patch includes a reference to an issue on GitHub that provides further context for the change.

The code change itself adds three additional values to the INQUIRY data structure, setting them to 0, 0, and 2 respectively.

Based on the provided information, this patch appears to address a specific performance issue and does not introduce any obvious negative side effects. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch updates the init_css() function in the cgroup subsystem. It moves the reference acquisition code into init_css() and renames the function to init_and_link_css(). This change makes the code easier to follow and ensures that the root csses hold a reference on cgrp_dfl_root.cgrp, which is harmless.

The patch has been reviewed and Acked-by Li Zefan and the kernel/cgroup.c file.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the __init prefix to the prandom_start_seed_timer() function, which is only called in functions annotated with __init. By adding the __init prefix, the kernel can make use of this hint and possibly free up resources after its usage. Additionally, the patch renames the function to __prandom_start_seed_timer() to indicate that it is an internal function.

The changes in this patch are beneficial as they improve resource management and maintain consistency with the use of __init annotations. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the adt7411 driver to use devm_ functions, which helps reduce code size and simplify the code. The conversion is done for memory allocation and deallocation using devm_kzalloc and removing the need for explicit kfree calls. It also uses devm_hwmon_device_register instead of hwmon_device_register, which automatically handles device unregistration. Overall, this patch improves code readability and reduces the chances of resource leaks. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch replaces the use of regmap_init_i2c() with devm_regmap_init_i2c(). The devm_regmap_init_i2c() function is device managed, which simplifies error handling and code cleanup. Additionally, the patch fixes a bug where there was no explicit regmap_exit call in the function.

Overall, this patch improves the code by using a device managed function and fixes a potential bug. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the path to the Ubuntu kernel debuginfo file in the vmlinux_path array. It also adapts the code to use the perf.data file kernel version. The patch correctly allocates memory for the vmlinux_path array and adds the necessary paths to it. It also handles the case where memory allocation fails. Overall, the patch seems to be well-written and addresses a specific issue. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a trivial typo in the rtc-imxdi.c file. The typo is in the comment where "Temperatur" is misspelled as "Temperatur". The correct spelling is "Temperature". This typo does not affect the functionality of the code, but it is good practice to have correct and clear comments.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || NAK

Explanation: The patch removes the init() and exit() platform callbacks for the imx serial driver. These callbacks are responsible for initializing and cleaning up the platform-specific data for the driver. Removing these callbacks can lead to potential issues with initialization and cleanup of the driver.

Additionally, the patch removes the uart0_init() and uart0_exit() functions, which are called during the initialization and cleanup of the mx31moboard platform. Removing these functions can also lead to potential issues with the initialization and cleanup of the platform.

Therefore, it is not recommended to accept this patch in Linux -stable releases.
false || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch adds initialization of the BBP_R103 register in various subroutines of the rt2800 driver. This register is specific to certain chipsets, and the patch ensures that it is properly initialized for those chipsets.

The patch has been reviewed and Acked-by two individuals, Helmut Schaa and Gertjan van Wingerde, indicating that they have reviewed and approved the patch.

Additionally, the patch is signed-off by Stanislaw Gruszka and John W. Linville, further indicating that it has been reviewed and approved by them.

Overall, the patch appears to be necessary for proper initialization of the BBP_R103 register on specific chipsets, and it has received positive reviews and approvals. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the media subsystem's coda driver where the sizeimage setting in the VIDIOC_TRY_FMT ioctl was incorrect. The patch correctly calculates the sizeimage value as width * height * 3 / 2 for YUV420 formats and sets it to the value provided in the v4l2_format structure for other encoded formats.

The patch has been tested and signed-off by multiple developers, indicating that it has undergone thorough testing and review. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch replaces the usage of DEVICE_PARAM macro with module_param_named and MODULE_PARM_DESC macros in the main_usb.c file of the vt6656 staging driver. It also adds a new module parameter "tx_buffers" to set the number of transmit USB buffers.

The patch ensures that the user does not set the tx_buffers value beyond the defined limits of the driver. If the value is within the limits, it updates the priv->cbTD variable with the provided value. Otherwise, it falls back to the default value TX_DESC_DEF0.

This patch improves the code by using the recommended module parameter macros and adds a necessary check for the tx_buffers value. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch replaces the usage of non-device managed APIs with the corresponding devm_* APIs, which are device managed. This simplifies the code and ensures that resources are properly managed and released. The patch also removes unnecessary error handling code and improves error handling in some places. Overall, this patch improves the reliability and maintainability of the code.
false || ACK

This patch moves the u3 MPIC MSI subsystem to use the pci_controller_ops structure instead of ppc_md for MSI related PCI controller operations. It plugs in the operations at the subsys level after controller creation and iterates over all controllers to populate them with the MSI ops.

The patch also updates the setup_msi_irqs and teardown_msi_irqs functions for each PCI controller in the hose_list to use the u3msi_setup_msi_irqs and u3msi_teardown_msi_irqs functions respectively.

Overall, this patch improves the organization and structure of the code by using the pci_controller_ops structure and ensures that the MSI operations are correctly set for each PCI controller. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch replaces a call to the deprecated function devm_request_and_ioremap with the recommended function devm_ioremap_resource. The patch has been reviewed and Acked by Tony Prisk and signed-off by Laurent Navet and Linus Walleij. The change is straightforward and improves the code by using the correct function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes an unnecessary register read in the i40e_virtchnl_pf.c file. The base VF id is already stored in the HW struct, so there is no need to read it again. This change improves the efficiency of the code. The patch has been tested and signed-off by multiple Intel developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the scsi_run_queue function in the scsi_lib.c file. It avoids taking the host_lock unnecessarily if there are no starved devices. The patch also splits the function into two parts, making the code more clear and maintainable.

The patch has been reviewed by Hannes Reinecke and signed-off by Christoph Hellwig and James Bottomley.

Overall, this patch improves the efficiency and readability of the code without introducing any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a tidy up of the "atao_ao_rinsn" function in the staging/comedi/ni_at_ao.c file. The function is renamed to "atao_ao_insn_read" for better grep results and follows the normal format for analog output read back functions. The patch also updates the "insn_read" function pointer in the atao_attach function to point to the new function.

The changes in this patch are purely cosmetic and do not affect the functionality or stability of the code. Therefore, it can be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes the .owner field from the platform_driver structure in the sl811-hcd.c file. The comment in the patch suggests that there is no need to set the .owner field manually as the core will do it automatically. This change is in line with the best practices of the Linux kernel development. Additionally, the patch has been Acked by Prabhakar Lad and signed-off by Fengguang Wu and Greg Kroah-Hartman, which indicates that it has been reviewed and approved by other developers. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes the NO_IRQ initializer from the .irq field in the amba_device structure. This indicates that the NETX_IRQ_LCD is the only valid IRQ for the device. Removing the NO_IRQ initializer is a correct change as it ensures that the device is properly configured with the correct IRQ. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the unnecessary spi_src_clks and s5p64x0_spi_src_clks arrays from the platform data in the ARM Samsung SPI drivers. These arrays are not used in the code and can be avoided by using the generic clock connection id registered via clkdev. This change simplifies the code and improves maintainability. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds a helper function to lookup the master device index given a device index in the l3mdev subsystem. It also adds a corresponding inline function to return 0, indicating that the master device index lookup is not supported.

The patch is a straightforward addition of a helper function and does not introduce any new functionality or modify existing code. It also includes proper sign-offs from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch adds a check for the return value of choose_times() function. If the function returns -EINVAL, it means that "c1" and "c2" variables haven't been initialized. The patch ensures that if the result is less than 0, the function returns without further execution.

This patch fixes an uninitialized variable warning and improves the code's robustness. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a simple code cleanup that renames variables and arguments in the function ced_transfer_flags(). The changes improve code readability and maintainability without introducing any functional changes. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch addresses an integer overflow issue in the btrfs filesystem's send functionality. The expression "sizeof(*arg->clone_sources) * arg->clone_sources_count" can potentially overflow, leading to static checker warnings. Although this issue is not critical as it is only accessible to users with CAP_SYS_ADMIN capabilities, it is still important to silence the warnings.

The patch adds a check to ensure that the multiplication does not exceed the maximum value of ULLONG_MAX. If it does, the function returns -EINVAL, indicating an invalid argument.

Overall, this patch is a simple and effective solution to prevent potential integer overflow issues and should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch moves the quirk for ALC255_FIXUP_DELL2_MIC_NO_PRESENCE from the alc269_fixup_tbl to the alc269_pin_fixup_tbl. This change is necessary to ensure that the correct pin quirk is applied for the Dell laptops with ALC255 codec. The patch also adds the necessary pin quirk entries for ALC255_FIXUP_DELL2_MIC_NO_PRESENCE in the alc269_pin_fixup_tbl. This ensures that the correct pin configurations are applied for the Dell laptops with ALC255 codec. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch adds support for using PCI MSIs in the rt2x00pci driver. MSIs (Message Signaled Interrupts) are a more efficient way of handling interrupts compared to traditional interrupt mechanisms. By enabling MSIs, the driver can offload interrupt handling to the hardware, resulting in improved performance.

The patch enables MSIs in the `rt2x00pci_probe` function by calling `pci_enable_msi(pci_dev)`. It also adds a corresponding call to `pci_disable_msi(pci_dev)` in the `rt2x00pci_remove` function to disable MSIs when the device is removed.

The patch has been reviewed and Acked-by two developers, indicating that it has undergone peer review and is considered suitable for inclusion in the Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch corrects a type mismatch in the capi20_manufacturer() function. The function is declared with an unsigned int cmd argument, but it is called with an unsigned long argument. The patch fixes this by correcting the function prototype to match the actual argument type. This ensures that the function is called correctly and avoids potential issues with type conversion.

The patch also updates the printk statement in the default case of the switch statement to use %lu format specifier instead of %d, since cmd is now an unsigned long. This ensures that the correct value is printed in the error message.

Overall, the patch is a straightforward fix for a type mismatch issue and improves the correctness of the code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes a duplicate error message in the serial8250_em_probe() function. The devm_kzalloc() function already warns if allocation fails, so the additional error message is unnecessary. Removing the duplicate message improves code readability and reduces redundancy.

The patch has been reviewed and signed-off by Peter Hurley and Greg Kroah-Hartman, indicating that it has been reviewed by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes an unused macro, IS_MAC_ADDRESS_BROADCAST, from the rtl871x_ioctl_set.c file in the staging directory. The macro is not being used anywhere in the codebase, so removing it will not have any impact on the functionality of the driver. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch increases the required skbuff headroom for firmware signalling in the brcmfmac driver. It adds additional headroom to accommodate signalling protocol data between the host and firmware. The patch has been reviewed by Broadcom employees and has been signed-off by multiple contributors.

The patch modifies the brcmf_proto_bdc_header structure to include a new field for data_offset. It also defines a new macro BRCMF_PROT_FW_SIGNAL_MAX_TXBYTES to specify the maximum length of firmware signal data in the tx path.

In the brcmf_proto_attach function, the patch increases the hdrlen variable by BDC_HEADER_LEN + BRCMF_PROT_FW_SIGNAL_MAX_TXBYTES. This ensures that the skbuff headroom is correctly adjusted to accommodate the firmware signalling.

Based on the provided information, the patch appears to be necessary for the proper functioning of the firmware signalling feature in the brcmfmac driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a name field to the omapdss's outputs, which helps in referring to the output by their name and also aids in debugging. The patch modifies the dpi_init_output(), dsi_init_output(), hdmi_init_output(), rfbi_init_output(), sdi_init_output(), and venc_init_output() functions to assign a name to the respective outputs. Additionally, the patch adds the name field to the omap_dss_output structure.

The changes made by this patch are straightforward and do not introduce any new functionality or modify existing behavior. The addition of the name field is a simple enhancement that improves the readability and debugging capabilities of the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch enables the use of PR_SET_NO_NEW_PRIVS in the samples/seccomp/dropper program. PR_SET_NO_NEW_PRIVS is required to enable seccomp, and this patch allows the program to be run without the need for CAP_SYS_ADMIN privileges.

The patch adds a call to prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0) before calling prctl(PR_SET_SECCOMP, 2, &prog). This ensures that the program is not granted any new privileges after the call to prctl, which is a security measure.

The patch also adds error handling for the prctl calls, printing an error message if they fail.

Overall, this patch improves the security of the samples/seccomp/dropper program by enabling PR_SET_NO_NEW_PRIVS and adding error handling. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the buffer pitch calculation in the exynos_drm_gem_dumb_create function in the exynos_drm_gem.c file. The current calculation is incorrect as it does not take into account the byte alignment of the bpp value. The patch corrects this by adding 7 to the bpp value before dividing it by 8 to ensure proper byte alignment.

This fix is necessary to ensure correct buffer pitch calculation, which is crucial for proper rendering and display of graphics. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch constifies the regulator_desc structure, which improves code readability and maintainability. The change is safe and does not introduce any functional changes to the code.
false || ACK

This patch enables atomic fb-helper support in the i915 driver. The patch sets the "atomic" flag to true in the fbdev helper structure, indicating that atomic operations are supported. This is a valid enhancement for the i915 driver and should be accepted in Linux -stable releases.
false || ACK

This patch adds proper error handling for the hdmi_probe_pdata() function in the OMAPDSS HDMI driver. It returns an error code if a resource is missing or if any of the subsequent operations fail. This allows the HDMI driver to be probed again later if necessary.

The patch also includes changes to handle the error conditions properly, such as freeing resources and disabling power management.

Overall, this patch improves the reliability and robustness of the HDMI driver, and therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch addresses a specific issue with SDIO controllers found on Marvell Kirkwood SoCs. It provides a workaround for a spurious irq that occurs even when all interrupts have been disabled. The patch checks if any interrupts are expected and bails out early if not, avoiding any harm to the hardware or driver. The patch has been reviewed and Acked by multiple developers, indicating that it has been thoroughly reviewed and deemed acceptable for inclusion in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch modifies the qla2xxx driver in the SCSI subsystem. It stops the iteration after the first failure in the *_id functions, which improves the error handling and prevents unnecessary iterations. The patch also includes appropriate error handling by breaking the loop when an error occurs. This change enhances the reliability and stability of the qla2xxx driver.
false || ACK

This patch adds missing inline wrappers for nla_get_le32 and nla_get_le64 functions in the netlink subsystem. These functions are necessary to provide fields in the nl802154 userspace applications, as the 802.15.4 MAC byteorder is little endian.

The patch is well-documented and the code changes are straightforward. It does not introduce any new functionality or modify existing behavior. Therefore, it is safe to include this patch in Linux -stable releases.
false || ACK

The patch removes the use of the deprecated macro DEFINE_PCI_DEVICE_TABLE() and replaces it with the recommended usage of 'struct pci_device_id'. This change aligns with the goal of getting rid of the deprecated macro completely.

The patch has been reviewed and signed-off by multiple developers, including Vaishali Thakkar, Peter Zijlstra, and Ingo Molnar. It also includes relevant Cc's to other key developers.

The patch modifies the file arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c, specifically the hswep_uncore_pci_ids variable, by replacing the use of DEFINE_PCI_DEVICE_TABLE() with const struct pci_device_id.

Overall, the patch is a straightforward and necessary change to remove the deprecated macro and should be accepted in Linux -stable releases.
false || ACK

This patch adds a feature to suspend the phydev when it goes to the HALTED state, in order to save power. The patch calls the phy_suspend helper function to check if the PHY can be suspended, and if so, it suspends the PHY.

The patch has been reviewed and Acked by Mugunthan V N and Florian Fainelli, indicating that it has been reviewed and approved by experts in the field.

The patch also includes the necessary Signed-off-by tags from the author and the maintainers.

Therefore, based on the information provided, I would recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes some unused #defines from the wlan_bssdef.h file in the staging directory. These #defines are not being used anywhere in the codebase and are therefore unnecessary. Removing them will help to clean up the code and reduce potential confusion for developers. Since this patch does not introduce any new functionality or fix any bugs, it is safe to accept it in Linux -stable releases.
false || ACK

This patch refactors the code of the soft_offline_page() function in the mm/memory-failure.c file. It improves the structure of the function by separating the success path and the failure path, making the code more readable and maintainable.

The patch also replaces the atomic_long_add() function with atomic_long_inc() for incrementing the mce_bad_pages counter, which is a more appropriate function to use in this context.

The patch has been reviewed and tested by multiple developers, including the original author and maintainers of the code. It has also been suggested by Andrew Morton, a well-known Linux kernel developer.

Overall, this patch improves the code structure and functionality without introducing any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes unnecessary out-of-memory (OOM) messages in the gpio-rc5t583 driver. The OOM messages are site-specific and duplicate the generic OOM message from the MM subsystem. Removing these unnecessary messages improves code readability and reduces code duplication.

The patch has been reviewed by Javier Martinez Canillas and signed-off by Linus Walleij, indicating that it has undergone peer review and is considered acceptable.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds error checking for the return values of the nla_parse() function in several places in the nl80211.c file. This is important because if the return value is non-zero, it indicates an error in parsing the netlink attributes, and returning the error code will allow the caller to handle the error appropriately.

By adding this error checking, the patch ensures that the attributes are actually what is expected, and it prevents potential issues caused by incorrect or unexpected attribute values.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch replaces the usage of `of_find_property` with `of_property_read_u32` to read integer values from device tree properties. This change helps reduce the number of variables used and simplifies the code.

The patch has been reviewed and Acked-by Dan Streetman and Signed-off-by Herbert Xu, which indicates that it has been reviewed and approved by other developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple fix that replaces the use of seq_printf() with seq_puts() in the sky2_debug_show() function in the sky2.c file. The change is necessary because the string being printed does not contain any data format specification, so seq_puts() is the appropriate function to use.

The patch has been reviewed and signed-off by both Markus Elfring and David S. Miller, indicating that it has been tested and approved by the relevant developers.

Overall, this patch is a straightforward fix that improves the code readability and correctness. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the i40e_vsi_add_vlan and i40e_vsi_kill_vlan functions in the i40e driver. The patch adds a check to not allow these functions to operate when the VLAN ID (VID) is less than 1 or when the Port VLAN ID (PVID) is set. This change ensures that the functions are not accidentally invoked when handling VID=0 or VID=-1, and removes the need for additional checks in the i40e_vsi_add_vlan function.

The patch also updates the function signatures to take u16 instead of s16 as the VID parameter, since they no longer expect to be called with VID=I40E_VLAN_ANY.

The changes in this patch improve the correctness and reliability of the i40e driver when handling VLANs. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes spurious NULL checking in the ipx_ioctl() function. The patch removes the unnecessary check for 'sk' being NULL before calling sock_get_timestamp(). This is because 'sk' is already unconditionally dereferenced earlier in the function via lock_sock(sk). The caller of ipx_ioctl(), sock_do_ioctl(), also takes similar liberties.

The patch has been reported by Dan Carpenter and signed-off by David S. Miller, who is a well-known maintainer of the Linux kernel networking subsystem.

Based on the provided information, it appears that the patch is correct and improves the code by removing unnecessary NULL checking. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an error return code in the cpia1.c driver of the media subsystem. The patch converts a nonnegative error return code to a negative one, which is consistent with the error handling in the rest of the function.

The patch has been reviewed and signed-off by multiple developers, including Peter Senna Tschudin, Hans de Goede, and Mauro Carvalho Chehab.

The change itself is straightforward and does not introduce any new functionality or potential regressions. It simply assigns the return value of the "do_command" function to the "ret" variable before checking for errors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the SCSI host ID setting in the atari_scsi driver. The patch changes the NVRAM location from 14 to 16, which is the correct location as documented in the provided link. The patch has been reviewed and tested by multiple individuals, including Michael Schmitz, who confirmed the correct behavior by setting the SCSI host ID under EmuTOS and checking the value in /proc/driver/nvram and /dev/nvram under Linux.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for the RT5645 codec with ACPI ID 10EC5640, which is used by some CHT platforms. It also adds a DMI quirk for jack detection. The patch has been suggested by Stephen Just and has been signed-off by Sachin Mokashi, Vinod Koul, and Mark Brown.

The patch adds the ACPI ID 10EC5640 to the list of supported devices in the rt5645_acpi_match array. This ensures that the driver will be loaded for devices with this ACPI ID.

The patch also adds a DMI quirk for the Microsoft Surface 3, which matches the DMI_PRODUCT_NAME "Surface 3". This quirk is necessary for proper jack detection on this specific platform.

Overall, this patch adds necessary support for the RT5645 codec with ACPI ID 10EC5640 and improves jack detection on the Microsoft Surface 3. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch fixes a bug in the original code where a null pointer was being dereferenced. The patch changes the code to jump to a different label instead of dereferencing the null pointer. The patch has been reviewed and Acked-by Jarod Wilson and signed-off by Dan Carpenter and Mauro Carvalho Chehab. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch removes an unused release function in the at91_udc driver. The driver calls usb_add_gadget_udc with NULL as the release parameter, which means it will use usb_udc_no_release. Therefore, the release function in the driver is not used and can be safely removed.

Additionally, the patch removes the setting of the gadget name in the driver because it is already set in usb_add_gadget_udc_release.

Overall, the patch removes unnecessary code and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the behavior of the ab8500-fg driver in the Linux kernel. It changes the discharge state from AB8500_FG_DISCHARGE_RECOVERY to AB8500_FG_DISCHARGE_INIT_RECOVERY when the charger is removed. This change ensures that the driver goes to the INIT_RECOVERY state instead of directly to the RECOVERY state.

The patch has been reviewed and tested by multiple developers, which adds credibility to its correctness and effectiveness. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch fixes the issue of "unclaimed register" messages on Haswell after suspend/resume. It prevents saving and restoring the DSPARB register on gen5+ platforms where the register does not exist. The patch has been reviewed and signed-off by Paulo Zanoni and Jani Nikula, who are both from Intel, and Daniel Vetter. The changes made in the patch are conditional based on the generation of the Intel graphics device, ensuring that the save and restore operations are only performed on gen4 and earlier platforms.
false || ACK

Reasoning: The patch removes unnecessary OOM (Out of Memory) messages in the lm3533_bl driver. These messages are redundant as they duplicate the generic OOM message from the MM (Memory Management) subsystem. The patch has been reviewed and Acked by Johan Hovold and signed-off by multiple maintainers. The change itself is straightforward and does not introduce any new functionality or potential issues. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

Based on the provided patch, it appears that the driver is currently using the set_bias_level function to control the power on and off sequences. This patch enables the idle_bias_off option, which allows the DAPM core to set the bias level to SND_SOC_BIAS_OFF instead of stopping at SND_SOC_BIAS_STANDBY.

Enabling the idle_bias_off option can help ensure that the driver proceeds with normal powering sequences, which can improve the overall stability and functionality of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for MST moved pin to port in the nau88l25_max98357a machine. It changes the routes based on the port, specifically changing the route for "DP" to "DP1" and "DP2". It also changes the route for "HDMI" to "hif5-0 Output" and "hif6-0 Output". 

This patch appears to be a necessary change to support the MST moved pin to port functionality in the nau88l25_max98357a machine. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code in the drivers/char/mem.c file by using the IS_ERR_VALUE() macro instead of comparing the offset to a hard-coded value of -MAX_ERRNO. The use of IS_ERR_VALUE() is more readable and less error-prone.

The patch also includes the necessary Signed-off-by tags from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the vdds_csib regulator supply in the RX-51 board file. This is necessary for proper power management of the CSIb IO complex used for camera operation. The patch has been reviewed and acknowledged by multiple developers, including Kalle Jokiniemi, Laurent Pinchart, and Sakari Ailus. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch enables the TX wakeup bit for the wer register in OMAP2+ UART. It populates the necessary TX wakeup flag for the applicable module IP blocks and uses it while configuring the wer register. Additionally, it restores the wer register when context is lost.

The patch has been reviewed and Acked-by Greg Kroah-Hartman for drivers/tty changes.

The changes in the patch include defining the OMAP_UART_TX_WAKEUP_EN and OMAP_UART_WER_HAS_TX_WAKEUP flags, adding the wer field to the uart_omap_port structure, enabling the TX wakeup bit in the serial_omap_startup function, filling the features and errata fields in the omap_serial_fill_features_erratas function, and restoring the wer register in the serial_omap_restore_context function.

Based on the provided information, the patch appears to be necessary for enabling the TX wakeup functionality and restoring the wer register when context is lost. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a new netdev operation to allow or prevent a VF (Virtual Function) from querying its RSS (Receive Side Scaling) Indirection Table and RSS Hash Key. It also enables or disables the RSS query feature for each VF.

The patch limits the support for this new feature to 82599 and x540 devices only, with support for other devices to be added later.

The code changes in ixgbe_main.c and ixgbe_sriov.c ensure that the RSS query feature is enabled or disabled for each VF during the virtualization configuration process.

The new netdev operation, ndo_set_vf_rss_query_en, is implemented in ixgbe_ndo_set_vf_rss_query_en function in ixgbe_main.c. This function checks if the device is supported (82599 and x540) and sets the rss_query_enabled flag for the specified VF.

The ndo_get_vf_config function in ixgbe_main.c is also modified to include the rss_query_enabled flag in the returned VF configuration.

Overall, this patch adds a useful feature to control the ability of VFs to query their RSS information, and the implementation appears to be correct and well-integrated with the existing codebase. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the sunxi MMC driver where the clock is not gated when the bus frequency is set to 0. The patch adds a check to gate the clock when the bus frequency is 0, preventing any potential issues that may arise from leaving the clock enabled in this case.

The patch has been tested and reviewed by multiple individuals, including Florian Vaussard and Chen-Yu Tsai, who have provided their Tested-by and Acked-by tags respectively.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the incorrect number of interrupts managed by the TWL4030 chip. The patch correctly updates the TWL4030_NR_IRQS macro to reflect the correct number of interrupts, which is 34. This change is necessary to ensure proper interrupt handling for the core, power events, and GPIOs.

The patch has been signed-off by two developers, indicating that it has been reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch extends the frequency range of the Max2165 TV tuner driver to cover Hong Kong's digital TV broadcasting. It updates the frequency_max value from 780000000 to 862000000, which includes the 802MHz frequency used by RTHK TV.

The patch has been tested on the MyGica X8558 Pro TV tuner card and is signed-off by the relevant developers.

Since this patch adds support for a specific TV broadcasting frequency used in Hong Kong, it is reasonable to include it in the Linux -stable releases to ensure compatibility and functionality for users in that region.
false || ACK

This patch fixes the antenna diversity configuration for non-AR9485 chips in the ath9k driver. The current values are only suitable for AR9485 chips, and other chips require different values. The patch adds a conditional statement to check if the chip is AR9485, and sets the appropriate values for the antenna diversity configuration based on the chip type.

By adding this conditional statement, the patch ensures that the correct antenna diversity configuration is used for different chip types, improving the overall functionality and compatibility of the driver. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the alignment of parentheses in the pp_read and pp_write functions in the ppdev.c file. The alignment issue was reported by checkpatch. The patch aligns the open parenthesis with the corresponding closing parenthesis.

The patch also fixes the alignment of the arguments in the parport_register_device function call in the register_device function.

Overall, the patch is a simple and straightforward fix for alignment issues and does not introduce any new functionality or potential issues. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch enables the Kirkwood audio driver to be built on mvebu platforms and adds an additional compatible string to identify the Armada 370 variant of the audio unit. The patch also updates the Kconfig and device tree bindings to include support for the Armada 370 platform.

The patch appears to be well-written and addresses the compatibility issue for the Armada 370 platform. It does not introduce any new functionality or changes that could potentially cause instability or regressions. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

The patch removes the use of the 'thisboard' macro in the ni_daq_700 driver and replaces it with local variables and the comedi_board() helper function. This change improves code readability and maintainability.

The patch has been reviewed and signed-off by multiple developers, including the maintainer of the staging subsystem and the driver author. This indicates that the patch has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for specifying the phy reset duration in the device tree for the fec driver. This is useful for boards that require a longer reset duration. The patch introduces the property "phy-reset-duration" which should be present only if the "phy-reset-gpios" property is available. If the "phy-reset-duration" property is missing, the reset duration will be set to 1 millisecond. The patch also adds a check to ensure that the reset duration is not longer than 1 second.

Overall, this patch provides a useful enhancement to the fec driver and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a simple code cleanup that converts the comedi_subdevice access from pointer math to array access. It replaces the line "s = dev->subdevices + 0;" with "s = &dev->subdevices[0];". This change improves code readability and maintainability.

There are no functional changes introduced by this patch, and it does not affect the behavior or performance of the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

Reasoning: The patch constifies the struct regmap_config, which is not modified by the driver. This change allows the regmap_init() function to accept a pointer to const, which is a safer and more accurate representation of the intended usage. The constification of the struct does not introduce any functional changes and improves code clarity and maintainability. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch improves the interrupt handling in the meson-gx MMC driver. It removes the unnecessary disabling and re-enabling of interrupts in the meson_mmc_request function and instead enables interrupts in the probe function. It also adds the missing disabling of interrupts in the remove function.

The changes in the patch are correct and improve the interrupt handling in the driver. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes the use of __devinit in the xgifb_probe function. Since CONFIG_HOTPLUG is going away as an option, __devinit is no longer needed. The removal of __devinit does not affect the functionality of the code. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a compile warning in the arm architecture code. The commit e71246a23acbc89e9cb4ebf1558d60e65733479f changed the psci_init function from returning void to returning int, but did not update the non CONFIG_ARM_PSCI implementation to return a value, causing a compile warning. The patch simply adds a return statement with a value of 0 to the psci_init function, resolving the warning.

The patch has been reviewed and signed-off by multiple developers, including Christoffer Dall and Paolo Bonzini. It also includes the necessary Cc's to relevant individuals.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes some unnecessary checks in the KVM MMU code. The first change removes a check for `need_unsync` and `s->unsync` before setting `need_unsync` to true. Since `need_unsync` is only used in this if statement, the check is redundant and can be removed. The second change removes a check for `remote_flush` before calling `need_remote_flush`. Since `remote_flush` is only used in this if statement, the check is also redundant and can be removed. These changes simplify the code and improve readability without affecting functionality. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch improves the code by avoiding calling the function "ilk_pipe_pixel_rate()" twice on the same function. Instead, it calls the function once and stores the computed value for reuse. This change reduces unnecessary function calls and improves code efficiency. The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and review. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch removes the unnecessary casting of the return value, which is a void pointer, to a struct charger_desc pointer. The conversion from a void pointer to any other pointer type is guaranteed by the C programming language, so the casting is redundant.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved by them.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch makes device tree accesses in the cache info code endian safe. It replaces the usage of u32 pointers with __be32 pointers to ensure proper endianness handling. The patch also uses the of_read_number() function to read the values from the device tree properties.

By making these changes, the patch ensures that the cache size, line size, and number of sets are correctly read from the device tree regardless of the endianness of the system.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch cleans up the tusb_omap_dma structure in the musb driver. It removes the unnecessary pointer to musb in the tusb_omap_dma structure and instead uses the pointer present in the dma_controller structure.

The changes in the patch are straightforward and do not introduce any new functionality or potential issues. The patch has been signed-off by multiple developers, including the maintainer of the drivers/usb/musb/tusb6010_omap.c file.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch makes the functions `dst_cache_per_cpu_dst_set()` and `dst_cache_per_cpu_get()` static. These functions are only used within the `dst_cache.c` file, so there is no need for them to be visible outside of that file. Making them static improves code encapsulation and reduces namespace pollution. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch fixes the issue of lines over 80 characters in the serqt_usb2.c file. The changes made in the patch ensure that the lines are within the recommended limit. The patch also includes proper formatting and indentation.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved by them.

Overall, the patch is a simple and straightforward fix that improves the code readability and adherence to coding standards. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds missing clocks for the MIPS ralink platform. It adds clock definitions for the "10000b40.spi", "10000d00.uart1", and "10000e00.uart2" peripherals in the mt7620.c file, and for the "10000b40.spi" peripheral in the rt305x.c and rt3883.c files.

The patch is signed-off by John Crispin and Ralf Baechle, who are both recognized contributors to the Linux kernel. The patch has also been submitted to the Linux MIPS mailing list and has a corresponding entry in the Patchwork system.

Based on the information provided, it appears that the patch is necessary to properly configure the clocks for these peripherals on the MIPS ralink platform. Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch fixes a bug where an info message is printed with the name 'uninitialised' if the netdev is not registered before connecting the phy. By registering the netdev first and then connecting the phy, this issue can be avoided. The patch moves the dsa_slave_phy_setup() function call after the register_netdev() function call, ensuring that the netdev is registered before setting up the slave phy.

The patch has been reviewed and signed-off by Andrew Lunn and David S. Miller, indicating that it has been reviewed and approved by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch suggests using the time_before function instead of directly comparing jiffies with other values. The time_before function is considered more robust for comparing jiffies against other values.

The patch provides a simplified version of the Coccinelle semantic patch that makes this change. It replaces the comparison "jiffies - E1 < E2" with "time_before(jiffies, E1+E2)".

The patch has been reviewed and Acked-by Julia Lawall and Signed-off-by Himangi Saraogi and David S. Miller.

The change in the patch improves the code's readability and maintainability by using a more robust function for comparing jiffies. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the kbtab.c driver where the struct device was pointing to the input device instead of the USB device. The patch changes the struct device to point to the USB device, which makes more sense for this driver.

The patch also adds a new member "intf" to the struct kbtab, which points to the usb_interface. This member is used in the dev_dbg and dev_err calls to print debug and error messages.

The patch is signed-off by Greg Kroah-Hartman and CC'd to Dmitry Torokhov, who is the maintainer of the input subsystem.

Based on the provided information, the patch appears to be a valid fix for the issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the BUG_ON statement and replaces it with proper error handling. Instead of triggering a BUG_ON when the length of the string is not equal to EXT_CSD_STR_LEN, the patch returns an error value (-EINVAL) and frees the allocated memory. This is a more appropriate and meaningful way to handle the error condition. The patch also includes proper sign-offs from the authors. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch updates the temperature sensor attribute index in the ixgbe driver to start with 1, as per the hwmon ABI. The patch modifies the attribute names by adding 1 to the offset value. This change ensures compliance with the hwmon ABI and improves consistency with other temperature sensor implementations.

The patch has been reviewed by Guenter Roeck and Jean Delvare, and signed-off by Jeff Kirsher. The changes are straightforward and do not introduce any new functionality or potential issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes a useless casting of the return value of kmalloc. The casting is unnecessary because kmalloc already returns a void pointer, which can be assigned to any pointer type without casting. Removing the casting improves code readability and reduces the risk of introducing type-related bugs.

The patch also includes proper sign-offs from the authors, indicating that they have reviewed and tested the changes.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch suggests changing the default behavior of the perf tools in the Linux kernel. Currently, the perf report shows relative percentages on filter entries by default. However, with this patch, the perf report will show absolute percentages by default.

The patch has been suggested by Jiri Olsa and signed-off by Namhyung Kim. It also includes a link to the discussion thread on the LKML.

Based on the information provided, it seems reasonable to accept this patch. The change in default behavior can provide more accurate and meaningful information to users of the perf tools.
false || ACK

This patch converts the mos7720.c driver to use the module_usb_serial_driver() call instead of having to have a module_init/module_exit function. This change eliminates duplicated code and simplifies the driver initialization and cleanup process.

The patch has been reviewed by several individuals who are experts in the field, including Johan Hovold, Rusty Russell, Alan Stern, and Mauro Carvalho Chehab. It has also been signed-off by Greg Kroah-Hartman, who is a well-known Linux kernel developer.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch removes unnecessary braces in the code, which fixes a checkpatch warning. The change is a single statement block, so the braces are not necessary. The patch also includes the appropriate sign-offs.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch fixes a coding style issue by moving the assignment statement out of the if () block. Assignments within an if () block are generally discouraged in order to improve code readability and maintainability. The patch also includes the necessary error handling by checking if the allocation of memory was successful. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. It addresses the issue where the MTU may be reduced by the host due to headroom reservation for encapsulation when the host uses packet encapsulation feature. The patch adds processing of the new MTU value in the hyperv driver. It modifies the `negotiate_nvsp_ver` function in `netvsc.c` to handle the new MTU value by adding the `ETH_HLEN` (Ethernet header length) to the existing MTU value. It also modifies the `netvsc_change_mtu` function in `netvsc_drv.c` to set the limit for the MTU value to `NETVSC_MTU - ETH_HLEN` and adds a check to ensure that the MTU value is not less than `ETH_DATA_LEN` (1500) or greater than the limit. Additionally, it modifies the `rndis_filter_device_add` function in `rndis_filter.c` to get the MTU value from the host and update the `mtu` field of the `net_device` structure.

Overall, this patch ensures that the hyperv driver properly handles the reduced MTU value set by the host and updates the necessary data structures accordingly.
false || ACK

This patch improves the functionality of the sirf serial driver by correctly setting the baud rate when the ioclk is not 150MHz. It introduces a check to recalculate the clk_div_reg when the ioclk is not 150MHz. Additionally, it adds the functionality to get the clk in the probe and put it in remove.

The patch also includes the necessary changes in the probe and remove functions to handle the clk. It gets the clk in the probe function, enables it, and sets the uartclk to the rate of the clk. In the remove function, it disables and unprepares the clk.

Overall, this patch improves the accuracy of the baud rate setting and adds necessary functionality for handling the clk. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code by replacing the open-coded _regulator_is_enabled() function with the actual function call. This makes the code more readable and maintainable. Additionally, it fixes a bug in the regulator_suspend_finish() function where the condition for disabling the regulator was incorrect. The patch correctly checks if the regulator is not enabled before disabling it.

The patch has been reviewed and Acked-by Liam Girdwood, who is a maintainer of the drivers/regulator/core.c file. This indicates that the patch has been reviewed and approved by a trusted source.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the variable "num_drc_entries" from an unsigned int to an atomic_t, allowing for atomic operations on the variable. This eliminates the need for spinlocking around the variable, improving performance and avoiding potential race conditions.

The patch also updates the code to use atomic operations for incrementing and decrementing the variable, ensuring thread-safety.

Overall, this patch improves the thread-safety and performance of the nfsd module, making it suitable for inclusion in Linux -stable releases.
false || ACK

This patch exports the `confirm_error_lock` symbol, which allows the use of `eeh_serialize_lock()` and `eeh_serialize_unlock()` functions to freeze the affected PE in the PCI surprise hot remove path. Exporting this symbol will make it accessible to other modules or code that may need to use it.

The patch also includes the `EXPORT_SYMBOL_GPL(confirm_error_lock)` statement, which indicates that the symbol is exported under the GPL license.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a formatting issue in the perf trace code. It adds a closing parenthesis ')' to the fprintf statement, which was missing before. This change ensures that the output is correctly formatted when the sys_enter function is called. The patch has been reported by Ingo Molnar and has been reviewed by several other developers.

Based on the information provided, there are no apparent issues with this patch. It is a simple and straightforward fix that improves the code's readability and correctness. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the cxgb4vf driver where the VLAN extraction counter is not being incremented when a VLAN tag is present in the received packet. The patch adds the necessary code to increment the counter when a VLAN tag is extracted.

The patch has been reviewed and signed-off by multiple developers, including the driver maintainer. It is a small and straightforward fix that addresses a specific issue without introducing any new functionality or potential regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the order of amdgpu_bo_unreserve calls in the GEM_OP IOCTL function in the amdgpu driver. The patch ensures that amdgpu_bo_unreserve is called before any error returns or function exits, preventing potential resource leaks.

The patch has been reviewed by Chunming Zhou and has been tested in the drivers/gpu/drm/amd/amdgpu/amdgpu_gem.c file.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch splits the media_entity_graph_walk_next() function into two separate functions, media_graph_walk_iter() and media_graph_walk_next(). This split is done to simplify the media_entity_graph_walk_next() function, which has become more complicated with the addition of has_routing() support.

The media_graph_walk_iter() function handles the iteration logic of the graph walk, while the media_graph_walk_next() function serves as the entry point for obtaining the next media entity in the graph walk.

The patch has been reviewed by Laurent Pinchart and signed-off by Sakari Ailus and Mauro Carvalho Chehab.

Based on the provided information, the patch appears to be a valid improvement to the codebase, simplifying the existing function and improving maintainability. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch enables oprofile support on Lantiq SoCs by setting the performance counters irq. It also specifies the LTQ_PERF_IRQ to be used by oprofile. The patch is signed-off by John Crispin and Ralf Baechle, and has been submitted to the Linux-mips mailing list.

Based on the information provided, the patch appears to be a valid and necessary addition to enable oprofile support on Lantiq targets. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the required AUXDATA for the Tegra30 AHUB module in order to get specific device names for clock lookups. The patch has been signed-off by Stephen Warren and Acked-by Olof Johansson. The change is necessary for proper functioning of the Tegra30 I2S and AHUB modules. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch adds support for the finit_module syscall in the Linux kernel. It updates the syscall numbers in the arch/sh/include/uapi/asm/unistd_32.h and arch/sh/include/uapi/asm/unistd_64.h files, as well as the sys_call_table in the arch/sh/kernel/syscalls_32.S and arch/sh/kernel/syscalls_64.S files.

Since the patch adds support for a new syscall, it is important to ensure that it is properly implemented and does not introduce any security vulnerabilities or other issues. However, based on the information provided in the patch, there are no obvious red flags or concerns.

Therefore, the patch can be accepted in Linux -stable releases.
false || ACK

This patch modifies the rb532_gpio_get function in the rb532/gpio.c file. It ensures that the return value of the rb532_get_bit function is clamped to [0,1] by using the ret = !!(val) design pattern. This is necessary to allow gpio_chip .get() calls to return negative error codes and propagate to drivers.

The patch has been reviewed and signed-off by Linus Walleij and Ralf Baechle, who are both recognized contributors in the Linux community. It has also been submitted to the Patchwork system for further review.

Based on the information provided, the patch appears to be a valid and necessary fix for the rb532_gpio_get function. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds error handling for the clk_prepare_enable() function in the twl6040_power() function of the twl6040 driver. It checks the return value of clk_prepare_enable() and propagates the error in case of a failure.

By adding this error handling, the patch improves the reliability and robustness of the twl6040 driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the ftrace/x86 code to use the generic ftrace_modify_all_code() function instead of duplicating code in the arch_ftrace_update_code() function. It also makes the ftrace_replace_code() function a weak function so that it can be overridden by the architecture-specific code.

The changes in this patch improve code organization and reduce duplication, which is generally a good practice. The use of the generic ftrace_modify_all_code() function also ensures consistency across architectures.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the efficiency of the KVM MMU by reducing the number of KVM_REQ_MMU_RELOAD requests when the root page is zapped. It adds a check for sp->role.invalid and is_obsolete_sp() in kvm_mmu_prepare_zap_page before calling kvm_reload_remote_mmus(). This check ensures that the obsolete pages are not used on any vcpus, improving the overall performance of the system.

The patch has been reviewed by Marcelo Tosatti and signed-off by Gleb Natapov and Xiao Guangrong, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces a helper function `das16_isadma_disable()` in the staging/comedi/das16.c file. The function is used to disable the ISA DMA controller and return the residue as described in Documentation/DMA-ISA-LPC.txt.

The patch also modifies the `disable_dma_on_even()` function to use the new helper function `das16_isadma_disable()` instead of directly calling `disable_dma()` and `get_dma_residue()` functions. This change improves code readability and maintainability.

Additionally, the patch removes unnecessary code related to claiming and releasing the DMA lock in the `das16_interrupt()` and `das16_alloc_dma()` functions, as the new helper function takes care of it.

Overall, this patch improves the code structure and adds a useful helper function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds functionality to the nct6775 driver in the hwmon subsystem. It detects and reports additional temperature sources by scanning all temperature sources used for fan control and checking if additional monitoring registers are available. If additional registers are found, it enables monitoring for those temperature sources.

The patch is well-written and does not introduce any new issues. It adds a new function `add_temp_sensors` that is called in the `nct6775_probe` function to enable monitoring for additional temperature sources. The code is clear and easy to understand.

The patch has been reviewed and signed-off by the author, Guenter Roeck, who is a known contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a fix for the USB gadget driver in the Linux kernel. It replaces a BUG() call with a dev_WARN() call to handle the case where an unknown endpoint type is encountered. The dev_WARN() call will print a warning message but will not crash the system.

This patch improves the stability of the USB gadget driver by preventing the system from crashing when encountering an unknown endpoint type. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the brcmfmac driver where the vendor specific commands were always using the main interface. The patch changes this behavior to use the interface supplied by the caller. 

The patch has been reviewed by Arend Van Spriel and Pieter-Paul Giesberts from Broadcom, and they have given their approval. It has also been signed-off by Hante Meuleman, Arend van Spriel, and John W. Linville.

The changes in the patch correctly update the code to use the caller supplied interface instead of the main interface. This fix is necessary to ensure that the vendor specific commands work correctly with the correct interface.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the performance of the serial-uartlite driver by reducing the time the spinlock is held inside the loop. By moving the spin_lock_irqsave() and spin_unlock_irqrestore() calls inside the loop, the spinlock is held for a shorter duration, which can improve the overall system performance.

The patch also correctly initializes the 'stat' variable before entering the loop, ensuring that it is not uninitialized when used in the ulite_receive() and ulite_transmit() functions.

Overall, this patch improves the efficiency and correctness of the serial-uartlite driver, and therefore should be accepted in Linux -stable releases.
false || ACK

This patch corrects the 'direction' parameter of the device_prep_dma_cyclic function in the ASoC mxs driver. The patch changes the parameter type from dma_data_direction to dma_transfer_direction, which is consistent with the changes made in the commit 49920bc.

The patch has been reviewed and Acked-by two maintainers, Shawn Guo and Dong Aisheng. Additionally, it is signed-off by Mark Brown.

The change in the 'direction' parameter ensures that the correct DMA transfer direction is used for the mxs driver. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds a suggestion for users to try using the "pci=realloc" boot parameter if some PCI device resources are unassigned. This can be helpful in resolving resource allocation issues. The patch also includes an update to the suggestion text.

The patch has been suggested by Jesse Barnes and signed-off by Yinghai Lu and Jesse Barnes, who are both recognized contributors in the Linux kernel community.

Overall, this patch provides a useful suggestion to users and does not introduce any potential issues or regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes sparse warnings in the udl_connector.c file by adding missing static storage class specifiers. The warnings indicate that certain symbols should be declared as static. The patch adds the static keyword to the udl_best_single_encoder, udl_connector_set_property, udl_connector_helper_funcs, and udl_connector_funcs functions.

By adding the static keyword, these symbols are now only visible within the udl_connector.c file, which is the intended behavior. This improves code encapsulation and reduces the risk of symbol conflicts with other parts of the codebase.

The patch has been reviewed and signed-off by Sachin Kamat and Alex Deucher. It also includes the sign-off from Dave Airlie, who is a recognized contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code readability and maintainability by using true/false defines instead of 0/1 for boolean variables. It does not introduce any functional changes or potential issues. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch addresses a potential issue in the arm64 architecture where secondary CPUs may be left in a limbo state between the old and new code after instruction patching. The patch ensures that the patched instruction stream is visible to the CPU by adding an isb instruction after cache maintenance has completed.

The patch has been reviewed and signed-off by Will Deacon, who is a recognized expert in the arm64 architecture. The change is also localized to the arm64/kernel/alternative.c file, which suggests that it is specific to the arm64 architecture and should not have any unintended side effects on other architectures.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds the missing code to pass the number of tasks to the QM init logic in the qed_qm_init_pf function. Without this code, there could be back-pressure in scenarios requiring many tasks, leading to reduced performance. Therefore, accepting this patch would improve the performance of the driver.
false || ACK

This patch fixes a bug where locally assigned nexthop addresses were not being rejected properly. The patch adds an explicit test to check if the nexthop gateway is a local address and returns an error if it is. This ensures that the route lookup will not pick the wrong outdev due to the prefix route being added before DAD work is started.

The patch has been reviewed and Acked-by two developers, Florian Westphal and Hannes Frederic Sowa. It also includes a link to the bug report where the issue was reported.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a copy/paste error in the code. The comment above mentions link A/B, but the code actually sets the value for link A and link B. The patch corrects this by setting the value for link A and link B separately. This fix ensures that the code matches the intended behavior described in the comment.

The patch has been signed-off by Stéphane Marchesin and Thierry Reding, who are both recognized contributors in the Linux kernel community. Therefore, it can be considered reliable.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a build error on arm64 by adding a missing definition for PERF_REGS_MAX. The patch has been reviewed and Acked by Jean Pihet and the link to the discussion is provided. Additionally, it has been signed-off by Mark Salter and Arnaldo Carvalho de Melo. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch initializes the boolean variable 'found' to false in the lp8788_find_irq_id() function. This is important because the variable is used in a loop to track whether a specific IRQ ID is found. Without initialization, the variable would contain garbage values, leading to unpredictable behavior.

The patch has been reviewed and Acked-by two developers, indicating that it has been tested and found to be correct. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a compiler warning in the iommu.c file. The warning is related to the pr_debug statement where the format specifier for the pgsize variable is missing. The patch adds the missing format specifier and correctly formats the pr_debug statement.

Since this patch only fixes a compiler warning and does not introduce any new functionality or changes, it can be considered safe to include in Linux -stable releases.
false || ACK

This patch fixes a bug introduced by commit c5b367835cfc ("MIPS: Add support for XPA.") which changed the build_pte_present() and build_pte_writable() functions to assume a constant offset of _PAGE_READ and _PAGE_WRITE relative to _PAGE_PRESENT. However, this assumption is no longer true for some MIPS32R2 builds since commit be0c37c985ed ("MIPS: Rearrange PTE bits into fixed positions.").

The patch makes use of the _PAGE_READ and _PAGE_WRITE definitions to calculate the correct mask to apply instead of hard coding the values. This ensures that the correct offset is used for MIPS32R2 builds.

The patch also includes the necessary Fixes tag and is signed-off by the relevant maintainers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the greybus driver for UART devices in the Linux kernel. It properly ties the UART driver into the greybus core by assigning the gb_tty pointer to the gdev->gb_tty field instead of using the greybus_set_drvdata() function. Similarly, in the gb_tty_disconnect() function, the gb_tty pointer is assigned to the gdev->gb_tty field instead of using the greybus_get_drvdata() function.

This change improves the code clarity and eliminates the need for the greybus_set_drvdata() and greybus_get_drvdata() functions, which are not necessary in this context.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch introduces a constant `LRW_BLOCK_SIZE` and replaces the usage of `crypto_cipher_blocksize()` with `LRW_BLOCK_SIZE` in the LRW cipher implementation. This change ensures that the LRW cipher always uses a fixed block size of 16, which is the correct block size for LRW.

By using a constant instead of a function call, the code becomes more efficient and easier to understand. Additionally, this change improves code maintainability as any future modifications related to the block size can be made in a single place.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the argument "virq" to "irq" in the function mpc8xxx_gpio_irq_map(). The argument "virq" is not any more "virtual" than any other Linux IRQ number, so the renaming makes the code more clear and consistent. The patch also updates the function calls to use the new argument name. This change does not affect the functionality of the code, but improves its readability. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. It adds support for new usages (WACOM_G9_PEN, WACOM_G9_TOUCHSCREEN, WACOM_HID_G9_PEN, WACOM_HID_G11_PEN, WACOM_HID_G9_TOUCHSCREEN, WACOM_HID_G11_TOUCHSCREEN) to the WACOM_PEN_FIELD and WACOM_FINGER_FIELD macros. These new usages were not previously recognized by the macros, but they should be. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone proper testing and review.
false || ACK

This patch modifies the clone_mnt function in the fs/namespace.c file. It adds a condition to set the MNT_LOCKED flag on the new mount if the CL_UNPRIVILEGED flag is set and either the CL_EXPIRE flag is not set or the old mount's mnt_expire list is empty.

This change ensures that unprivileged users cannot reveal what is under a mount unless the CL_EXPIRE flag is set and the old mount has entries in its mnt_expire list.

The patch appears to be a valid and necessary security enhancement. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a quirk for the ASUS X75VD laptop to ensure that Wi-Fi works properly when the asus_nb_wmi module is loaded with the wapf=4 option. The patch includes the necessary DMI information to identify the ASUS X75VD model and applies the quirk accordingly.

Since this patch addresses a specific issue with Wi-Fi functionality on a specific ASUS laptop model, it is appropriate to include it in the Linux -stable releases.
false || ACK

This patch adds a prefix to the print messages in the base signature handling code in the asymmetric key subsystem. This is a good practice as it helps in identifying the source of the print messages and improves the readability of the code.

The patch also includes the necessary header files and defines the pr_fmt() macro to set the desired prefix for the print messages.

Overall, this patch is a simple and straightforward improvement to the code and should be accepted in Linux -stable releases.
false || ACK

This patch fixes warnings reported by the compiler when building the microblaze kernel. The warnings are related to comparison between signed and unsigned integer expressions. The patch changes the loop counters from signed integers to unsigned integers, which resolves the warnings.

The patch also includes a signed-off-by line, indicating that the author has reviewed and approved the changes.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

The patch marks the function "ql4_84xx_ipmdio_rd_reg" as static, which is appropriate since the function is only used within the file it is declared in. This change resolves a warning that occurs during the build process when using the -W=1 flag.

The patch has been reviewed and Acked-by Nilesh Javali, who is a developer from QLogic, and signed-off by Baoyou Xie and Martin K. Petersen.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch introduces two new knobs, idgen_retries and idgen_delay, as specified by RFC 7217. These knobs are used in the address generation process for IPv6. The patch modifies the netns_sysctl_ipv6 structure to include these knobs and initializes them in the inet6_net_init function.

The idgen_retries knob is used to control the number of retries for generating a stable address when there are DAD conflicts. The idgen_delay knob is used to control the delay between retries.

The patch also modifies the addrconf_dad_failure and ipv6_generate_stable_address functions to use the new knobs when generating stable addresses.

Overall, this patch adds important functionality to the IPv6 address generation process and should be accepted in Linux -stable releases.
false || ACK

This patch moves the declaration of the bpf_jit_enable variable to the filter.h file, where most other core code is declared. This is a good practice for code organization and improves readability. Additionally, the patch also removes the duplicate declaration of bpf_jit_enable in netdevice.h, which is no longer needed.

The patch has been reviewed and Acked-by Alexei Starovoitov and Signed-off-by Daniel Borkmann, indicating that it has been reviewed and approved by other developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the behavior of automatic jack switching in the ALSA HDA driver. It ensures that when a jack is retasked as a different direction (e.g., a mic jack used as a CLFE output), it is not counted as the target for automatic jack switching. This prevents unwanted automute or autoswitch actions when the current pinctl direction is different from what is expected.

The patch adds checks to skip the automute or autoswitch when the current pinctl direction is different from what is supposed. It checks if the pin is retasked as an input or output and continues to the next pin if it is. This ensures that only the appropriate pins are considered for automute or autoswitch.

Overall, this patch improves the accuracy and reliability of automatic jack switching in the ALSA HDA driver, and it should be accepted in Linux -stable releases.
false || ACK

This patch adds the missing cmpxchg64() function if CONFIG_RMW_INSNS=y. It resolves an error in the drivers/block/blockconsole.c file where cmpxchg64 is implicitly declared. The patch maps cmpxchg64 to cmpxchg64_local, which is already mapped to __cmpxchg64_local_generic. This ensures consistency with the CONFIG_RMW_INSNS=n case.

The patch has been signed-off by Geert Uytterhoeven and is located in the arch/m68k/include/asm/cmpxchg.h file.

Based on the provided information, the patch appears to be a valid fix for the error and should be accepted in Linux -stable releases.
false || ACK

This patch improves the calculation of the address of query 8 in the HID RMI driver. Previously, the address was hardcoded, but now it is calculated based on the presence of query registers. This is important because if a touchpad does not report relative data, query 6 will not be present and the address of query 8 will be one less. By calculating the location of query 8 dynamically, the patch ensures that the correct address is used regardless of the presence of query 6.

The patch also includes error handling for reading gesture information in query 8. If the read operation fails, an error message is printed and the function returns the error code. This improves the robustness of the driver.

Overall, this patch improves the functionality and reliability of the HID RMI driver, and therefore should be accepted in Linux -stable releases.
false || ACK

This patch moves the 64-bit feature fixup earlier in the code, specifically in the early_setup() function. This ensures that the feature fixups are applied before turning on the MMU, which can have an impact on the various assembly paths related to MMU management and interrupts.

By making this change, the 64-bit code aligns with what the 32-bit code already does. This patch also applies all the dynamic patching before allowing interrupts to switch to virtual mode.

Overall, this patch improves the order of operations and ensures that the feature fixups are applied at the appropriate time. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the zl10353 driver in the Linux kernel to report the Signal-to-Noise Ratio (SNR) in a more meaningful way. Currently, the SNR is reported using raw hardware register values, which may not be easily interpretable. The patch changes the calculation of the SNR to report it in a 0.1 dB scale, which provides a more accurate and understandable representation of the SNR.

The patch is simple and straightforward, and it does not introduce any new functionality or potential issues. It only modifies the calculation of the SNR value, ensuring that it is reported in a more meaningful scale. The patch has been signed-off by the original author and a maintainer, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds more register documentation to the irq-renesas-irqc.c driver. The added documentation provides information about the various registers used in the driver, such as the Interrupt Request Status Register, Interrupt Enable Status Register, and Interrupt Enable Set Register. It also provides information about the registers related to interrupt detection, signal level monitoring, high and low level detection, edge detection, and chattering reduction.

The added documentation will be helpful for developers and maintainers who work with the irq-renesas-irqc.c driver. It will make it easier for them to understand the functionality and usage of the registers in the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a "line over 80" issue by removing a comment that was causing the line to exceed 80 characters. The change itself is simple and does not introduce any new functionality or potential issues. Therefore, it can be considered a clean and safe fix for the issue.
false || ACK

This patch fixes a build error that occurs when the CONFIG_OF configuration option is not set. The error is caused by the 'rspi_of_match' variable being undeclared in the 'rspi_probe' function. 

The patch adds a definition for 'rspi_of_match' when CONFIG_OF is not set, which resolves the build error. 

The patch also includes the necessary Signed-off-by tags from the authors. 

Therefore, I recommend accepting this patch in Linux -stable releases.
false || NAK

The patch in question modifies the if condition in the toshiba_kbd_bl_mode_store function in the toshiba_acpi.c file. The original if condition checks if the sscanf function successfully reads an integer from the buf string and if the mode variable is either 2 or 1. The patch changes the logical operator from && to ||, which means that the condition will be true if either the sscanf function fails to read an integer or if the mode variable is not equal to 2 or 1.

This change introduces a logical error in the code. With the patch applied, the condition will always evaluate to true because the mode variable cannot be both 2 and 1 at the same time. This means that the function will always return -EINVAL, regardless of the value read from the buf string.

Therefore, I would not recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the code in the spi-bfin-v3.c and spi-ti-qspi.c files to use the SPI_BPW_MASK macro instead of manually setting the bits_per_word_mask field. This change improves code readability and maintainability.

Using the SPI_BPW_MASK macro ensures that the bits_per_word_mask field is set correctly for the supported word sizes (32, 16, and 8). This ensures that the SPI driver can handle these word sizes correctly.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds debug prints for vring deallocation in the wil6210 driver. The debug prints provide information about the vring being deallocated, including the vring index, size, virtual address, physical address, and context. These debug prints can be helpful for troubleshooting and debugging purposes.

Since the changes are only related to debug prints and do not affect the functionality or stability of the driver, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch moves the sdio related variables from dhd_linux.c to dhd_sdio.c in the staging/brcm80211/brcmfmac directory. This is a clean-up operation that improves the organization and maintainability of the code.

The patch has been reviewed by multiple Broadcom developers and has their Reviewed-by tags. It also has the Signed-off-by tags from the original author and the maintainer.

The changes in the patch do not introduce any new functionality or modify existing behavior. They only move variables from one file to another. Therefore, the patch is safe and does not introduce any risk of regression or instability.

Based on these factors, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch replaces the usage of clk_enable/disable with clk_prepare_enable/disable_unprepare in the atmel_usba driver. This change is made to avoid common clk framework warnings.

The patch also introduces error handling in the atmel_usba_start function. If clk_prepare_enable fails for either udc->pclk or udc->hclk, the function will return the error code and clean up by calling clk_disable_unprepare for the successfully enabled clock.

Similarly, in the atmel_usba_stop function, clk_disable_unprepare is used to disable and unprepare the clocks udc->hclk and udc->pclk.

In the usba_udc_probe function, clk_prepare_enable is used for pclk, and if it fails, an error message is printed and the function jumps to the err_clk_enable label to clean up and return the error code.

Overall, this patch improves the handling of clocks in the atmel_usba driver and adds proper error handling. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes the use of __func__ in the dev_err logging statements in the gdm72xx driver. The use of __func__ in the log printout provides information about the device, driver, and specific instance of the device. However, in this case, the use of __func__ does not provide any additional useful information and can be safely removed. The patch replaces __func__ with a generic "error" message. This change does not affect the functionality of the driver and improves the readability of the log messages. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch moves the final fixups from the __init section to the __devinit section in the x86/PCI code. The reason for this change is that final fixups are executed during device enumeration, and if hotplug is supported, this may happen after boot. Therefore, the final fixups cannot be in the __init section.

The patch also adds the __devinit annotation to the quirk_amd_nb_node function, indicating that it is only used during device initialization and can be discarded after that.

Overall, this patch improves the code by correctly placing the final fixups and adding the appropriate annotation. It does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch adds the Acer Aspire 5741 to the video_vendor_dmi_table in the acer-wmi driver. This is necessary because the Aspire 5741 has broken acpi-video backlight control. The patch includes references to a bug report and has been reviewed by two developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch allows the use of ".GCC.command.line" sections in modules to prevent modpost warnings. It adds ".GCC.command.line" to the section_white_list array in the modpost.c file. This change is necessary to avoid the warning "unexpected non-allocatable section" when using the sound/usb/snd-usbmidi-lib.o module.

The patch has been signed-off by Jonathan Kliegman <kliegs@chromium.org> and Michal Marek <mmarek@suse.cz>, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds error checking for DMA mapping in the advansys driver. It checks for errors when mapping the sense buffer and the scatter-gather list. If an error occurs, it returns ASC_BUSY, indicating that the driver is busy and cannot process the request.

The error checking is important to ensure that DMA mapping is successful and to handle any errors that may occur. By adding this error checking, the patch improves the reliability and stability of the advansys driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds documentation and checks for an internal limit on object size in the i915 driver. It adds a warning to remind developers about the limit and catches if the object size exceeds the limit. This is important to prevent crashes on systems with object sizes larger than 43 bits.

The patch also adds a check for the size of the object to ensure it fits within a 32-bit signed variable. If the size exceeds this limit, an error is returned.

Overall, this patch improves the robustness and stability of the i915 driver and should be accepted in Linux -stable releases.
false || ACK

This patch adds a debug level for channel context in the ath9k driver. It introduces a new debug flag ATH_DBG_CHAN_CTX and adds a debug message when channel contexts are used. This patch does not introduce any new functionality or change any existing behavior, but it provides additional debugging information for developers working with channel contexts.

Since this patch is only adding debug information and does not affect the functionality or stability of the driver, it can be accepted in Linux -stable releases.
false || ACK

The patch removes the deprecated function create_singlethread_workqueue() and replaces it with alloc_ordered_workqueue(). This change improves the code by using an ordered dedicated workqueue.

The patch has been reviewed and Acked-by Charles Keepax <ckeepax@opensource.wolfsonmicro.com>, which indicates that it has been reviewed and approved by a trusted developer.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the pulse8-cec driver where the all_device_types field was not being filled in when the persistent state is restored. The patch adds the missing assignments for all_device_types based on the primary_device_type. This ensures that the all_device_types field is correctly set when restoring the configuration.

The patch has been reviewed and signed-off by Hans Verkuil and Mauro Carvalho Chehab, who are both experienced developers in the Linux media subsystem.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the error handling in the `init_dma_pools()` function in the `amd5536udc` USB gadget driver. It replaces the use of `goto` statements with proper error handling using return statements. This makes the code more readable and maintainable.

The patch also adds proper cleanup code in case of errors during allocation and setup of DMA pools. This ensures that any allocated resources are properly freed before returning from the function.

Overall, this patch improves the reliability and robustness of the `init_dma_pools()` function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the ftdi_sio driver where USB-internal error codes were being returned to userspace. The patch adds a call to the usb_translate_errors() function to convert the error code before returning it to userspace.

By adding this call, the patch ensures that only appropriate error codes are returned to userspace, improving the overall stability and reliability of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the performance of determining if an IPv6 address is an any address by using the ipv6_addr_any() helper function. This avoids the need to compute the address type, resulting in faster execution.

The patch has been reviewed and Acked-by Nicolas Dichtel and Signed-off-by Cong Wang, indicating that it has been tested and approved by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch corrects the placement of open braces in the file ieee80211_crypt_ccmp.c in the rtl8192u driver. The changes are minor and do not affect the functionality of the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

The patch removes the unnecessary NULL pointer check before calling the release_firmware() function. The release_firmware() function can handle a NULL pointer gracefully, so the explicit tests before the call are pointless. Removing these tests simplifies the code and improves readability. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch is a simple formatting change that removes an unnecessary line break in the show_scaling_cur_freq() function in the cpufreq.c file. It does not affect the functionality or behavior of the code. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch fixes a warning from the sparse tool by marking the static key for movntqda as static. The change is simple and does not introduce any new functionality or risk. It is a straightforward fix that improves code quality. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the wm8776 codec driver to use table-based control and DAPM initialization. This change improves code readability and maintainability. The patch removes the usage of deprecated functions snd_soc_add_controls, snd_soc_dapm_new_controls, and snd_soc_dapm_add_routes, and replaces them with the new control and DAPM initialization methods.

The patch also updates the codec driver structure to use the new control and DAPM initialization fields. This ensures that the codec driver is properly initialized with the correct controls, widgets, and routes.

Overall, this patch improves the code structure and ensures compatibility with the latest changes in the ASoC framework. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the performance of the GPIO controller by caching two additional registers. It also modifies the code to use the cached values instead of reading from the registers directly, which can further improve performance.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review.

Overall, this patch is a performance improvement and has been reviewed and tested, so it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for parsing out the ECC information for the full-id nand chips. It sets the ECC strength and step for the chip based on the NAND_ECC_STRENGTH and NAND_ECC_STEP macros. This is a useful addition as it allows for better handling of ECC in full-id nand chips.
false || ACK

The patch removes the local functions `of_graph_get_port_by_reg()`, `of_graph_get_endpoint_by_reg()`, and `of_get_child_by_name_reg()` and replaces them with the `of_graph_get_endpoint_by_regs()` helper function. This simplifies the code and removes duplicate functionality.

The patch has been reviewed by multiple developers and has been tested in the `drivers/gpu/drm/exynos/exynos_drm_dsi.c` file.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the unused parameter *pPacket from the function s_cbFillTxBufHead in the vt6655 driver. Instead of using the parameter *pPacket, the patch uses the locally available skb->data to copy the packet into a tx buffer. This change improves code readability and removes unnecessary code. The patch also updates the function call to s_cbFillTxBufHead in the vnt_generate_fifo_header function to remove the unused parameter *pPacket. Overall, the patch improves the code by removing unused parameters and using locally available variables, so it should be accepted in Linux -stable releases.
false || ACK

The patch makes the mfd_cell array const, which is expected by the mfd_add_devices() function. This change ensures that the array is not modified accidentally, improving code safety and maintainability. The patch has been reviewed and Acked-by Linus Walleij, which adds credibility to its acceptance. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch implements the start_streaming and stop_streaming operations for the vb2 queue in the uvcvideo driver. It moves the video enable/disable code to these operations. This change ensures that the videobuf2 core code is in charge of stream start/stop control, which is necessary for proper functioning.

The patch also updates the vb2_ops structure to include the new start_streaming and stop_streaming operations.

Overall, this patch improves the code structure and ensures proper stream start/stop control. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the is_file_hugepages() function in the hugetlb.h header file to return a boolean value instead of an integer. The function only uses either one or zero as its return value, so changing it to return a bool improves readability.

The patch also removes an unnecessary if condition in the function, allowing it to return the result directly. This change does not introduce any functional changes.

The patch has been reviewed and Acked-by Michal Hocko, indicating that it has been reviewed and approved by another developer.

Therefore, based on the provided information, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the "frontend" extra MSR on Skylake in the JSON conversion. It has been reviewed and Acked-by Ingo Molnar. The patch also includes the necessary changes to the jevents.c file.

Based on this information, it seems that the patch is well-tested and has received positive feedback from the community. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a POSTING_READ operation to keep the cached values in sync with the hardware. The change is simple and does not introduce any new functionality or potential issues. It has been reviewed and signed-off by multiple developers, including the maintainer of the affected code. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds two new functions to the amdgpu_ring structure: get_emit_ib_size and get_dma_frame_size. These functions are used to calculate the size of the ib and dma frame respectively, which is necessary for proper space allocation on the ring for ib submissions.

The patch has been reviewed by Christian König and signed-off by Alex Deucher, both from AMD. This indicates that the patch has undergone review and testing by experts in the field.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch is a simple code cleanup that adds the __always_unused attribute to the filter_mask parameter in the i40e_ndo_bridge_getlink function. This attribute indicates that the parameter is intentionally unused and prevents compiler warnings about unused variables.

Since this change does not affect the functionality of the code and improves code readability, it can be accepted in Linux -stable releases.
false || ACK

This patch adds a necessary functionality to the nps_enet driver in the Linux kernel. It acknowledges the TX done interrupt when it is in "level mode". This is important for certain simulators of the device.

The patch is signed-off by the original author and the maintainer of the driver, which indicates that it has been reviewed and approved by them.

The added code sets the TX control register to 0, which acknowledges the TX done interrupt. This ensures that the interrupt is properly handled and any potential errors are accounted for.

Overall, this patch improves the functionality and reliability of the nps_enet driver, and therefore should be accepted in Linux -stable releases.
false || ACK

This patch fixes an endian bug in the cpufreq cooling code. The bug causes incorrect values to be stored in the high bits of the unsigned long variable, resulting in very high values instead. The patch changes the type of the "count" variable from unsigned long to unsigned int to ensure correct storage of values on big endian systems.

The patch also includes proper sign-offs from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes the global variable "errata" and moves it into the errata configuration function. This improves code organization and reduces the scope of the variable. The patch also updates the function signature to use "unsigned" instead of "u32" for consistency.

The patch has been Acked-by Tony Lindgren, indicating that it has been reviewed and approved by another developer.

Overall, the patch improves the code structure and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds soft reset controller support for the STiH416 platform. It introduces a new softreset controller node in the device tree and defines the reset lines required for various device tree nodes.

The patch also adds the necessary definitions for the softreset lines in the header file.

Overall, this patch adds important functionality to the STiH416 platform and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the sch_fq.c file in the net_sched module. It replaces the use of hash_32() with hash_ptr() for 64-bit architectures with large amounts of memory. The patch is signed-off by Eric Dumazet and David S. Miller.

The use of hash_ptr() provides more entropy on 64-bit architectures with terabytes of memory and avoids the need for casting. This improves the efficiency and performance of the sch_fq module.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the greybus driver where it tries to set the direction of a GPIO pin even after failing to request it. The patch checks the return value of devm_gpio_request() and if it is an error, it skips setting the direction of the GPIO pin. This prevents potential issues that could arise from trying to set the direction of a GPIO pin that was not successfully requested.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch modifies the fuse_file_fallocate() function in the fs/fuse/file.c file. It replaces the usage of file->f_inode with file_inode(file) to obtain the inode pointer. 

Using file_inode() is the recommended way to obtain the inode pointer from a file structure in the Linux kernel. This function handles the necessary locking and reference counting, ensuring the integrity of the inode pointer.

Therefore, this patch improves the code by using the correct function to obtain the inode pointer and should be accepted in Linux -stable releases.
false || ACK

This patch makes the struct regmap_config and struct regulator_ops const, which is a good practice for structures that are not modified by the driver. Making these structures const ensures that they are not accidentally modified, improving code safety and maintainability.

By making the struct regulator_ops const, it indicates that the operations defined in the structure do not modify any data. This is important for clarity and understanding the behavior of the code.

Similarly, making the struct regmap_config const ensures that the configuration is not modified after initialization, which is desirable for stability and consistency.

Overall, this patch improves code quality and should be accepted in Linux -stable releases.
false || ACK

This patch adds a check to properly handle beaconing mode in MCC (Multiple Channel Concurrency) mode for the ath9k driver. It checks if the previous channel switch is set to occur after the beacon, and if not, it returns without adjusting the TSF (Time Synchronization Function) of the context.

The patch appears to be a bug fix that ensures the TSF adjustment is only performed when necessary in MCC mode. It has been reviewed and signed-off by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the ARM OMAP platform to switch from the deprecated sched_clock interface to the newer sched_clock_register interface. The 32-bit sched_clock interface now supports 64 bits, so this patch upgrades the function to use 64 bits instead of 32 bits. This allows for the removal of the 32-bit registration interface.

The patch also updates the setup_sched_clock function call to sched_clock_register, which is the recommended function for registering the sched_clock callback.

Overall, this patch improves the code by using the updated sched_clock_register interface and removing the deprecated 32-bit registration interface. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch converts the code in the emc1403 driver to use devm_ functions, which helps reduce code size and simplify the code. The conversion is done for memory allocation and deallocation using devm_kzalloc and devm_kfree, respectively. This ensures that the memory is automatically freed when the device is unregistered, eliminating the need for manual memory management.

The patch also removes unnecessary error handling code and simplifies the error handling logic. Instead of using goto statements, the patch directly returns the error code when an error occurs. This improves code readability and maintainability.

Overall, this patch improves the code quality and reduces the chances of memory leaks and error handling issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes the unnecessary call to the i8253_cascade_ns_to_timer_2div() function in the do_cmd() function of the adl_pci9111 driver. The function is already called in the do_cmdtest() function, which sets the required values for programming the 8254 timer. Therefore, there is no need to call the function again in the do_cmd() function. This patch improves the code by removing redundant function calls and does not introduce any new issues.
false || ACK

The patch removes redundant code in the ASoC wm8904 driver. The code in question adds routes to the DAPM (Dynamic Audio Power Management) graph. The patch removes a redundant call to `snd_soc_dapm_add_routes` for `core_intercon`. This change does not affect the functionality of the driver and improves code readability by removing unnecessary code.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch adds a lockdep_assert_held() function call to the fence_signal_locked() function in the dma-buf/fence.c file. This function call checks if the lock associated with the fence is held before proceeding with the rest of the function. This is a good practice to ensure that the lock is held when accessing the fence data structures, preventing potential race conditions.

The patch has been reviewed by Chris Wilson and signed-off by Rob Clark and Daniel Vetter, indicating that it has gone through a review process and has been approved by experienced developers.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch renames the camellia module to camellia_generic, which allows optimized assembler implementations to autoload with module-alias. The patch also updates the Makefile to reflect the new module name.

The patch does not introduce any new functionality or change the behavior of the camellia module. It only renames the module to allow for optimized implementations to be autoloaded.

The patch has been signed-off by Jussi Kivilinna and Herbert Xu, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the mlx5e_build_default_indir_rqt function in the mlx5e driver to distribute the default RSS table uniformly over the rings of the close NUMA node instead of all available channels. This change enforces the preference of close rings over far ones.

The patch also adds a new parameter to the mlx5e_build_default_indir_rqt function, which is the mlx5_core_dev structure representing the Mellanox device. This parameter is used to determine the NUMA node of the device and calculate the number of channels to use based on the number of cores in that NUMA node.

The patch is signed-off by the relevant developers and does not introduce any new issues or regressions. It improves the performance of the mlx5e driver by optimizing the distribution of the default RSS table.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the use of typedef ctl_table to struct ctl_table in the Linux kernel. The typedef is unnecessary and removing it simplifies the code. The patch also updates the variable declarations to use the struct keyword.

The changes in this patch are straightforward and do not introduce any new functionality or potential issues. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch updates the radeon acpi header in the drm/amdgpu driver. It adds new definitions for ATPX, including ATPX_DGPU_CAN_DRIVE_DISPLAYS and ATPX_MS_HYBRID_GFX_SUPPORTED. These new definitions provide additional functionality and support for ATPX. Since this patch adds new features and does not modify existing code, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a check to ensure that memory reclaim does not try to flush a non-WQ_MEM_RECLAIM workqueue or one of its work items. This is important because such a scenario can lead to deadlock. The patch introduces a new function called check_flush_dependency() which is called before flushing a workqueue. This function checks if the target workqueue has the WQ_MEM_RECLAIM flag set, and if not, it verifies that the current task is not reclaiming memory or running on a workqueue without the WQ_MEM_RECLAIM flag. If any of these conditions are met, a warning is triggered using WARN_ONCE().

This patch improves the reliability and stability of the workqueue subsystem by preventing potential deadlocks caused by memory reclaim trying to flush non-reclaim workqueues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue where the FPU type is not reported correctly on ColdFire MMU platforms. It sets the FPU type appropriately for the configured platform, so that /proc/cpuinfo will report FPU "none" on devices that don't have an FPU. Additionally, kernel code paths that initialize FPU hardware will only execute if an FPU is actually present.

The patch is signed-off by the author and the changes are made in the appropriate files. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch fixes an invalid use of sizeof in the rtsx_probe() function in the rtsx.c file of the staging driver for the rts5208 device. The patch correctly replaces sizeof(dev->chip) with sizeof(*dev->chip) to allocate memory for the chip structure. This ensures that the correct size is used for the allocation. The patch also includes the necessary Fixes and Signed-off-by tags. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch modifies the ARM sa1100 interrupt handling code to use the handle_domain_irq function instead of handle_IRQ. This change allows for automatic mapping of hardware IRQ numbers to virtual IRQs.

The patch has been tested by Linus Walleij and signed-off by Dmitry Eremin-Solenikov and Russell King, indicating that it has been reviewed and verified.

The change itself is a straightforward modification that improves the interrupt handling code. It does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch addresses a bug where the Intel D525MW mainboard incorrectly claims to have a connected LVDS header when it only has a VGA-out. The patch adds a DMI quirk to specifically handle this mainboard and prevent the false claim of a connected LVDS header.

The bug was reported by Cornel Panceac and the patch has been reviewed and Acked by Daniel Vetter. The patch also includes the necessary Signed-off-by tags from the relevant contributors.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch improves the turbostat tool by making the debugging output less verbose. Instead of printing all counters, it now only prints the counters that are active. This change makes the output more concise and easier to read.

The patch also includes a check to ensure that the counters are not NULL before printing them. This prevents any potential crashes or errors that could occur if the counters are not properly initialized.

Overall, this patch improves the functionality and usability of the turbostat tool without introducing any known issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue related to the firmware UCODE_ID_STORAGE in the Tonga's virtualization environment. It ensures that a BO is allocated and the BO's mc address is provided to the hardware, preventing a hang on VFs. The patch also includes a fix for coding style.

The patch has been reviewed and tested by multiple developers from AMD, and it has been Acked by Huang Rui.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch separates the rx page storage from the rxdesc structure in the ftgmac100 driver. It introduces a new member `rx_pages` in the `struct ftgmac100` to store the struct page pointers. This change ensures that the MAC frame metadata stored in the bottom 16 bits of RXDES#2 does not corrupt the struct page pointers.

The patch also introduces two new helper functions `ftgmac100_rxdes_page_slot` and `ftgmac100_rxdes_set_page` to handle the struct page pointers. These functions are used to set and get the struct page pointers for each rx descriptor.

The changes in the `ftgmac100_rx_packet` and `ftgmac100_free_buffers` functions ensure that the correct `struct ftgmac100` instance is passed to the `ftgmac100_rxdes_get_page` and `ftgmac100_rxdes_set_page` functions.

Overall, this patch improves the stability and reliability of the ftgmac100 driver by separating the rx page storage from the rxdesc structure. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the use of the return value of seq_printf and replaces it with checking seq_has_overflowed. This is in line with the upcoming change where seq_printf will return void. The changes are consistent across multiple files and functions. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the Bluetooth code where the debug logs were reporting the expected and received key counts incorrectly. The patch corrects the values in the debug logs, ensuring that the correct information is displayed.

The patch is a simple fix that addresses a specific issue without introducing any new functionality or potential regressions. It is a straightforward and safe change that improves the accuracy of the debug logs.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the logic for de-emphasis sampling rate selection in the ASoC tas5086 codec driver. It breaks out of the loop if the rate is matched, which improves the efficiency of the code.

The patch has been reviewed and Acked-by Daniel Mack and Signed-off-by Mark Brown, indicating that it has been reviewed and approved by other developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the configuration option to enable/disable DMA in the addi-data drivers. Instead, DMA will be enabled if it is supported by the driver. This change is necessary to allow the conversion of the addi-data drivers to the comedi auto attach mechanism.

The patch is signed-off by the author and the maintainer, indicating that it has been reviewed and approved by them.

The code changes in the patch are straightforward and do not introduce any new functionality or potential issues. The removal of the configuration option simplifies the code and aligns it with the desired behavior of enabling DMA if supported.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the `comedi_driver_unregister()` function in the staging/comedi/drivers.c file. The change replaces the call to `comedi_dev_from_minor()` with `comedi_dev_get_from_minor()` when finding devices using the driver. This change increments the reference count to prevent the device from being removed while it is being checked to see if it is attached to the driver. After the check is complete, `comedi_dev_put()` is called to decrement the reference count.

The patch appears to address a potential issue where a device could be removed while it is being checked for attachment to the driver. By incrementing the reference count, the patch ensures that the device remains available during the check. Additionally, the patch correctly decrements the reference count after the check is complete.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a generic compatible string for the "hix5hd2" SoC ethernet driver. It updates the compatible property to include the generic strings "hisilicon,hix5hd2-gemac" and "hisilicon,hi3798cv200-gemac", as well as the version strings "hisilicon,hisi-gemac-v1" and "hisilicon,hisi-gemac-v2".

The patch also updates the driver name to "hisi-gemac" and adds the necessary entries to the of_device_id table.

Overall, this patch improves the compatibility and flexibility of the hix5hd2 ethernet driver, making it suitable for more SoCs and versions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds device IDs for a few more Chelsio adapters to the cxgb4 driver in the Linux kernel. These device IDs are used to identify the specific hardware devices supported by the driver.

By adding these device IDs, the cxgb4 driver will be able to correctly recognize and support the additional Chelsio adapters. This will ensure that users with these adapters can use them with the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the onyx and tas codec drivers to use the module_i2c_driver() macro, which makes the code smaller and simpler. The patch removes the unnecessary __init and __exit functions and replaces them with module_init and module_exit macros. This change improves code readability and maintainability.

The patch also uses the module_i2c_driver macro to register and unregister the drivers, which is the recommended approach for module initialization in the Linux kernel.

Overall, this patch improves the code and follows the best practices for module initialization. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch implements the sr-iov mailbox for soc15 asics in the amdgpu driver. It adds new functions to handle mailbox interrupts and initializes them during early and late initialization. It also adds a function to handle mailbox interrupts during software initialization and cleanup. Additionally, it adds a function to handle mailbox interrupts during hardware initialization and cleanup.

The patch has been reviewed by Christian König and signed-off by Monk Liu and Alex Deucher, who are both from AMD.

Based on the provided information, the patch appears to be a valid addition to the amdgpu driver for soc15 asics. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch removes two unused #defines, REGS_PER_LINE and LAST_VOLATILE, from the powerpc/xmon/xmon.c file. These #defines are not used anywhere in the codebase and have never been used in the past. Therefore, removing them will not have any impact on the functionality of the code.

The patch has been signed-off by two developers, Michael Ellerman and Benjamin Herrenschmidt, indicating that it has been reviewed and tested.

Based on this analysis, it is safe to accept the patch in Linux -stable releases.
false || ACK

Reasoning:
This patch reorders the fields in the i915_params structure to avoid creating holes. It also moves the bool fields to the end of the structure to further avoid creating holes. This reordering does not change the functionality of the code, but it can improve memory usage and cache efficiency. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch fixes an error in the mcb_pci_probe() function where it incorrectly returns zero instead of an error code when there is no PCI resource. The patch adds the correct error code (-ENODEV) and ensures that the error path is properly handled.

The patch has been reviewed and signed-off by multiple developers, including Alexey Khoroshilov, Johannes Thumshirn, and Greg Kroah-Hartman. It has also been found by the Linux Driver Verification project, which adds further credibility to its correctness.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the missing OUT register for the SRC_BUSIF_MODE in the ASoC rsnd driver. The IN register was already being set, but the OUT register was missing. Since both registers use default settings and there is no hardware effect, this patch is safe to be accepted in Linux -stable releases.
false || ACK

This patch simplifies the code by replacing the condition `(drm_class == NULL) || (IS_ERR(drm_class))` with `IS_ERR_OR_NULL(drm_class)`. This is a commonly used pattern in the kernel for cleanup paths. The change does not introduce any new functionality or behavior, but it improves code readability and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds reference counting to nfs4_preprocess_confirmed_seqid_op in the nfsd module. It also fixes a bug where the open stateid was not properly put after use. The patch also adds reference counting to the open stateid in nfsd4_open_downgrade and nfsd4_lock functions.

The changes in this patch are necessary steps towards removing the client_mutex. The patch has been reviewed and signed-off by Trond Myklebust and J. Bruce Fields.

Overall, the patch appears to be well-implemented and addresses a bug and necessary improvements. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch makes the symbols `global_dev`, `dcp_dma_unmap`, `dcp_dma_map`, `dcp_done_task`, and `dcp_watchdog` static. These symbols are only referenced within the `dcp.c` file, so making them static improves encapsulation and reduces the risk of symbol conflicts.

The patch also includes the necessary changes to the function signatures and declarations to reflect the change to static symbols.

Overall, this patch improves code organization and reduces the potential for symbol conflicts, making it suitable for inclusion in Linux -stable releases.
false || ACK

Explanation: The patch removes the unused local variable 'status' in the lancer_cmd_get_file_len() function. The variable is assigned a value but not used anywhere in the function. Removing the variable improves code readability and eliminates unnecessary code. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Reasoning:
The patch adds the 'const' qualifier to the 'data' parameter in the 'send_to_group' and 'fsnotify' functions. This indicates that the 'data' parameter is not modified within these functions, which improves code readability and allows for better compiler optimizations.

Additionally, the patch updates the function prototypes in the header file to reflect the change.

Overall, this patch is a simple and straightforward improvement that does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the blackfin clock driver to return 0 upon an error from the clk_round_rate() function, instead of returning a negative error code. This change is necessary because clk_round_rate() is being changed to return an unsigned return type, as some clock sources can generate rates higher than (2^31)-1 Hz.

The patch is simple and straightforward, and it fixes a potential issue with the clock driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes some kerneldoc typos and adjusts the function declaration of drm_gem_handle_create() to be more consistent with other functions in the file. The changes are minor and do not introduce any new functionality or potential issues. The patch has also been reviewed and signed-off by trusted developers. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch improves the code by using the spi_sync_transfer() helper function instead of open-coding it. This makes the code shorter and more readable. The patch also removes the unnecessary initialization of the spi_message structure and the spi_message_add_tail() function calls.

Overall, this patch improves the code and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a typo in the code by changing "mute_led_nid" to "cap_mute_led_nid". The change is a simple correction and does not introduce any new functionality or potential issues. It is a safe and necessary fix for the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the x86/mid/thermal driver to turn off the voltage for thermistors when the ADC conversion is initiated. This change is expected to save power. The patch has been reviewed and signed-off by multiple developers, including Mika Westerberg, Kirill A. Shutemov, Alan Cox, Durgadoss R, and H. Peter Anvin. It has also been acknowledged by Andrew Morton. The patch does not introduce any new issues and the code changes are straightforward. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the iio pressure mpl3115 driver by adding locking and using claim/release helper functions to ensure that the device stays in direct mode during raw reads. This helps to prevent any potential issues that may arise from concurrent access to the device.

The patch also handles error cases properly by breaking out of the switch statement and returning the appropriate error code. This improves the robustness of the driver.

Overall, this patch improves the reliability and stability of the iio pressure mpl3115 driver, and therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a cleanup of error codes in the hv.c file in the Staging directory of the Linux kernel. It replaces the hardcoded error codes with the appropriate error code macros defined in the Linux kernel. This improves code readability and maintainability.

The patch has been reviewed and signed-off by multiple developers, including maintainers from Microsoft and Greg Kroah-Hartman from SUSE. This indicates that the patch has undergone thorough review and testing.

The changes in the patch are straightforward and do not introduce any new functionality or behavior. It only replaces the error codes with the appropriate macros, which is a safe and non-intrusive change.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the issue of characters potentially being dropped at close in the USB sierra driver. It adds the implementation of the chars_in_buffer function, which calculates the number of characters in the output buffer by multiplying the number of outstanding urbs by the maximum transfer size. This ensures that data is not dropped when the device is closed.

The patch also adds the chars_in_buffer function to the sierra_device struct, which is the USB serial driver for sierra devices.

Overall, this patch improves the reliability of the sierra USB driver and should be accepted in Linux -stable releases.
false || ACK

This patch makes the rx51_aux_dev structure static, which improves code encapsulation and reduces the risk of symbol conflicts. It is a safe and necessary change that should be accepted in Linux -stable releases.
false || ACK

This patch improves the efficiency of the cpuidle menu governor by using shifts instead of do_div when calculating averages. The patch introduces a new macro INTERVAL_SHIFT which is used to calculate the value of INTERVALS. The patch also modifies the get_typical_interval function to use shifts instead of do_div when calculating the average and standard deviation.

By using shifts instead of do_div, the patch reduces the number of expensive division operations, which can improve the performance of the cpuidle menu governor.

The patch has been reviewed and signed-off by Mel Gorman and Rafael J. Wysocki, who are both experienced developers in the Linux kernel community.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the arch_uprobe_pre_xol() function in the uprobes/x86 module. Currently, if the ->pre_xol() hook fails, the function still changes the task's state by modifying the regs->ip/flags values. This can lead to incorrect behavior and make restarts impossible.

The patch adds a check for the ->pre_xol() hook and returns the error if it fails, without modifying the task's state. This ensures that the function behaves correctly and allows for restarts when necessary.

The patch has been reviewed by Jim Keniston and the arch/x86/kernel/uprobes.c file, indicating that it has undergone proper review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes the 'ai_continuous' member from the private data structure in the usbduxfast driver in the staging directory. The patch suggests that the 'ai_continuous' member can be determined from the cmd->stop_src member instead. 

The patch also updates the code to use cmd->stop_src to check if the acquisition is continuous or not, and removes the unnecessary assignment of devpriv->ai_continuous.

The patch seems to be a clean and straightforward improvement to the code. It removes redundant code and simplifies the logic by using the existing cmd->stop_src member to determine if the acquisition is continuous or not. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the prototype of the libcfs_ioctl() function in the staging/lustre/include/linux/libcfs/libcfs.h header file. The original prototype did not correctly specify the type of the second argument, which should be a __user pointer. The patch updates the prototype to correctly specify the type as void __user *arg.

The patch has been reviewed and Acked-by James Simmons <jsimmons@infradead.org>, indicating that it has been reviewed and approved by a trusted developer.

Therefore, based on the analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the regulator core code to use a local variable `ops` instead of accessing `rdev->desc->ops` multiple times. This change improves code readability and reduces the number of memory accesses.

The patch also updates the usage of `ops` in the code to use the local variable. This change ensures consistency and improves code maintainability.

Overall, the patch is a clean and straightforward improvement to the code. It does not introduce any new functionality or behavior changes. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch adds support for the "wakeup-source" property in addition to the existing "has-tpo" property in the opal rtc driver. The patch checks if the device has the "wakeup-source" property or the "has-tpo" property (legacy) and sets the device as wakeup capable accordingly.

The patch is a straightforward addition that enables support for the standard "wakeup-source" property, which is a desirable feature. It does not introduce any new functionality or change any existing behavior. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch refines the powergating logic in the ci_dpm_powergate_uvd function in the amdgpu driver. It adds the necessary powergating state changes for the UVD block based on the gate parameter. This ensures that the UVD block is properly stopped or started when powergating is enabled or disabled.

The patch has been reviewed and signed-off by multiple developers from AMD, including Rex Zhu, Tom St Denis, and Alex Deucher. This indicates that the patch has been thoroughly reviewed and tested by the AMD team.

Therefore, based on the provided information, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the function `rtl8192_phyConfigBB` to `_rtl92e_phy_config_bb` in the `r8192E_phy.c` file of the `rtl8192e` driver in the staging directory. The renaming follows the naming schema used in other `rtlwifi` devices.

The patch does not introduce any functional changes, it only improves the code readability and consistency. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch renames the function add_pcie_port() to dra7xx_add_pcie_port() in the PCI driver for the dra7xx platform. The purpose of this change is to avoid collision in the global name space. The patch also updates the function calls to use the new name.

The patch has been reviewed and signed-off by multiple developers, including the original author and maintainers of the PCI driver for the dra7xx platform. The patch is a simple renaming of a function and does not introduce any new functionality or changes to the existing code logic.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the ability to force a performance level for the Cayman GPU in the Radeon DRM driver. It introduces a new function `ni_dpm_force_performance_level` which allows the user to set a forced performance level via sysfs. The function handles different levels such as high, low, and auto, and updates the current power state accordingly.

The patch also adds the `force_performance_level` callback to the Cayman ASIC structure, which allows the function to be called from other parts of the driver.

Overall, this patch provides a useful feature for users to manually control the performance level of the Cayman GPU, and it does not introduce any obvious issues or regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for encoding the `flags` field in the `ceph_osd_op` structure, allowing it to be sent over the wire. The patch modifies the `libceph` library, the `include/linux/ceph/osd_client.h` header file, the `include/linux/ceph/rados.h` header file, and the `net/ceph/osd_client.c` file.

The patch has been reviewed by multiple individuals, including Sage Weil and Alex Elder. It also includes the necessary changes to encode the `flags` field in the `osd_req_encode_op` function.

Overall, this patch appears to be a necessary addition to ensure proper functionality and compatibility in the `libceph` library. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the mxs mmc device on the mach-tx28 platform. It selects the MXS_HAVE_PLATFORM_MXS_MMC option in the Kconfig file and adds the necessary platform data for the mxs_mmc driver in the mach-tx28.c file. The patch also adds the mx28_add_mxs_mmc function call in the tx28_stk5v3_init function to register the mmc device.

Based on the provided information, the patch appears to be correct and necessary for the proper functioning of the mxs mmc device on the mach-tx28 platform. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a section mismatch warning in the MIPS PNX8550 platform. The warning is triggered by the pnx8550-jbs_defconfig and pnx8550-stb810_defconfig configurations. The patch adds the __init annotation to the prom_getcmdline() function, which references the __initdata variable arcs_cmdline. This annotation ensures that the function and variable are placed in the correct sections, resolving the section mismatch warning.

The patch has been signed-off by Ralf Baechle, who is a recognized contributor to the Linux MIPS architecture.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the hv_acpi_init() function in the vmbus driver in the staging directory. The patch properly handles the error by unregistering the ACPI driver if vmbus_bus_init() fails. This ensures that the driver is cleaned up correctly in case of an error.

The patch has been reviewed and signed-off by multiple developers, including maintainers of the staging directory and the vmbus driver. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes smatch warnings in the lm63.c file of the hwmon subsystem. The warnings are related to values that cannot fit into the specified data types. The patch addresses this issue by using DIV_ROUND_CLOSEST and clamp_val functions to convert the values and ensure they fit within the specified range.

Additionally, the patch modifies other macros in the file for consistency and to improve code readability.

Overall, this patch improves the code quality and resolves the smatch warnings. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch replaces the usage of the deprecated function list_tail_entry() with the function list_last_entry(). The new function is already defined in list.h, so it is a more appropriate choice. The patch also removes the definition of list_tail_entry() since it is no longer needed.

The patch has been reviewed and signed-off by multiple developers, including Linus Torvalds. It is a simple and straightforward change that improves the code by using the correct function.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a vifs list to the wl12xx driver in the Linux kernel. The vifs list is used to keep track of all the virtual interfaces associated with the hardware. This list will be later used to iterate through the vifs.

The patch initializes the vifs list in the wl12xx_init_vif_data() function by calling INIT_LIST_HEAD(). It adds the current vif to the vifs list in the wl1271_op_add_interface() function by calling list_add(). It also removes the current vif from the vifs list in the __wl1271_op_remove_interface() function by calling list_del(). Finally, it initializes the vifs list in the wl1271_alloc_hw() function by calling INIT_LIST_HEAD().

The patch also adds the wlvif_list member to the wl1271 structure and the list member to the wl12xx_vif structure. These members are used to link the vifs together in the vifs list.

Overall, this patch adds the necessary functionality to keep track of the vifs associated with the wl12xx hardware and provides the required list operations to add and remove vifs from the list. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the "sddiv" parameter to the USB DPLL in the OMAP4 clock data. The USB DPLL is a J-Type DPLL, and the "sddiv" parameter is necessary for its proper functioning. The patch also includes the necessary masks and limits for the "sddiv" parameter.

The patch has been reviewed and signed-off by Benoit Cousson and Paul Walmsley, who are both recognized contributors in the OMAP4 platform. The patch is a simple addition and does not introduce any new functionality or changes that could potentially cause issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the behavior of the greybus interface by deactivating the interface immediately on enumeration failure. This ensures that the interface is not left in an inconsistent state and prevents potential issues.

The patch also includes error handling code to properly handle the failure cases. It deactivates the interface and adds it to the interface list in case of enumeration or enablement failure.

Overall, this patch improves the stability and reliability of the greybus interface, making it suitable for inclusion in Linux -stable releases.
false || ACK

The patch fixes an inconsistency in the mask defines for the WM8900 codec driver. It removes the bitwise NOT operation for some mask defines and ensures that the defines correspond to the bit defines in the datasheet. This makes the code more consistent and less error-prone. The patch also updates the usage of the mask defines in the code to reflect the changes. Overall, the patch improves the clarity and correctness of the code.
false || ACK

This patch should be accepted in Linux -stable releases. The patch fixes a bug in the ti_abb_init_table function in the ti-abb-regulator.c file. Previously, the function would always return -ENODEV if the num_entries variable was less than 0. However, this patch changes the return value to the actual value of num_entries, which is more accurate and informative.

By propagating the error value returned by the function, developers can better understand the cause of the error and take appropriate actions. This improves the overall reliability and maintainability of the code.

The patch has been reviewed and signed-off by multiple developers, which indicates that it has undergone thorough testing and is considered safe for inclusion in the Linux -stable releases.
false || ACK

Explanation: The patch removes the unnecessary call to snd_dmaengine_pcm_set_data() in the ux500_pcm_open() function. The driver never uses snd_dmaengine_pcm_get_data(), so there is no need to set the data using snd_dmaengine_pcm_set_data(). The patch has been reviewed and Acked-by Ola Lilja, indicating that it has been reviewed and approved by another developer. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch moves the `spin_lock_init()` function call after the error checking for the allocation of `cxt->pstore.buf`. This ensures that the spin lock is only initialized if the allocation is successful, which is the correct behavior.

By moving the `spin_lock_init()` call, the patch improves the code's error handling and prevents unnecessary initialization of the spin lock in case of allocation failure.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the logging functionality in the cpufreq driver for Exynos processors. It replaces the use of pr_err/info functions with dev_err/info functions, which provide more accurate log messages with the device name. The patch also adds a new member "dev" to the exynos_dvfs_info structure, which is used to store a reference to the device associated with the cpufreq driver.

The patch has been reviewed and Acked-by three individuals, including one from Samsung and one from Linaro. The changes in the patch are straightforward and do not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch replaces the usage of clk_get() with devm_clk_get() in the ASoC rcar driver. The devm_clk_get() function is a managed version of clk_get() that automatically handles resource cleanup, making it more robust and less prone to resource leaks. Therefore, this patch improves the code quality and reliability of the driver.
false || ACK

This patch marks the functions `_raid_page_alloc` and `_raid_page_free` as static in the `exofs/ore_raid.c` file. The functions are not used outside this file, so marking them as static improves code readability and reduces namespace pollution.

Additionally, this patch eliminates the warning messages about missing prototypes for the functions `_raid_page_alloc` and `_raid_page_free`.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone proper review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: 

The patch optimizes the ring count validations in the qlcnic driver. It introduces two changes:

1. It checks the interrupt mode at the start of qlcnic_set_channels() and returns an error if the adapter is not in MSI-X mode. This is a valid check as the subsequent ring count validations are only applicable in MSI-X mode.

2. It avoids validating the ring count if they are not going to change. This optimization can save unnecessary validation checks and improve performance.

Overall, the patch improves the efficiency of the ring count validations in the qlcnic driver without introducing any regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch removes unnecessary OOM (Out of Memory) messages in the rtc-nuc900 driver. These messages are redundant as they duplicate the generic OOM message from the MM (Memory Management) subsystem. Removing them will help reduce code duplication and improve code readability.

The patch has been reviewed and signed-off by multiple developers, including Linus Torvalds. It also includes a specific file path, indicating that it targets the rtc-nuc900.c file.

The code changes in the patch are straightforward and do not introduce any new functionality or potential issues. It simply removes the unnecessary OOM message check and associated error logging.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the bcm_sf2 driver where it was using a stale copy of the per-port port_vlan_ctl bitmask value. The patch updates the code to use the correct value maintained by b53_device.

The patch has been tested and reviewed by the maintainers and it is a straightforward fix. It does not introduce any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a memory leak issue in the docg3 driver. In the error path, if the chip_id is not equal to its inverse, the code jumps to the "nomem4" label, where it should free the memory allocated for docg3->bbt. However, the current code mistakenly jumps to the "nomem3" label, skipping the kfree(docg3->bbt) call.

By changing the "goto nomem3" to "goto nomem4", the patch correctly frees the memory allocated for docg3->bbt in the error path. This prevents a memory leak and improves the stability of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds spin_lock protection to the s5p_jpeg_device_run and s5p_jpeg_runtime_resume callbacks in the s5p-jpeg driver. These callbacks modify device registers, so it is important to have spin_lock protection to ensure proper synchronization.

The patch uses spin_lock_irqsave and spin_unlock_irqrestore functions to acquire and release the spin lock. This ensures that interrupts are disabled while the spin lock is held, preventing any potential race conditions.

The patch also includes the necessary Signed-off-by tags from the relevant developers, indicating that they have reviewed and tested the patch.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple code improvement that replaces the comparison "x != NULL" with the more concise "x". The change does not introduce any functional changes and is a recommended coding style improvement. It has been reviewed and signed-off by the relevant developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the issue where module autoloading doesn't work for the ppc4xx_edac platform driver due to missing OF module alias information. The patch adds the MODULE_DEVICE_TABLE macro to create the necessary OF module alias information, allowing module autoloading to work correctly.

The patch has been reviewed by Johannes Thumshirn and has the necessary Signed-off-by tags. It also includes a link to the discussion thread on the Linux kernel mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the initialization of SGL and related PAGE posting for the chute in the be2iscsi driver. It ensures that the SGL initialization and page posting are done based on the configuration value of each chute.

The patch introduces a loop to iterate through the ULPs (Unified Link Protocol) supported by the firmware configuration. It checks if each ULP is supported and breaks the loop when a supported ULP is found. This ensures that the correct ULP is used for SGL initialization and page posting.

Additionally, the patch introduces a variable "ulp_icd_start" to store the value of "phba->fw_config.iscsi_icd_start[ulp_num]". This variable is then used to calculate the sgl_index for each sgl_handle.

Overall, this patch improves the initialization of SGL and page posting in the be2iscsi driver, making it more robust and accurate. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the jack connection decision logic in the nau8825 driver. It adds support for both active low and active high jack insertion logic. The patch introduces a new variable "active_high" to determine the polarity of the jack insertion logic. It then compares this polarity with the actual status of the jack insertion to determine the jack connection status.

This patch is beneficial as it enhances the compatibility of the nau8825 driver with different hardware configurations that may use either active low or active high jack insertion logic. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the mc13892_sw_regulator_ops structure in the mc13892-regulator.c file. It adds the map_voltage field and assigns it the regulator_map_voltage_ascend function. This change allows the mc13892_sw1 and mc13892_sw voltage regulators to use an ascendant voltage list.

The patch has been signed-off by Axel Lin and Mark Brown, indicating that it has been reviewed and approved by them.

Based on the information provided, it appears that this patch is a valid and necessary modification to improve the functionality of the mc13892_sw1 and mc13892_sw voltage regulators. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a flag to indicate whether a device supports runtime PM (Power Management) for the sdhci-pci driver. The flag is added to the struct sdhci_pci_fixes and struct sdhci_pci_chip data structures. The flag is then used to determine whether to allow runtime PM for the device during probe and remove operations.

The addition of this flag allows for more fine-grained control over which devices can support runtime PM. This is important because not all devices may be capable of supporting runtime PM, and enabling it for devices that do not support it can lead to issues.

Overall, this patch improves the sdhci-pci driver by adding support for runtime PM only for devices that specifically indicate that they support it. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for handling the irq interrupt for the second BSD ring in the i915 driver. It has been reviewed and signed-off by the relevant developers. The code changes appear to be correct and necessary for proper handling of the interrupt. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes the issue of using an uninitialized return variable in the request_code_segment() function when the argument boot_case is false. The patch initializes the return variable by assigning the return value of the write_blk_fifo() function to it.

The patch also includes the necessary Signed-off-by tags from the authors.

Based on the provided information, the patch appears to be a valid fix for the uninitialized return variable issue. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the clock IDs in the rockchip clk-rk3288.c file to reference the newly added isp clock-ids in the clock-tree. The patch also adds a new clock ID for "pclk_isp_in" and updates the corresponding clock gate and inverter settings.

The changes in this patch are necessary for proper clock management in the rockchip clk-rk3288.c driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a check for successful allocation before assigning a tag in the blk-mq-sched module. This check ensures that the tag is only assigned if the request allocation was successful. 

The patch also includes a reported-by tag, indicating that the issue was identified by Bart Van Assche. 

Overall, this patch improves the reliability and stability of the blk-mq-sched module by preventing the assignment of tags to requests that were not successfully allocated. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the naming for the "micd-timeout" property in the extcon-arizona driver's device tree bindings to include the units of milliseconds (-ms). It also updates the corresponding code in the driver to read the property with the new name "micd-timeout-ms".

This change improves the clarity and consistency of the property name and its usage. It does not introduce any functional changes or potential regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a delay to the initial jack detect in the ASoC (Audio System on Chip) code. The purpose of this delay is to allow the hardware to initialize and debounce before detecting the jack status.

The patch uses the `schedule_delayed_work` function to schedule the jack detection after a certain debounce time. This ensures that the hardware has enough time to stabilize before the detection is performed.

By adding this delay, it is expected that the jack detection will be more accurate and reliable, as it allows the hardware to settle down before the detection process starts.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes the definition of pgprot_writecombine in the MIPS architecture. Currently, the definition is an inline function, but the generic code tries to provide a default implementation by defining it as pgprot_noncached. However, this default implementation is not used because of the #define in the generic code.

To prevent the generic code from re-defining pgprot_writecombine, this patch adds a #define statement for pgprot_writecombine itself.

The patch has been reviewed and signed-off by Alex Smith and Ralf Baechle, who are both involved in the Linux MIPS community.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch hardcodes the clock event rating for the CMT driver to 125. This ensures that all boards using the CMT driver will have a consistent clock event rating. The patch also simplifies the code by removing the need for a separate clock event rating parameter in the sh_cmt_register function.

By hardcoding the clock event rating to 125, the patch ensures that the CMT driver will be properly registered as a clock event device with a rating of 125. This rating indicates that the CMT driver provides a reliable and accurate clock event source.

Overall, the patch improves the consistency and simplicity of the CMT driver code without introducing any negative side effects. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: This patch modifies the ALSA HDA driver code to drop the explicit memset() call and instead use the __GFP_ZERO flag when reallocating memory with krealloc(). This flag ensures that the newly allocated memory is zeroed out. This change improves code readability and reduces the risk of potential bugs related to manual memory initialization. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch is a fix for the x86 microcode driver for AMD processors. It reads the CPUID(1).EAX leaf at the correct CPU and uses it to search the equivalence table for a matching microcode patch. There is no functionality change introduced by this patch.

The patch has been signed-off by Borislav Petkov and H. Peter Anvin, who are both recognized contributors to the Linux kernel.

The patch modifies the `collect_cpu_info_amd` function to read the CPUID(1).EAX leaf and store the value in the `csig->sig` field of the `struct cpu_signature`. This change ensures that the correct CPU is used for searching the equivalence table.

The `find_equiv_id` function is also modified to take the CPU ID as a parameter and use the `uci->cpu_sig.sig` field to compare with the installed CPU IDs in the equivalence table. This change ensures that the correct CPU ID is used for finding the equivalent CPU ID.

The `get_matching_microcode` function is modified to pass the CPU ID to the `find_equiv_id` function, ensuring that the correct equivalent CPU ID is used for matching microcode.

Overall, this patch improves the accuracy of matching microcode patches to the correct CPU and does not introduce any functionality changes. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug where ieee802154_llsec_parse_key_id() was not called due to a missing return statement. The patch adds a return statement to handle the case where certain attributes are missing, returning -EINVAL. This ensures that the function behaves correctly and avoids potential issues.

The patch also includes the necessary Fixes tag and is signed-off by multiple developers, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the powerpc/fsl_msi driver that miscalculates the MSIR index when multiple ranges are used. The patch correctly sets the index for each range and ensures that the MSI setup is done correctly.

The patch has been reviewed and Acked-by Scott Wood <scottwood@freescale.com>, which indicates that it has been reviewed and approved by a trusted developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch updates the platform_name field in the n810_dai structure to use the same name as the cpu_dai_name field. This change ensures consistency and improves clarity in the code. The patch has been signed-off by the relevant contributors, indicating that it has been reviewed and approved. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds calls to `snd_soc_dapm_sync()` function to ensure that the DAPM (Dynamic Audio Power Management) is synchronized after enabling or disabling the "CLK_SYS" pin. This is necessary to make sure that the changes in the detection mode of the WM8958 codec are properly reflected in the DAPM state.

The patch is relatively small and straightforward, and it addresses a potential issue when the system enables and disables detection at runtime. It does not introduce any new functionality or change the existing behavior in a significant way.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a sparse warning in the cx25821 driver code. The warning is related to an incorrect type in the second argument of a memcpy call. The patch replaces the memcpy call with a copy_from_user call, which is the correct function to use when copying data from user space to kernel space.

The patch has been reviewed and signed-off by Hans Verkuil and Mauro Carvalho Chehab, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the missing i2c_set_clientdata() function call in the mma8450_probe() function. Without this call, calling i2c_get_clientdata() in the mma8450_remove() function would return NULL, which could lead to potential issues.

By adding the i2c_set_clientdata() function call, the patch ensures that the client data is properly set, which is necessary for correct operation of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch changes the return type of the function `ltr501_match_samp_freq` from `unsigned int` to `int`. This is a correct change because the function can return a negative error code. By using a signed return type, it improves the implementation detail and makes the code more accurate.

The patch has been reviewed and Acked-by Peter Meerwald-Stadler, indicating that it has been reviewed and approved by another developer.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch renames the function `rtl8192_process_phyinfo` to `_rtl92e_process_phyinfo` in the `r8192E_dev.c` file of the `rtl8192e` driver in the staging directory. The renaming follows the naming schema used in other `rtlwifi` devices.

The patch does not introduce any functional changes, but it improves code consistency and maintainability. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch correctly renames the lv1 repository routine names "modify_repository_node_value" to "write_repository_node" and "remove_repository_node" to "delete_repository_node". This change improves the clarity and consistency of the code. The patch also includes the necessary changes in the LV1_CALL macros to reflect the renamed routines. Overall, this patch is a straightforward and beneficial change, and it should be accepted in Linux -stable releases.
false || ACK

This patch adds missing calls to ib_umem_release() in the error-handling code of nes_reg_user_mr() function in drivers/infiniband/hw/nes/nes_verbs.c. The ib_umem_release() function is responsible for releasing the user memory region allocated by ib_umem_get().

By adding these calls, the patch ensures that the user memory region is properly released in case of an error during the registration process. This prevents potential memory leaks and improves the overall stability and reliability of the RDMA/nes driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: 

The patch removes the lines that set the current x and y count to 0 in the enable_dma function. This change seems to be intentional as there is no explanation or justification provided in the patch description.

Since the patch only removes code and does not introduce any new functionality or fix any known issues, it is safe to assume that the removal of these lines does not have any negative impact on the functionality of the code.

Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the Broxton SOC in the Intel Trace Hub PCI ID table. It includes the necessary PCI device ID for Broxton and sets the driver data accordingly. This patch is a simple addition to the existing code and does not introduce any new functionality or changes. Therefore, it can be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes an unnecessary check before calling the function "usb_put_dev". The usb_put_dev() function already checks if its argument is NULL and returns immediately, so the additional check is redundant. Removing the unnecessary check simplifies the code and improves readability. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch.pl error by removing the space before the closing parenthesis in the DIGI_REALPORT_GETBUFFERS, DIGI_REALPORT_SENDIMMEDIATE, DIGI_REALPORT_GETCOUNTERS, and DIGI_REALPORT_GETEVENTS macros. The change is a simple formatting fix and does not affect the functionality of the code. Therefore, it can be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes unnecessary calls to usb_get_dev and usb_put_dev in the .probe and .disconnect functions of the usbnet:cdc-phonet driver. The usb_device reference count is already held during these functions, so there is no need to increment and decrement the reference count again. Removing these unnecessary calls improves code readability and reduces the chances of introducing bugs related to reference counting. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Reasoning: The patch removes an unused constant OZ_MAX_TIMER_POOL_SIZE from the ozproto.c file in the staging/ozwpan directory. Since the constant is not used anywhere in the code, removing it will not have any impact on the functionality of the driver. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch updates the author email address in the MODULE_AUTHOR field of the sgtl5000.c file in the ASoC subsystem. The new email address is provided by the author Zeng Zhaoming. This change is a simple administrative update and does not affect the functionality or stability of the code. Therefore, it can be accepted in Linux -stable releases.
false || ACK

The patch fixes a duplicate const warning in the wm8804.c file. The duplicate const is removed from the SOC_ENUM_SINGLE_DECL macro, which already includes a const. The patch has been reviewed and Acked-by Charles Keepax and signed-off by Lars-Peter Clausen and Mark Brown. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Analysis:
The patch fixes an uninitialized variable 'err' in the netpoll_setup() function in the net/core/netpoll.c file. The warning reported by Fengguang Wu indicates that 'err' may be used uninitialized in the function.

The patch initializes 'err' to -EINVAL in the !CONFIG_IPV6 case, which ensures that it is properly initialized before being used. This prevents potential issues caused by using an uninitialized variable.

The patch also includes the necessary Signed-off-by tags from the authors and the relevant Cc to the maintainers.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

This patch streamlines the rx buffer allocation in the ixgbevf driver. It moves the allocation of the local variable "skb" to the section where it is needed and removes an unnecessary if statement. The patch has been tested and signed-off by multiple developers from Intel.

The changes in the patch improve the code readability and remove unnecessary checks. The allocation of "skb" is now done only when it is needed, and the check for "bi->dma" is also removed.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adjusts the contrast value in the wm8505 framebuffer driver. The original commit had a typo, setting the contrast value to 0x80 instead of 0x08. After receiving feedback from an end user, it was determined that a value of 0x10 is more suitable due to the default backlight being less than 100%.

The patch has been reviewed by Jean-Christophe Plagniol-Villard and signed-off by Tony Prisk and Tomi Valkeinen.

The change itself is a simple adjustment of a single value and does not introduce any new functionality or potential issues. Therefore, it can be considered safe and appropriate for inclusion in Linux -stable releases.
false || ACK

This patch adds a check to only disable the 1.2 GHz OPP for the mx6quad variant. This is necessary because only the mx6quad variant can run up to 1.2 GHz. Without this check, a warning is generated on the mx6solo variant. By adding the check, the warning is avoided and the code is more robust.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and verified. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch clears the hidden CPU state at reset time in the KVM x86 code. It sets the vcpu->arch.hflags to 0, which ensures that the hidden CPU state is properly reset during a vCPU reset. This is a necessary step to ensure that the vCPU is in a clean and consistent state after a reset.

The patch also includes a signed-off-by line, indicating that it has been reviewed and approved by Paolo Bonzini from Red Hat.

Overall, this patch is a straightforward and necessary fix, and it should be accepted in Linux -stable releases.
false || ACK

This patch improves the reporting of whether the interrupt was handled in the tda998x_irq_thread function. Instead of always reporting that the interrupt was handled (IRQ_HANDLED), it now reports IRQ_NONE when there is nothing to do. This allows for recovery from stuck-IRQ problems and prevents the kernel from locking up.

The patch also introduces a new variable "handled" to track whether the interrupt was handled or not. This variable is set to true when there is work to be done (e.g., wake_up or schedule_delayed_work is called), and false otherwise.

The return value of the function is modified to return IRQ_RETVAL(handled), which will return IRQ_NONE if handled is false, and IRQ_HANDLED otherwise.

Overall, this patch improves the reliability and stability of the tda998x driver by accurately reporting whether the interrupt was handled or not. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch is a simple conversion to the new interface for the tile hvc driver. It does not introduce any functional changes. The patch has been reviewed and acked by multiple developers, including Thomas Gleixner, Grant Likely, and Chris Metcalf. The patch also includes a link to the discussion thread on the LKML.

The changes in the patch replace the deprecated functions create_irq() and destroy_irq() with the new functions irq_alloc_hwirq() and irq_free_hwirq(). These changes are necessary to ensure compatibility with the latest kernel versions.

Overall, the patch is a straightforward conversion that improves the code by using the new interface. It has been reviewed and acked by relevant developers, and there are no apparent issues or concerns. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the i2c core to use the common attach/detach functions for PM domains. Previously, only the ACPI PM domain was supported, but with this patch, the support is extended to include the generic PM domain as well.

The patch has been reviewed and tested by multiple developers, including Ulf Hansson, Kevin Hilman, Wolfram Sang, and Dmitry Torokhov. It has also been signed-off by Rafael J. Wysocki.

The changes in the patch are straightforward and do not introduce any new functionality or major modifications. The patch simply replaces the existing ACPI-specific functions with the generic PM domain functions.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds a check for the weak symbol vpe_run() before attempting to load and run the VPE. If vpe_run() is not defined (i.e., its value is zero), the patch returns failure early without attempting to load the VPE.

This change improves the efficiency of the code by avoiding unnecessary operations when vpe_run() is not defined. It also provides a clear warning message when the ELF load fails due to the absence of vpe_run().

The patch has been reviewed and signed-off by multiple maintainers and relevant mailing lists. It also has a Patchwork link for further reference.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a function to compare frame indices used for descriptor lists in the USB DWC2 host driver. The function allows for comparing frame indices that have 64 entries.

The patch has been Acked-by John Youn and signed-off by Gregory Herrero and Felipe Balbi.

The added function, dwc2_frame_idx_num_gt, compares two frame indices and returns true if the first index is greater than the second index. The comparison is done modulo FRLISTEN_64_SIZE, which accounts for the rollover of the frame number when the maximum index frame number is reached.

This patch adds a useful function to the USB DWC2 host driver and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning: The patch removes a deprecated and unused video-level DV timings operation. This indicates that the operation is no longer needed and can be safely removed. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a checkpatch error related to code indentation. The patch changes the indentation style from spaces to tabs, which is the preferred style in the Linux kernel. The changes are consistent with the surrounding code and do not introduce any functional changes. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch fixes the issue with the dma-range size when the DT attribute is missing. It sets the size to dev->coherent_dma_mask + 1 instead of dev->coherent_dma_mask. It also adds code to check for invalid values of size configured in DT and logs an error.

The patch has been tested by Suravee Suthikulpanit from AMD and reviewed by Catalin Marinas. It has also been acked by Will Deacon.

The patch is necessary to ensure correct behavior when the dma-range size is not specified in the device tree. It also adds error checking for invalid size values.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for Gemini Lake RAPL, which is similar to Goldmont. It includes the necessary changes to the rapl_defaults_core structure to support Gemini Lake CPUs. The patch has been reviewed and Acked by Intel developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch splits the fpu__cpu_init() function into two parts: fpu__init_system() and fpu__init_cpu(). This separation allows for a clear distinction between the initialization activities that are performed once per system bootup and the activities that are performed when a CPU is brought online.

The patch also calls fpu__init_cpu() from fpu__init_system() to ensure that the FPU is operational for some of the later FPU initialization activities.

The patch has been reviewed by multiple developers and has been signed-off by Ingo Molnar. It does not introduce any changes in initialization behavior beyond duplicate calls to fpu__init_cpu() and xstate_init(), which will be fixed in later patches.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the code in the mrf24j40 driver in the ieee802154 subsystem to use the spi_get_drvdata() and spi_set_drvdata() functions instead of the dev_get_drvdata() and dev_set_drvdata() functions. This change allows for direct access to the struct spi_device, which is a more appropriate way to handle the driver data for SPI devices.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and found to be correct.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch fixes a coding style issue in the Linux kernel code. The original code used the incorrect comparison style for a pointer-to-pointer variable. The patch corrects this by using the proper comparison style "!*rx_p" instead of "*rx_p == NULL". This change improves code readability and follows the recommended coding style for Linux kernel development.

Additionally, the patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || NAK

The patch is removing the MODULE_VERSION macro from the carl9170 driver. While the patch author claims that it is pointless and should be removed completely, it is important to note that MODULE_VERSION is used to track the version of the module and can be useful for debugging and troubleshooting purposes. Removing it may make it harder to identify the version of the module being used.

Additionally, the patch does not provide any justification or explanation for why the MODULE_VERSION macro should be removed. Without a clear reason, it is difficult to determine if the removal is necessary or beneficial.

Therefore, I would not recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a bypass mode for vce3.0 in the amdgpu driver. It introduces a new function `vce_v3_set_bypass_mode` that sets the bypass mode for the specified amdgpu device. The function checks the asic_type and if it is CHIP_POLARIS10, it calls `vce_v3_set_bypass_mode` with the enable parameter. This allows the bypass mode to be set for the specified device.

The patch also adds a call to `vce_v3_set_bypass_mode` in the `vce_v3_0_set_clockgating_state` function, specifically for the CHIP_POLARIS10 asic_type. This ensures that the bypass mode is set when the clockgating state is changed.

Overall, this patch adds a necessary feature to the amdgpu driver and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes an issue in the htb (Hierarchical Token Bucket) scheduler in the Linux kernel. The patch correctly initializes the cl->tokens and cl->ctokens variables by converting the values from ticks to nanoseconds using the PSCHED_TICKS2NS macro.

The patch has been reviewed and Acked-by Eric Dumazet, a well-known Linux kernel developer. It has also been signed-off by Jiri Pirko and David S. Miller.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a compilation warning related to 32-bit compilation in the pm80xx SCSI driver. The warning is caused by a type mismatch between the memvirtaddr field and the %llx format specifier used in the printk statement.

The patch casts the memvirtaddr field to unsigned long before passing it to the printk statement, resolving the compilation warning.

Since this patch fixes a compilation warning without introducing any new issues, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a potential NULL pointer dereference error in the hdmi_probe() function of the exynos_hdmi.c file. The patch adds a NULL check for the 'match' variable before using it, which prevents the potential NULL dereference error.

The patch has been reviewed and signed-off by Sachin Kamat and Inki Dae, who are both recognized contributors to the Linux kernel.

Considering the potential risk of a NULL pointer dereference error and the simplicity of the fix, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch converts the ASoC driver for the wm8940 codec to use table-based control and DAPM initialization. It also updates the codec driver structure to include the new control and DAPM tables.

The patch has been reviewed and Acked-by multiple developers, including Mark Brown, Charles Keepax, and Jonathan Cameron. This indicates that the patch has been reviewed and approved by experts in the field.

The changes in this patch improve the code organization and make it easier to maintain and understand. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch updates the drm/fb-cma-helper module to use const for the drm_framebuffer_funcs argument in two functions: drm_fb_cma_alloc() and drm_fbdev_cma_create_with_funcs(). This change aligns with the usage of const in drm_framebuffer_init().

Using const for the drm_framebuffer_funcs argument ensures that the functions do not modify the passed argument, which improves code clarity and helps prevent accidental modifications. This change does not affect the functionality of the module.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the ability to defer skb freeing in the net_sched module. Currently, when lots of skbs need to be dropped, they are freed under locks, causing TX/RX freezes and latency spikes. This patch introduces rtnl_kfree_skbs() function, which is used to queue skbs for deferred freeing. The actual freeing of skbs happens right after RTNL is released, with appropriate scheduling points.

This patch also updates qdisc_reset_queue() and __qdisc_reset_queue() functions to handle the new behavior. Standard qdiscs like pfifo, pfifo_fast... have their ->reset() method automatically handled.

Overall, this patch improves the performance and latency of the net_sched module by deferring skb freeing. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch addresses an issue in the mv643xx_eth driver where the phydev is not properly started and stopped. The patch adds the necessary calls to phy_start and phy_stop in the port_start and mv643xx_eth_stop functions respectively.

The patch has been reviewed and Acked by Mugunthan V N and Florian Fainelli, indicating that it has been reviewed and approved by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the code in the dummy_hcd.c file in the drivers/usb/gadget/udc directory. It replaces the calculation of the multiplier value from wMaxPacketSize with a new helper function usb_endpoint_maxp_mult(). This change improves the readability and maintainability of the code.

The patch has been reviewed and signed-off by Felipe Balbi <felipe.balbi@linux.intel.com>. It also includes appropriate Cc tags for relevant individuals and mailing lists.

Based on the provided information, it appears that the patch is a valid improvement to the code and does not introduce any potential issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a clean-up patch that addresses coding style issues in the clk-bcm2835.c file. It fixes all the checkpatch complaints and improves the overall code readability and maintainability.

The patch has been signed-off by the original author and another contributor, indicating that it has been reviewed and tested.

The changes in the patch are limited to coding style improvements and do not introduce any functional changes or bug fixes. Therefore, it is safe to include this patch in Linux -stable releases.
false || ACK

This patch fixes a code style warning in the dgnc_driver.c file in the staging directory. The warning is about a line longer than 80 characters. The patch splits the line into multiple lines to comply with the code style guidelines.

Since this patch only addresses a code style issue and does not introduce any functional changes, it can be accepted in Linux -stable releases.
false || ACK

This patch modifies the code in the rxrpc module to use call->peer instead of call->conn->params.peer. The reason for this change is that call->conn may become NULL, so accessing call->conn->params.peer could lead to a null pointer dereference.

The patch makes the necessary changes in three places in the code: rxrpc_extract_ackinfo, rxrpc_process_call, and send_ACK. In all three places, call->peer is used instead of call->conn->params.peer.

By using call->peer directly, the patch ensures that the code is safe from null pointer dereferences and improves the overall stability of the rxrpc module.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch renames the macro `RSND_GEN2_SRU` to `RSND_GEN2_SCU` in the ASoC driver for the Renesas R-Car sound subsystem. The patch also updates the comment to reflect that SRU is for Gen1 and SCU is for Gen2.

The change is a simple renaming of the macro and does not introduce any new functionality or modify existing behavior. It is a straightforward and safe change that improves the clarity and accuracy of the code.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the fs/proc/kcore.c file in the Linux kernel. It replaces the use of strncpy() with strlcpy() to copy the saved_command_line string into the prpsinfo.pr_psargs buffer. 

Using strncpy() can lead to buffer overflows if the source string is longer than the destination buffer. strlcpy() is a safer alternative as it ensures that the destination buffer is always null-terminated and prevents buffer overflows.

Therefore, this patch improves the security and stability of the Linux kernel and should be accepted in Linux -stable releases.
false || ACK

This patch renames the CamelCase struct 'NI_660xRegisterData' to 'ni_660x_register_data' and the associated 'registerData' variable to 'ni_660x_reg_data'. The patch also updates the references to the renamed struct and variable throughout the code.

The renaming improves code readability and follows the Linux kernel coding style, which prefers lowercase with underscores for struct and variable names.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple code improvement in the staging driver for the National Instruments ATMIO16D device. It replaces the direct call to comedi_buf_put() with comedi_buf_write_samples() to add the sample to the async buffer. This change improves the aesthetics of the code.

The patch has been reviewed and signed-off by multiple developers, including H Hartley Sweeten and Greg Kroah-Hartman. It also includes the Reviewed-by tag from Ian Abbott.

Since this patch is a simple code improvement and has been reviewed and signed-off by multiple developers, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the functionality of the staging/rdma/hfi1 driver by selecting only devices with active links. It introduces a new function `usable_device` that checks if a device is available for general use by verifying if its driver link state is active. This function is then used in the `get_user_context` and `find_shared_ctxt` functions to filter out devices that are not currently active.

The patch has been reviewed and signed-off by multiple developers, including Mitko Haralanov, Dean Luick, Jubin John, and Greg Kroah-Hartman. It addresses a specific issue and improves the overall stability and reliability of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds the EXPORT_SYMBOL macro to export the ioremap_nocache function, making it available for use by other modules. This is a useful function for mapping physical addresses to virtual addresses without caching, and exporting it allows other modules to use it as well.

The patch itself is simple and does not introduce any new code or changes to existing code. It only adds the EXPORT_SYMBOL macro to the ioremap_nocache function definition.

Since this patch adds a useful function and does not introduce any potential issues, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch.pl error in the ieee80211_softmac.c file in the staging:rtl8187se directory. The error is related to the placement of an open brace '{' following function declarations. The patch shifts the open brace to the next line, resolving the error.

The patch has been reviewed and signed-off by Himangi Saraogi and Peter P Waskiewicz Jr. It has also been signed-off by Greg Kroah-Hartman, who is a well-known maintainer of the Linux kernel.

Based on the information provided, the patch appears to be a simple and straightforward fix for a coding style issue. It does not introduce any functional changes or potential regressions. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch removes an unnecessary cast on a void pointer in the staging driver rtl8712. The change replaces the cast with a direct assignment, which is more concise and improves code readability.

The patch has been reviewed and signed-off by the author and the maintainer of the driver. It also includes a clear description of the change and the rationale behind it.

Based on the provided information, the patch appears to be a valid improvement to the code and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning: The patch makes the function lp8727_ctrl_switch() inline, which can improve performance by reducing function call overhead. This change does not introduce any new functionality or modify existing behavior, so it is safe to include in Linux -stable releases.
false || ACK

This patch clarifies the variable names in the perf_evlist__strerror_mmap function. It also prepares the patch for further checks related to the number of pages being attempted and the failure of the operation due to the user not having CAP_IPC_LOCK.

The changes in this patch are straightforward and do not introduce any new functionality or potential issues. The variable names are made more descriptive, which improves code readability. The patch also updates the error message to include the number of pages attempted and the maximum number of pages allowed per user.

Overall, this patch improves the clarity and maintainability of the code without introducing any risks. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the enic_change_mtu_work() function in the enic driver. Currently, the function does not release the rtnl_lock on error paths, which can lead to a deadlock situation. The patch adds the missing rtnl_unlock() calls on the error paths, ensuring that the rtnl_lock is always released.

The patch has been reviewed and signed-off by multiple developers, including the driver maintainer and other relevant stakeholders. Therefore, it can be considered a reliable and safe fix.

Based on the analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch ensures that stereo clocking is used even for mono data in I2S mode. It checks the current AIF format and if the number of channels is 1 and the AIF format is set, it forces stereo mode by doubling the bclk_target. This ensures that the correct clocking is used for I2S mode.

The patch is a simple and straightforward fix that addresses a specific issue. It does not introduce any new functionality or potential regressions. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch improves the performance of the Linux kernel by caching the current cdclk frequency in the dev_priv structure. This avoids the need to extract the frequency every time it is needed, resulting in faster access times. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and is ready for inclusion in the Linux -stable releases.
false || ACK

This patch moves the SMFC module enable/disable helpers from the ipu-common.c file to the ipu-smfc.c file. This improves code organization and makes it easier to maintain and understand.

The patch also adds the necessary export symbols for the ipu_smfc_enable and ipu_smfc_disable functions in the ipu-smfc.c file.

Overall, this patch improves code organization and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a necessary power control setting in the ci_dpm_enable function of the radeon driver. It calls the ci_power_control_set_level function and checks for any errors. This patch also removes the unused ci_dpm_power_control_set_level function.

Overall, this patch improves the power control functionality in the radeon driver for the ci GPU series. It is necessary for proper operation and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the detection for some boards in the BCM47XX MIPS architecture. It adds missing entries for certain board types in the `bcm47xx_board_list_hardware_version` array. These missing entries were causing issues when a nvram reset was performed from CFE.

The patch has been reviewed and Acked-by Rafał Miłecki and Signed-off-by Hauke Mehrtens and John Crispin.

The patch also includes a Patchwork link for further reference.

Overall, the patch seems to be a valid fix for the issue and should be accepted in Linux -stable releases.
false || ACK

This patch adds the MODULE_DEVICE_TABLE macro to the lirc_zilog.c driver in the media staging area. This macro is used to export the I2C device table information, which is necessary for udev to auto load the correct module when the device is added.

By adding this macro, the driver will provide the necessary information to udev, ensuring that the correct module is loaded when the device is connected. This improves the overall functionality and usability of the driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch makes the function "register_disk" static, which means it can only be accessed within the same source file. This is a good practice for encapsulation and reducing namespace pollution. Since the change does not affect the functionality of the code and improves code organization, it can be accepted in Linux -stable releases.
false || ACK

The patch suggests making the function `digital_tg_send_sensf_res()` static. This change fixes a sparse warning that the symbol was not declared. Since the function is not used outside of the file, it can be made static to improve code organization and avoid potential conflicts with other symbols in the future.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a debug entry to the amdgpu driver in the Linux kernel. The debug entry allows reading GCA configuration data. The patch has been reviewed and signed-off by the relevant developers. The code changes in the patch are straightforward and do not introduce any new issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the em28xx-v4l extension where the v4l2_ctrl_handler and v4l2_device were not being freed and unregistered properly. Currently, these functions are only called when the last user closes the device and the device is already disconnected, which is incorrect. The patch moves the calls to v4l2_ctrl_handler_free() and v4l2_device_unregister() to the em28xx_v4l2_fini() function, which is called whenever the em28xx-v4l extension is closed. This ensures that these functions are called even if the device is still opened by some users.

The patch also removes the calls to v4l2_ctrl_handler_free() and v4l2_device_unregister() from the em28xx_v4l2_close() function, as they are now handled in the em28xx_v4l2_fini() function.

Overall, this patch fixes a bug and improves the cleanup process in the em28xx-v4l extension. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for fast-xmit in the ath9k driver. Fast-xmit is a feature that allows for faster transmission of packets by bypassing some of the normal network stack processing. This can improve performance in certain scenarios, such as high-throughput applications.

The patch is signed-off by two developers, Felix Fietkau and Kalle Valo, indicating that it has been reviewed and tested. Additionally, the change is relatively small and isolated to the ath9k driver.

Based on these factors, it is recommended to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes the declaration of the non-existent function "release_uids" from sched.h. Since there is no such function, it is unnecessary and can be safely removed. The patch has been Acked-by Serge Hallyn, indicating that it has been reviewed and approved by another expert. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

Reasoning:
The patch removes an unused argument "pUserVoid" from the function clear_shadow_scan(). Since the argument is not used in the function, removing it does not affect the functionality of the code. The patch also removes the argument in the function call clear_shadow_scan(priv). This change is safe and improves code readability by removing unnecessary code. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

Based on the provided patch, it appears to fix a transfer failure issue in the spi core. The patch sets the return value to 0 when the master->transfer_one function returns a positive value. This is done to prevent the "spi_master spi0: failed to transfer one message from queue" error when the transfer_one callback returns 1.

The patch seems to address a specific issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch allows auxtrace data to be a multiple of something other than the page size. This is necessary for BTS (Branch Trace Store) where the buffer contains 24-byte records. The patch modifies the __auxtrace_mmap__read function in the auxtrace.c file to handle the alignment of the data. It checks if the alignment value is set and adjusts the length and size accordingly. This ensures that the data is properly aligned and avoids any unwanted bytes.

The patch also adds an "alignment" field to the auxtrace_record structure in the auxtrace.h file. This allows the alignment value to be set for each auxtrace record.

Overall, this patch improves the handling of auxtrace data alignment and should be accepted in Linux -stable releases.
false || ACK

This patch correctly adds tracing for blocks punched out in the ext4_ext_map_blocks() function when called by punch_hole. The patch adds a trace_ext4_ext_map_blocks_exit() call with the correct parameters to trace the blocks punched out. This will provide useful information for debugging and performance analysis.

The patch also removes a trace_ext4_ext_map_blocks_exit() call that was previously present but was not passing the correct result value. This ensures that the correct result value is traced.

Overall, this patch improves the tracing functionality in the ext4 file system and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the new system calls sched_setattr and sched_getattr in the microblaze architecture. These system calls are necessary for certain functionality related to scheduling attributes and getting scheduling attributes of a process. Since this patch adds necessary functionality to the microblaze architecture, it should be accepted in Linux -stable releases.
false || ACK

The patch removes the use of the deprecated IRQF_DISABLED flag from the drivers/hsi/clients/nokia-modem.c file. The comment in the patch states that the flag has been a NOOP since 2.6.35 and will be removed soon. The patch has been signed-off by multiple developers, including Michael Opdenacker, Pavel Machek, and Sebastian Reichel.

Based on this information, it is safe to accept the patch in Linux -stable releases. The removal of the deprecated flag will ensure that the code remains up-to-date and avoids any potential issues caused by using a flag that has no effect.
false || ACK

This patch fixes a warning in the dgnc_cls.c file related to a quoted string split across lines. The patch correctly modifies the code to have the quoted string on a single line, resolving the warning.

The patch also includes the necessary Signed-off-by tags from the authors.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch suggests using the -f option to override the ownership check for the perf.data file in the perf tools. Previously, when running the "perf report" command, an error message was displayed if the file was not owned by the current user or root. With this patch, the error message is updated to include the suggestion to use -f to override the ownership check.

The patch has been suggested by Ingo Molnar and has been reviewed by several other individuals. It also includes a link to the discussion thread on the LKML.

This patch improves the user experience by providing a clear suggestion on how to handle the ownership check error. It does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple cleanup patch that renames the `host1x_to_drm_bo()` macro to `host1x_to_tegra_bo()` for consistency and fixes various stylistic issues. The changes are straightforward and do not introduce any functional changes. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch changes the type of the variable "max_buffer_heads" from int to unsigned long. The variable is calculated from the function nr_free_buffer_pages(), so changing its type to unsigned long is necessary in case of overflow.

The patch also changes the type of the variable "nrpages" in the function buffer_init() from int to unsigned long.

Overall, these changes ensure that the variables can handle larger values and prevent potential overflow issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes the .owner field for the artpec6-pinctrl driver. The .owner field is set automatically by certain calls, so it is not necessary to explicitly set it in this case. Removing the .owner field simplifies the code and reduces redundancy. The patch has been generated by the Coccinelle script "platform_no_drv_owner.cocci" and has been signed-off by the authors. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch allows X.509 certificates to be blacklisted based on their TBSCertificate hash. This is useful for checking the signature on an X.509 certificate and is also used by UEFI in its blacklist. The patch adds a "blacklisted" flag to the x509_certificate structure and checks if a certificate is blacklisted during the signature verification process. If a certificate is blacklisted, an error message is printed and the "blacklisted" flag is set to true.

This patch provides a convenient way to blacklist X.509 certificates and can help prevent the use of compromised or untrusted certificates. It does not introduce any new vulnerabilities or issues. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue with the mac80211 deauth sequence changes. The patch ensures that the AP station is not deleted directly when mac80211 asks for deletion. Instead, it marks the station as unused and relies on the unassociated RXON to drop it from the station database in the device.

The patch also includes a new function "iwl_deactivate_station" that deactivates the station by marking it as unused and clearing the relevant data structures. This function is called when the station is being removed and the interface type is NL80211_IFTYPE_STATION.

Overall, this patch addresses a specific issue and provides a more reliable and consistent behavior for removing stations in the iwlwifi driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds accessor functions for the GCR_L2_CONFIG register in the MIPS CM code. It also defines the bits included in the register. The patch is signed-off by multiple developers and has been submitted to the Linux-mips mailing list for review.

The patch itself adds the necessary code to access the GCR_L2_CONFIG register and defines the various fields and masks for the register. This will allow other parts of the code to read and modify the register as needed.

Overall, this patch seems to be a straightforward addition that enhances the functionality of the MIPS CM code. Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
false || ACK

This patch is a simple change that marks the function dwc_dump_chan_regs as inline. The function is currently defined as static, which means it can only be used within the same translation unit. By marking it as inline, the function can be used in other translation units as well, which can improve code optimization and reduce code duplication.

The patch has been reviewed and Acked-by Viresh Kumar, indicating that it has been reviewed and approved by another developer. This adds credibility to the patch.

Therefore, based on the simplicity of the change and the positive review, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. 

The patch fixes an issue in the qla2xxx SCSI driver where the fcport FC-4 type is not assigned correctly in the GA_NXT response. The patch adds the assignment of the fcport FC-4 type based on the value of the third element in the fc4_types array in the GA_NXT response. If the third element has its first bit set, the fcport FC-4 type is set to FC4_TYPE_FCP_SCSI, otherwise it is set to FC4_TYPE_OTHER.

This fix ensures that the fcport FC-4 type is assigned correctly, which is important for proper functioning of the qla2xxx SCSI driver. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch replaces the use of the BUG() macro with the BUG_ON() macro in the ip6_fragment() function in the net/ipv6/ip6_output.c file. The change is a simple transformation that improves code readability and maintainability.

The patch has been reviewed and Acked-by Julia Lawall, an experienced Linux kernel developer. This indicates that the patch has been reviewed and deemed acceptable by a trusted source.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

Explanation: The patch removes an unnecessary check before calling the function "dvb_unregister_device". The function itself already checks if the argument is NULL and returns immediately if it is. Therefore, the check before the function call is redundant and can be safely removed. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch is a clean-up patch that moves some release handles into fail labels. It does not introduce any new functionality or fix any bugs. The patch has been reviewed by multiple developers and has their Reviewed-by tags. The changes in the patch are straightforward and do not introduce any potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the irq_wake infrastructure to the TWL6030 devices. This allows TWL6030 client drivers to make use of irq_wake() if wakeup is desirable on their irq events. The patch also sets the irq_set_wake function for the TWL6030 irq chip, which enables the wake-up functionality for the TWL6030 interrupts.

Overall, this patch adds important functionality to the TWL6030 devices and improves the power management capabilities of the Linux kernel. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch reverts the check for PERF_EVENT_STATE_EXIT on the read syscall path in the perf_read_hw function. The check was causing issues with reading counters in the standard way, which is to open the counter, wait for the monitored process to die, and then read the counter.

The patch has been reported by Stephane Eranian and signed-off by Jiri Olsa. It has also been acked by Stephane Eranian and Peter Zijlstra. It has been reviewed by several other individuals as well.

Based on the information provided, it seems that the patch addresses a specific issue and has received positive feedback from multiple individuals. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || NAK

Explanation: The patch removes the hfi1_query_qp function from the staging/rdma/hfi1/qp.c file. This function is responsible for querying the attributes of a queue pair (QP). However, the patch does not provide any justification for removing this function or any alternative implementation. Without this function, the ability to query the attributes of a QP will be lost, which can impact the functionality of the driver. Therefore, it is not recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the bfin-uart driver where the tty circular buffer is accessed in the TX DMA interrupt after it is reset. This can happen during a kernel reboot. The patch ensures that the buffer tail is only updated if the buffer is not empty, preventing any potential issues.

The patch has been reviewed and signed-off by Sonic Zhang and Greg Kroah-Hartman, indicating that it has been tested and approved by the relevant parties.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds support for the Enhanced Periodic Interrupt Timer (EPIT) to the clock subsystem in the ARM i.MX5x platform. It introduces new clock gates for EPIT1 and EPIT2, and registers them with the clock device framework.

The patch appears to be well-written and follows the standard Linux kernel patch format. It has been signed-off by two developers, indicating that it has been reviewed and tested.

The changes introduced by this patch are necessary for proper support of the EPIT feature in the i.MX5x platform. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the Bluetooth code where the wrong variables were being updated. The patch correctly updates the scan_rsp_data_len and scan_rsp_data variables instead of the adv_data_len and adv_data variables. The patch also includes the necessary changes to the memcpy and memcmp functions to use the correct variables.

The patch has been reviewed and signed-off by Johan Hedberg and Marcel Holtmann, who are recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch converts the use of pr_warn() to netdev_warn() in the bonding_debugfs.c file. The netdev_warn() function is a wrapper around pr_warn() that includes the network device name in the log message. This change improves the clarity of the log messages by including the name of the network device that is experiencing the warning.

The patch also removes one occurrence of pr_warn() that is unrelated to the network device, which is left intact.

Overall, this patch improves the consistency and clarity of the log messages in the bonding_debugfs.c file. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch declares the exynos_drm_crtc_ops structure as const, which is appropriate since it is only passed as an argument to the function exynos_drm_crtc_create. The argument is of type const struct exynos_drm_crtc_ops *, so declaring the structure as const is consistent with the usage. Additionally, the patch provides the before and after file sizes, showing that the change does not introduce any significant increase in size. Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

The patch fixes a bug in the code where the "+" operator has higher precedence than the "?:" operator, causing the original statement to be equivalent to "entry->mask_pos = PCI_MSI_MASK_64" regardless of the value of "control & PCI_MSI_FLAGS_64BIT". The patch corrects this by using proper parentheses to ensure the correct evaluation order.

The patch has been reviewed and signed-off by Dan Carpenter and Bjorn Helgaas, indicating that it has been tested and approved by experts in the field.

Therefore, the patch should be accepted in Linux -stable releases.
false || ACK

This patch updates the version number of the tg3 driver to 3.121. It also updates the release date to November 2, 2011. These changes indicate that there have been updates or bug fixes made to the driver since the previous version.

Since this patch updates the version number and release date, it is likely that it includes important bug fixes or improvements. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch suggests using the `builtin_platform_driver()` helper function to simplify the code in the `pinctrl-mt6397.c` file. The patch has been reviewed and Acked-by Hongzhou Yang from MediaTek. Additionally, it has been signed-off by Geliang Tang and Linus Walleij.

Using the `builtin_platform_driver()` helper function is a recommended practice to simplify the code and improve maintainability. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch updates the code in the drm/msm driver to use the drm_atomic_set_fence_for_plane() function to set the fence for the plane. This function is smart and will not overwrite the plane_state->fence if the user has already set an explicit fence there.

The patch has been reviewed and tested by multiple developers, including Rob Clark and Daniel Vetter, who have both provided their Acked-by tags.

The patch also includes a link to the patch discussion on the patchwork website.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch converts the usage of the `should_stop` variable into the `kthread_should_stop()` API, which is the recommended way to check if a kernel thread should stop. By using this API, the patch ensures that the thread will exit gracefully when it is supposed to stop.

The patch also removes the usage of the `should_stop` variable, which is no longer needed. This simplifies the code and makes it easier to understand.

Overall, this patch improves the code by using the correct API and removing unnecessary code. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the OMAP2+ architecture by creating clock aliases purely from DT data. It avoids the need to add clock aliases under specific files, reducing code duplication and improving maintainability.

The patch first checks if the clock is already registered using clk_get_sys(). If the clock is not found and the DT data is populated, it retrieves the clock using of_clk_get_from_provider(). Then, it registers the clock alias using clk_register_clkdev(). If the clock is already registered or the DT data is not populated, it falls back to the existing clk_add_alias() method.

Overall, this patch improves the clock handling in OMAP2+ and reduces code duplication. Therefore, it should be accepted in Linux -stable releases.
false || ACK

The patch fixes a sign issue in the efivarfs_file_write() function. Currently, the function is returning a size_t value as a ssize_t value, which can introduce sign issues. The patch corrects this by changing the return type of the function to ssize_t and updating the return statement accordingly.

The patch also includes proper error handling by setting the "bytes" variable to the appropriate error code instead of modifying the "count" variable directly. This ensures consistent error reporting throughout the function.

Overall, the patch addresses a potential sign issue and improves error handling in the efivarfs_file_write() function. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes issues related to newer versions of gcc when dealing with variable size arrays in structs in the drm/radeon/sumo_dpm.c file. The patch replaces array indexing with pointer arithmetic to avoid potential issues. The patch also includes references to relevant bug reports.

Based on the provided information, it seems reasonable to accept this patch for inclusion in Linux -stable releases. It addresses a known issue and provides a solution that should improve compatibility with newer versions of gcc.
false || ACK

This patch moves the "estab_plinks" debug information outside of the mesh_stats debug group in the mac80211 module. Since "estab_plinks" is not a statistics member, it should not be shown along with other mesh stat members. This change improves the organization and clarity of the debug information.

The patch also adds the "estab_plinks" debugfs file with the appropriate permissions in the add_mesh_files function. This ensures that the debug information for "estab_plinks" can be accessed through the debugfs interface.

Overall, this patch improves the code organization and ensures that the debug information is presented in a more logical manner. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. It declares the function ieee80211_TURBO_Info as static to fix a sparse "symbol was not declared" warning. The change is simple and does not introduce any new functionality or potential issues.
false || ACK

This patch adds locking for the vbuf pool in the virtio-gpu driver. It introduces a new spinlock, `free_vbufs_lock`, which is used to protect the access to the `free_vbufs` list. The patch initializes the spinlock in `virtio_gpu_alloc_vbufs()` and uses it to protect the access to the `free_vbufs` list in `virtio_gpu_free_vbufs()`, `virtio_gpu_get_vbuf()`, and `free_vbuf()` functions.

The addition of locking is necessary to ensure thread-safety when accessing the `free_vbufs` list. Without locking, concurrent access to the list could lead to race conditions and undefined behavior.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes memory leaks in the __il4965_up() function of the iwl4965 driver. In some non-success return paths, the memory allocated by iwl4965_sta_alloc_lq() in iwl4965_alloc_bcast_station() is not freed. This can lead to memory leaks and potential issues with memory allocation.

The patch addresses this issue by adding calls to il_dealloc_bcast_stations() in the error paths where the card is not ready or is hardware-rfkilled. This ensures that the memory allocated by iwl4965_sta_alloc_lq() is properly freed.

The patch has been suggested by Jia-Ju Bai and signed-off by Julian Calaby. It has also been acked by Stanislaw Gruszka.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases to fix the memory leaks in the iwl4965 driver.
false || ACK

This patch eliminates the send buffers in the GSI receive QP, which is no longer needed now that the transmission of GSI MADs is done with special transmission QPs. The patch sets the max_send_wr, max_send_sge, and max_inline_data attributes to 0 when num_qps is non-zero, indicating that no send buffers are required for the GSI receive QP.

The patch has been reviewed and signed-off by multiple developers, including Leon Romanovsky and Haggai Eran from Mellanox, and Doug Ledford from Red Hat. This indicates that the patch has undergone thorough review and testing.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch converts the xenfs filesystem to use kuid and kgid instead of directly setting the i_uid and i_gid fields of the inode structure. This is a good practice as it ensures that the correct user and group IDs are used consistently across the system. The patch also adds the necessary include files and updates the Kconfig file to enable the UIDGID_CONVERTED option for xenfs. The patch has been reviewed and Acked-by Serge Hallyn, which indicates that it has been reviewed and approved by a trusted developer. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the media device driver related to the graph walk object. The patch ensures that the graph walk object is always large enough to accommodate all entities in the graph. It also fixes a documentation bug.

The patch adds a check to see if the current graph walk object is large enough. If it is not, a new graph walk object is created and initialized before cleaning up the old one. The new graph walk object is then assigned to the media device.

The patch also adds a cleanup function for the graph walk object in the media_device_cleanup() function.

Overall, the patch improves the stability and reliability of the media device driver by ensuring that the graph walk object is always large enough. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch removes a useless conditional branch in the napi_get_frags() function in the net/core/dev.c file. The condition checks if the skb pointer is not NULL before assigning it to napi->skb. However, since napi->skb is already NULL at this point, there is no need for the conditional check. Therefore, removing the conditional branch improves the code's readability and efficiency.

The patch has been reviewed and signed-off by Eric Dumazet and David S. Miller, indicating that it has undergone proper review and testing. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a wait for BO idle after the move in ttm_bo_swapout function in the drm/ttm module. The patch has been reviewed and signed-off by Alex Deucher and Christian König, who are both experts in the field. The patch itself adds a necessary step to ensure that the BO is idle before continuing with the swapout process. This will help prevent any potential issues that may arise from accessing the BO while it is still in use. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes redundant declarations of the functions intel_pmu_enable_bts() and intel_pmu_disable_bts() in the perf/x86/intel/bts driver. These functions are already declared in the perf_event.h header file, so there is no need to have them declared again in the driver.

The patch also includes the necessary Signed-off-by tags and Cc tags for the relevant individuals.

Overall, the patch is a simple cleanup that removes redundant code and improves code maintainability. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the AR9580 chipset in the ath9k driver. It has been tested in both STA and AP modes by Florian Fainelli. The patch also includes the necessary changes to the PCI device table.

Given that the patch has been tested and the changes are specific to the AR9580 chipset, it is reasonable to accept this patch in Linux -stable releases.
false || ACK

This patch removes the 'i8254_osc_base' field from the boardinfo structure in the staging/comedi/drivers/pcl816.c file. The 'i8254_osc_base' field is the same for all board types, so it is unnecessary to have it in the boardinfo structure.

The removal of this field does not affect the functionality of the code, as the value of 'i8254_osc_base' is hardcoded to I8254_OSC_BASE_10MHZ in the pcl816_ai_cmdtest() and pcl816_ai_cmd() functions.

Therefore, this patch is safe to be accepted in Linux -stable releases.
false || ACK

This patch adds a call to intel_wait_for_vblank() before stopping CRCs for a specific pipe in the i915 driver. This change is aimed at avoiding a spurious interrupt warning.

The patch has been reviewed by Damien Lespiau and signed-off by Daniel Vetter, both of whom are recognized contributors to the Linux kernel.

Based on the information provided, the patch appears to be a valid fix for the reported issue and has undergone proper review. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a new member variable "resource" to the "struct drbd_device" in the drbd kernel module. This variable is then assigned the value of "connection->resource" in the "drbd_create_minor" function. The "resource" variable is later used in the "drbd_adm_prepare" function to check if the minor belongs to the same resource.

The patch appears to be a valid addition to the codebase as it introduces a new member variable and assigns it a value that is later used for validation. It does not introduce any new functionality or modify existing behavior, but rather improves the code's clarity and maintainability.

Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a locking issue in the svcrpc module. The patch introduces two new functions, `svc_close_list` and `svc_clear_list`, which are called by the `svc_close_net` function. These new functions acquire and release a spin lock (`serv->sv_lock`) to ensure proper synchronization when traversing and modifying the `xprt_list` linked lists.

The patch also adds a new parameter `struct svc_serv *serv` to the `svc_close_list` and `svc_clear_list` functions, which allows them to access the `sv_lock` spin lock.

Overall, this patch improves the locking mechanism in the svcrpc module and ensures proper synchronization when manipulating the `xprt_list` linked lists. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch factors out the function sdhci_set_default_irqs() from the sdhci_init() function, making the code more modular and easier to understand. The patch also adds a call to sdhci_set_default_irqs() in sdhci_init(), ensuring that the default IRQs are set correctly during initialization. The patch has been tested and signed-off by multiple developers, indicating that it has been thoroughly reviewed and verified.
false || ACK

This patch fixes a bug where the flags field in the led_info structure is not properly initialized, causing it to contain random stack data. By pre-initializing the led structure completely, this issue is resolved. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone proper testing and review. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a helper function `dwc3_core_fifo_space` to the dwc3 core driver. This helper function is used to dump the space of different queues and fifos in dwc3 to debugfs. It will also be used to issue remote wakeup when starting a transfer and there's something in a TX FIFO.

The patch also adds the necessary definitions for the Global Debug Queue/FIFO Space Available Register and the different queue types.

Overall, this patch adds useful functionality to the dwc3 core driver and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch reintroduces a check to disallow world-writable files in sysfs. The check was previously removed when the check was unified into VERIFY_OCTAL_PERMISSIONS(). However, now that all the users are fixed, it is necessary to reintroduce the check.

The patch adds a BUILD_BUG_ON_ZERO() macro to check if the permissions include the "other writable" flag. This is generally considered a bad idea, as allowing world-writable files can lead to security vulnerabilities.

Therefore, accepting this patch in Linux -stable releases would help ensure the security and integrity of the sysfs filesystem.
false || ACK

This patch fixes a warning of "Space before semicolon" in the xgifb driver. The issue is resolved by removing the space before the semicolon in the function declaration of XGISetModeNew. The patch also includes the necessary Signed-off-by tags.

Based on the provided information, the patch appears to be a valid fix for the warning and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes the clock limits for sdvo and lvds in the gma500 driver. The values of n, m1, and m2 were incorrect and needed to be subtracted by 2 before writing them to the FP register. The patch updates the values of n, m1, and m2 to the correct values.

The new values for n are between 1 and 6, and the new values for m1 are between 8 and 18. The new values for m2 are between 3 and 7. These values are within the acceptable range for the respective variables.

The patch also includes the necessary Signed-off-by lines from the authors.

Based on this analysis, the patch should be accepted in Linux -stable releases.
false || ACK

This patch changes the return type of the function `drm_pci_agp_init` from `int` to `void`. The reason for this change is that the function does not have any failure conditions and always returns 0. By changing the return type to `void`, the code becomes simpler and easier to understand.

The patch has been reviewed by David Herrmann and signed-off by Daniel Vetter and Dave Airlie, indicating that it has been reviewed and tested by other developers.

The patch also updates the usage of `drm_pci_agp_init` in `drm_dev_register` to reflect the change in return type.

Overall, this patch improves the code by removing unnecessary complexity and is supported by other developers. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch modifies the netfilter bridge code to free the nf_bridge information after POST_ROUTING. The nf_bridge information is only needed for -m physdev, so it can be safely freed after POST_ROUTING. This change has the advantage that allocation and free will typically happen on the same CPU.

The patch also adds a new function nf_bridge_info_free() to free the nf_bridge information. This function is called in two places: br_nf_push_frag_xmit() and br_nf_dev_queue_xmit(). In both cases, the nf_bridge information is freed before calling br_dev_queue_push_xmit().

Overall, this patch improves the efficiency of the netfilter bridge code by freeing the nf_bridge information when it is no longer needed. It is a safe and beneficial change, so it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a code indentation issue in the `interval_erase_color` function in the `interval_tree.c` file of the Lustre staging driver. The patch correctly indents the conditional statements that were flagged by `checkpatch.pl` as having suspect code indentation.

The patch has been reviewed by Peter P Waskiewicz Jr and signed-off by Rashika Kheria and Greg Kroah-Hartman. The reviewers and sign-off indicate that the patch has been reviewed and tested, and is considered to be correct and suitable for inclusion in the Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes warnings that occur when compiling a 64-bit kernel in the spi/pxa2xx driver. The warnings are related to pointer-to-integer and integer-to-pointer casts of different sizes. The patch replaces the IS_DMA_ALIGNED macro with the IS_ALIGNED macro, which correctly aligns the DMA buffer.

The patch also updates the initialization of the null_dma_buf field in the driver_data structure to use the PTR_ALIGN macro, ensuring proper alignment.

Overall, this patch addresses the warnings and improves the code quality of the spi/pxa2xx driver. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch improves the code by using the IOMMU bit specified in the platform data instead of hardcoding it to the bit used by current Tegra GPUs. This makes the code more flexible and adaptable to different platforms.

The changes made in the patch are correct and do not introduce any new issues. The patch updates the code to use the new IOMMU bit for mapping and unmapping pages in the GPU address space.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch replaces the usage of module_init and module_exit calls with module_i2c_driver, which simplifies the code. The patch also removes the unnecessary functions max98088_init and max98088_exit. Overall, this patch improves the code structure and makes it cleaner. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Reasoning: The patch removes an unused callback function, ppgtt->enable(). Since this function is not assigned or used anywhere in the code, removing it will not have any impact on the functionality of the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch addresses a memory leak issue in the NVMe driver. Currently, if the adapter fails initialization, the memory allocated for the admin queue is not freed. This patch introduces a new function, `nvme_free_queue_mem()`, which is called in the case of initialization failure to free the allocated memory. 

The patch also modifies the `nvme_free_queue()` function to call `nvme_free_queue_mem()` instead of directly freeing the memory. This ensures that the memory is freed consistently in both cases.

Additionally, the patch adds error handling in the `nvme_configure_admin_queue()` function. If the device is not ready or if a fatal signal is pending, the function returns an error code instead of continuing with the initialization. In case of an error, the `nvme_free_queue_mem()` function is called to free the allocated memory before returning the error code.

Overall, this patch improves the memory management in the NVMe driver and addresses the memory leak issue. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch.pl warning regarding void function return statements in the file rtw_pwrctrl.c. The patch removes the unnecessary return statement in the void function rtw_ps_processor23a(). Since the return statement is not needed and does not affect the functionality of the code, it is safe to accept this patch in Linux -stable releases.
false || ACK

Explanation: The patch marks the function blkdev_mmap() as static since it is not used outside of fs/block_dev.c. This improves code readability and reduces the risk of accidental usage of the function in other parts of the codebase. The patch also includes the Reported-by and Signed-off-by tags, indicating that the issue was reported by Fengguang Wu and the patch was reviewed and signed off by Jens Axboe. Overall, the patch is a simple and straightforward improvement to the code and should be accepted in Linux -stable releases.
false || ACK

This patch allows vendor commands that require the WIPHY_VENDOR_CMD_NEED_RUNNING flag to be sent to the NAN (Neighbor Awareness Networking) interface. It checks if the wireless device is running and if the NAN interface is started before allowing the vendor command to be sent.

The patch has been signed-off by multiple developers from Intel, indicating that it has been reviewed and tested by them.

Based on the provided information, the patch appears to be a valid and necessary addition to the cfg80211 module. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the bos descriptor test scenario for USB 3.0 in the usbtest module. It checks if the USB device supports USB 3.0 by checking the bcdUSB field in the device descriptor. If the device supports USB 3.0, it retrieves the bos descriptor using usb_get_descriptor().

The patch is signed-off by Huang Rui and Acked-by Alan Stern, indicating that it has been reviewed and tested by them. It is also signed-off by Greg Kroah-Hartman, who is a maintainer of the Linux kernel.

The patch does not introduce any new functionality or change existing behavior. It only adds support for USB 3.0 bos descriptor test scenario, which is a valid and useful addition to the usbtest module.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a dentry leak issue in the greybus driver's es2.c file. The debugfs file is not properly removed, leading to a resource leak. The patch adds the necessary debugfs_remove() function call to properly remove the debugfs file, preventing the leak.

The patch has been reviewed and signed-off by Johan Hovold and Greg Kroah-Hartman, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds stub functions for v_sys, refclk, and unipro resource management in the greybus driver. These stub functions are placeholders that need to be implemented in the future. Since they are not yet implemented, they do not introduce any new functionality or changes to the existing codebase. Therefore, it is safe to include this patch in the Linux -stable releases.
false || ACK

This patch addresses an issue in the edma driver where tasklets are not being killed upon driver removal. The patch adds a new function `edma_cleanupp_vchan` which iterates over the list of channels and deletes the device node and kills the tasklet for each channel. This ensures that the tasklets cannot be executed after the driver is removed.

The patch also calls `edma_cleanupp_vchan` in the `edma_remove` function to clean up the vchan tasklets before unregistering the DMA device.

Overall, the patch seems to be addressing a valid issue and provides a proper solution. Therefore, I would recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the ARM shmobile board-bockw-reference.c file. It correctly unmaps the FPGA ioremap area after making the necessary changes. The patch has been signed-off by the relevant developers, indicating that it has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the AXP20X/AXP22X battery driver to the MFD cells of the AXP209, AXP221, and AXP223 MFD. It also adds the "axp20x-battery-power-supply" cell with the corresponding "of_compatible" property for each PMIC.

The patch appears to be adding support for battery power supply for the AXP20X and AXP22X PMICs, which is a valuable addition to the MFD cells. The patch has been reviewed and Acked by Chen-Yu Tsai, which adds credibility to its acceptance.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the clk_unprepare() and clk_disable() functions in the clk.c file. It adds a check to ignore error and NULL pointers passed to these functions. This change simplifies error paths in drivers that use optional clocks by allowing the NULL or error pointer to be passed unconditionally.

The patch also adds a check in the __clk_disable() function to ignore NULL pointers and a check in the clk_disable() function to ignore error and NULL pointers.

These changes improve the robustness of the clk_unprepare() and clk_disable() functions by handling error and NULL pointers gracefully. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds Skylake stepping Revision IDs definitions to the Intel i915 driver. It defines the revision IDs for different versions of Skylake processors (A0, B0, C0, D0). These revision IDs are used for specific checks and configurations related to the Skylake architecture.

The patch also adds a new macro, INTEL_REVID, which retrieves the revision ID of the Intel device. This macro is used in various places throughout the code to perform checks based on the revision ID.

The patch has been reviewed by Nick Hoath and Damien Lespiau, both from Intel, and they have provided their sign-offs. The suggested changes by Danvet have also been incorporated.

Overall, this patch is necessary for proper identification and handling of Skylake processors in the i915 driver. It does not introduce any new functionality or changes the existing behavior. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch should be accepted in Linux -stable releases. The patch constifies the ds2404_chip_ops structure, which is never modified. This improves code readability and helps prevent accidental modifications to the structure. The patch has been reviewed and signed-off by Julia Lawall and Alexandre Belloni, indicating that it has undergone proper review and testing.
false || ACK

This patch adds the necessary code to unregister the connector during component removal in the Exynos HDMI driver. This ensures that the connector is properly cleaned up and unregistered when the driver is removed. The patch also includes the necessary cleanup code for the connector.

The patch has been reviewed and signed-off by the relevant developers from Samsung, indicating that it has been tested and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch modifies the dwc3-omap.c file in the drivers/usb/dwc3 directory. It adds the IRQF_SHARED flag to the devm_request_threaded_irq function call, which marks the interrupt handler as shared.

The reason for marking the interrupt handler as shared is explained in the patch description. On OMAPs, OTG events come on the same IRQ, so the IRQ needs to be shared with the OTG device driver.

By marking the interrupt handler as shared, multiple drivers can share the same interrupt line, allowing them to handle the interrupt concurrently. This is necessary in this case to ensure that both the dwc3-omap driver and the OTG device driver can handle the OTG events correctly.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a bug in the drm/exynos driver related to the pageflip finish event for interlace mode. The bug occurs when checking the top field vsync by comparing the dma address converted by start coordinates and the non-converted dma address. 

The patch modifies the mixer_irq_handler function in the exynos_mixer.c file. It introduces two new variables, "base" and "shadow", and updates the comparison logic for the dma addresses. The patch ensures that the dma addresses are correctly compared with the base and shadow registers for both windows in interlace mode.

Based on the provided information, the patch appears to address a specific bug and introduces the necessary changes to fix it. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a flag to indicate that a recovery work was initiated on purpose, in order to avoid triggering a BUG() when the bug_on_recovery module parameter is set. This is a necessary fix to prevent unnecessary crashes when the recovery work is intentionally triggered.

The patch also sets the WL1271_FLAG_INTENDED_FW_RECOVERY flag when a firmware change is needed, indicating that the recovery work is intended. This ensures that the recovery work is only performed when necessary.

Overall, this patch improves the stability and reliability of the wl12xx driver by avoiding unnecessary crashes and ensuring that recovery work is only performed when intended. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a new sysfs file to show the Latency Tolerance Messaging (LTM) capabilities of USB devices. LTM is an optional feature supported by USB 3.0 devices. The patch adds a new sysfs file, "/sys/bus/usb/devices/.../ltm_capable", which will read "yes" if the device supports LTM and "no" if it doesn't. The file will be present for all speeds of USB devices, but will always read "no" for USB 1.1 and USB 2.0 devices.

The patch also adds the necessary code to check if a USB device supports LTM and to display the LTM capability in the sysfs file.

This patch is useful for users and developers who want to check if a USB device supports LTM. It does not introduce any new functionality or change any existing behavior. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the code by replacing the call to call_usermodehelper_fns() with call_usermodehelper_setup() and call_usermodehelper_exec(). This change ensures that the cleanup function is always called, even in case of an OOM (Out of Memory) condition. By doing so, we avoid missing a call to key_put().

The patch has been reviewed and Acked-by multiple developers, including David Howells and James Morris. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch moves the rateinfo initialization to a helper function called "rateinfo_init". This helps to reduce the code bloat in the main match function. The rateinfo initialization is now done in a separate function, making the code more modular and easier to understand.

The patch also adds the necessary function prototype for "rateinfo_init" and updates the function call in the main match function to use the new helper function.

Overall, this patch improves code organization and readability without introducing any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds a new function `dso__last_symbol()` to find the last symbol in a DSO (Dynamic Shared Object). This function will be used when parsing address filters to calculate a region that includes the entire DSO.

The patch also adds the necessary changes to the `symbol.c` and `symbol.h` files to implement and use the new function.

The patch is well-documented and the code changes are straightforward. The new function provides a useful feature for symbol parsing and does not introduce any potential issues or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || NAK

The patch is reverting a previous commit that made changes to the code. The reason for reverting is that the code changes the flags of the wrong CPUs, which breaks the bootup of secondary CPUs. The patch includes a function called "modify_scu_cpu_psr" that is used to modify the power and status register of the SCU (Snoop Control Unit) on ARM-based shmobile emev2 platforms. However, the implementation of this function is incorrect, as it assumes that the code is running on a different CPU than the one that is changing the coherency setting. This assumption is incorrect and can lead to incorrect behavior and system instability.

Therefore, the patch should not be accepted in Linux -stable releases. It is important to fix the issue with the code changes and ensure that the correct flags are modified for the appropriate CPUs.
false || ACK

This patch removes the deprecated usage of the "cpus_" functions in the ia64 architecture code. It replaces the usage of "cpus_andnot" with "cpumask_andnot" and "cpumask_of_cpu" with "cpumask_of". These changes are necessary to update the code to use the newer cpumask API.

The patch also removes the unused "vector_allocation_domain" function, which is no longer needed after the changes.

Overall, this patch improves the code by removing deprecated functions and updating it to use the newer cpumask API. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch constifies the ACPI device ID array in the spi-pxa2xx.c driver. Since the array does not need to be writable at runtime, making it const improves code clarity and can potentially help the compiler optimize the code. Therefore, this patch should be accepted in Linux -stable releases.
false || ACK

This patch is a simple code cleanup that replaces a hardcoded numeric value with the defined constant SNDRV_CTL_ELEM_ID_NAME_MAXLEN. This improves code readability and maintainability. There are no potential issues or risks associated with this change. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch adds a new function `nve0_fifo_intr_engine` to handle engine interrupts in the `nve0_fifo_intr` function. This function triggers the `uevent` event for the `priv->base` object. This change improves the handling of engine interrupts in the `nve0_fifo_intr` function.

The patch is a clean and straightforward addition that improves the functionality of the `nve0_fifo_intr` function without introducing any potential issues or regressions. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch simplifies the boolean tests in the lm3560 driver code by removing unnecessary comparisons. Instead of using "if (on == true)", the patch changes it to "if (on)", which improves code readability and reduces mental parsing time. This change does not affect the functionality of the code and is a straightforward improvement. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch removes an unnecessary work pending test before calling schedule_work(). The patch has been tested in queue_work_on() already and there are no functional changes. The patch has been reviewed and signed-off by multiple developers. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch fixes an issue in the i2c-mxs driver where it ignored the NO_SLAVE_ACK bit during the busy-waiting loop. This caused the i2cdetect scan on the i2c bus to be slow. The patch adds a check for the NO_SLAVE_ACK bit and returns -ENXIO if it is set, indicating that there was no slave acknowledgement.

The patch has been reviewed and signed-off by Janusz Uzycki and Wolfram Sang, who are both recognized contributors to the Linux kernel.

Based on the provided information, it appears that the patch addresses a specific issue and improves the performance of the i2cdetect scan. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a build error that occurs when the mc138xxx driver is built as a module. The error is caused by two undefined symbols, "mc13xxx_parse_regulators_dt" and "mc13xxx_get_num_regulators_dt". The patch adds the missing EXPORT_SYMBOL_GPL statements for these symbols, allowing them to be used by the mc13892-regulator module.

The patch has been reported by Randy Dunlap and signed-off by Fabio Estevam and Mark Brown, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple whitespace cleanup in the staging driver for the wilc1000 wireless chip. It removes a whitespace before the opening parenthesis in a function declaration. This change does not affect the functionality of the code and is purely a cosmetic change. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch fixes a checkpatch warning in the tools/hv/hv_vss_daemon.c file. The change is a simple formatting fix, where the syslog message is now properly indented. This change does not introduce any functional or logical changes to the code.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch improves the sdhci-s3c driver by caching the rates of all bus clocks at probe time and then using those cached values instead of calling clk_get_rate(), which might sleep and cause scheduling while atomic issues.

The patch has been tested and acknowledged by Heiko Stuebner and Jaehoon Chung. It has also been signed-off by Tomasz Figa and Chris Ball.

The changes in the patch are straightforward and do not introduce any new functionality or potential issues. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch initializes the `ops` structure in the `nand_default_block_markbad`, `nand_read`, `panic_nand_write`, and `nand_write` functions by using `memset` to zero out the entire structure. This ensures that all fields of the structure are properly initialized, including the `ooblen` field.

Although the current code works correctly because the users check that `oobbuf` is `NULL` before using it, it is good practice to initialize all fields of a structure to avoid any potential issues in the future. Additionally, initializing the `ooblen` field to zero explicitly communicates the intention that it is not being used.

The patch also mentions that this change was noticed by Coverity, which indicates that it addresses a potential issue flagged by a static analysis tool.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a 'line over 80' issue by removing a comment that was causing the line to exceed 80 characters. It also resolves a 'blank line' issue. The changes made in the patch do not introduce any new functionality or behavior, but rather improve the code readability and maintainability.

The patch has been signed-off by the author and the maintainer of the affected file, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes an issue where gpio_base may not default to -1 when no device tree node exists for a device and CONFIG_OF_GPIO is defined. By setting gpio_base to -1 explicitly, the patch ensures that the default value is correctly assigned even when no device tree node is present.

The patch also removes a deprecated device-tree property check, which is no longer necessary.

Overall, this patch addresses a bug and improves the code by removing unnecessary checks. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the f2fs filesystem's rename function. The patch correctly checks and shows the return value of the update_dent_inode function in the rename function. If the update_dent_inode function returns an error, the patch releases the orphan inode and returns the appropriate error code.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and review. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch adds support for separate transmit (Tx) and receive (Rx) buffers with a single channel in the mailbox-test driver. It introduces two new variables, tx_mmio and rx_mmio, to hold the memory-mapped I/O (MMIO) regions for the Tx and Rx paths, respectively. If only one region is specified, it is assumed to be shared between Rx and Tx for backward compatibility.

The patch also modifies the mbox_test_message_write function to check if tx_mmio is not NULL before sending a signal. Similarly, the mbox_test_receive_message function is modified to check if rx_mmio is not NULL before receiving a message.

In the mbox_test_prepare_message function, the patch updates the memcpy_toio calls to use tx_mmio instead of mmio.

Additionally, the patch modifies the mbox_test_probe function to handle separate MMIO regions for Rx and Tx. It adds a second resource entry to retrieve the Rx MMIO region, and if it is not specified, it defaults to the Tx MMIO region. If Rx is not specified but has a separate Rx MMIO region, the patch assigns the Rx channel to the Tx channel.

Overall, this patch enhances the mailbox-test driver by supporting separate Tx and Rx buffers with a single channel and dedicated MMIO regions. It also ensures backward compatibility by allowing shared MMIO regions if only one region is specified. The changes are well-implemented and do not introduce any regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch fixes a line over 80 characters warning in the file drivers/staging/octeon/ethernet.c. The line in question is the call to the function schedule_delayed_work(). The patch correctly splits the line into two lines to comply with the coding style guidelines.

The patch also includes the necessary Fixes and Cc tags, as well as the Signed-off-by tags from the author and the maintainer.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes unnecessary variables and simplifies the code by replacing them with a single line of code. This improves code readability and reduces the chances of introducing bugs. The patch also removes the unused variable "err" and directly returns the result of the function "_rtl88e_fw_free_to_go(adapt)". This change makes the code more concise and eliminates unnecessary assignments. Overall, the patch improves the code quality without introducing any new issues. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the ALSA fireworks driver where the wrong value is passed as an argument to PTR_ERR(). The return value of memdup_user() should be passed to PTR_ERR() to return the correct error. This patch correctly assigns the return value of memdup_user() to the variable 'buf' and then passes 'buf' to PTR_ERR().

The patch also includes the necessary Signed-off-by tags from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple code refactoring that inline the ATS setup code into the pci_ats_init() function. The patch does not introduce any functional changes. The patch has been reviewed by Bjorn Helgaas and Joerg Roedel, and it has been reviewed in the drivers/pci/ats.c file.

Since this patch is a code refactoring with no functional changes and has been reviewed by relevant individuals, it can be accepted in Linux -stable releases.
false || ACK

The patch refactors the code in the TRB_RESET_DEV switch case in the handle_cmd_completion() function into a separate function named xhci_handle_cmd_reset_dev(). This improves code readability and makes the code more modular.

The refactored code handles the completion of the reset device command and performs the necessary actions based on the slot ID and the virtual device associated with it. If a virtual device exists, it calls the handle_cmd_in_cmd_wait_list() function, otherwise it logs a warning message.

The refactoring does not introduce any new functionality or change the behavior of the code. It simply improves code organization and readability. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch removes the "_single" suffix from the page table allocator functions in the i915 driver. The suffix is unnecessary as the functions always allocate a single page. The patch also updates the function names and their references throughout the code.

The patch has been reviewed by multiple developers and has their Reviewed-by tags. It also has the Signed-off-by tags from the original author and the person who submitted the patch.

The changes in this patch are straightforward and do not introduce any new functionality or behavior. They only remove unnecessary verbosity from the code. Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

This patch is a simple renaming of the parameter 'dma_mask' to 'max_addr' in the function blk_queue_bounce_limit(). The patch does not introduce any functional changes and only aims to fix the potential misinterpretation of the parameter name.

The renaming makes the code more clear and avoids confusion about the purpose of the parameter. It aligns with the actual meaning of the parameter, which is the maximum address the device can handle, rather than a dma_mask.

Therefore, I recommend accepting this patch in Linux -stable releases.
false || ACK

The patch removes an unnecessary variable initialization in the d40_probe() function. The variable "res" is eventually set to a resource pointer from a call of the d40_hw_detect_init() function, so the explicit initialization at the beginning is not needed. The patch has been reviewed and Acked-by Linus Walleij and signed-off by Markus Elfring and Vinod Koul. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch fixes a bug in the ocfs2 filesystem where calling Q_GETNEXTQUOTA on a filesystem with quotas disabled causes a kernel oops. The patch adds an early check to see if the filesystem has quotas enabled and returns -ESRCH if quotas are disabled. This prevents the oops from occurring.

The patch also adds a comment explaining why ENOENT and ESRCH errors are not logged, as they are expected in certain cases.

Overall, the patch is a straightforward fix for a known issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Based on the provided patch, it is clear that the change makes the ACPI Power Management Timer (PM Timer) optional. This change is already present in Windows 8 and is expected to be included in ACPI 5.0A. The patch does not directly affect Linux because it does not rely on the presence of the PM Timer.

The patch modifies the acpi_get_timer() and acpi_get_timer_duration() functions in the hwtimer.c file to check if the PM Timer address is zero. If it is zero, the functions return AE_SUPPORT, indicating that the PM Timer is optional.

Additionally, the patch modifies the fadt_info_table in the tbfadt.c file to indicate that the PM Timer is optional in ACPI 5.0A.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch replaces the use of the obsolete function simple_strtoul with the more strict kstrtoul function in the rtc-sysfs.c file. The kstrtoul function allows for filtering of invalid input that simple_strtoul would accept. This change improves the robustness and reliability of the code.

The patch has been signed-off by the authors and the changes are straightforward and do not introduce any new potential issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

The patch removes the unnecessary 'ret' variable that is shadowing a previous definition. This improves code readability and eliminates any potential confusion. The change does not introduce any new functionality or affect the behavior of the code. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch fixes a whitespace issue in the spi/spidev_test.c file. The change is a simple formatting fix, ensuring that there is no extra whitespace in the code. This change does not affect the functionality of the code and is a purely cosmetic change. Therefore, it is safe to accept this patch in Linux -stable releases.
false || ACK

This patch increases the timeout for aborting transmission in the ath9k_hw_abort_tx_dma function. The timeout is increased based on the current channel rate. This change allows for a longer timeout for half and quarter rate channels, which can help prevent premature aborts of transmission.

The patch is a simple and straightforward modification that improves the behavior of the ath9k driver. It does not introduce any new functionality or potential issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
false || ACK

This patch is a simple reformatting of pointer variables in the main.c file of the staging/speakup driver. It aims to meet the kernel coding standards. The patch does not introduce any new functionality or fix any bugs. It only modifies the formatting of the code.

Since this patch does not introduce any functional changes and only improves the code formatting, it can be considered safe to include in Linux -stable releases.
false || ACK

This patch renames the davinci ohci driver to "ohci-da8xx" to be consistent with other USB drivers. The change is simple and does not introduce any new functionality or potential issues. Therefore, it can be accepted in Linux -stable releases.
false || ACK

This patch adds support for the LM64 chip in the lm63 driver. The LM64 chip has a dedicated pin for tachometer, which means that fan speed monitoring is always enabled. This patch updates the driver to reflect this behavior for the LM64 chip.

The patch also adds a debug message to show the configuration of the alert/tach pin, but this message is only displayed for the LM63 chip, not the LM64 chip.

Overall, this patch improves the functionality of the lm63 driver by correctly handling the tachometer function for the LM64 chip. Therefore, it should be accepted in Linux -stable releases.
false || ACK

Explanation: The patch removes unnecessary iteration in the cls_bpf_delete function and instead directly deletes the specified cls_bpf_prog. This simplifies the code and improves performance. The patch has been reviewed and Acked by multiple developers, indicating that it has been thoroughly reviewed and deemed acceptable. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds the missing module license to the dwc-xlgmac driver. The lack of a license was causing a warning during module building. The patch fixes this issue by adding the GPL license tag to the driver.

The patch also includes the "Fixes" tag, indicating that it addresses a specific issue introduced by commit 65e0ace2c5cd.

Overall, this patch is a simple and necessary fix to ensure compliance with licensing requirements. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch introduces type-safe register accessor macros for the drm/nouveau/device module. These macros require a struct nvkm_device pointer, which provides better type safety compared to the previous macros that took a void pointer and assumed it was any old nvkm_subdev.

The patch also adds privileged register interface accessor macros, which provide read and write access to registers. These macros use the ioread and iowrite functions to perform the register access.

Overall, this patch improves the type safety and provides a more convenient and efficient way to access registers in the drm/nouveau/device module. Therefore, it should be accepted in Linux -stable releases.
false || ACK

This patch adds support for the wl12xx wireless module on VAR-STK/DVK-OM44 boards by using pdata quirks. It defines a new function `var_som_om44_legacy_init` which initializes the wl12xx module with specific parameters. This function is then added to the `pdata_quirks` array for the corresponding board names.

The patch is adding necessary support for a specific hardware configuration, which is a valid reason for accepting it in the Linux -stable releases.
false || ACK

This patch is a simple code cleanup that renames the variable "iReturn" to "ret" in the function ced_get_out_buf_space(). The patch also adds comments to clarify that no lock is needed for a single read operation.

The changes in this patch do not introduce any new functionality or fix any bugs. It is a purely cosmetic change that improves code readability. Therefore, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch fixes two bugs in the lpc_eth driver. The first bug is that it can leak skbs in case TXSTATUS_ERROR is set. The second bug is that it can wake up the txqueue while no slot was freed. The patch addresses these issues by properly freeing the buffer and checking the number of used tx buffers before waking up the txqueue.

The patch has been tested and reported by Roland Stigge, and it has also been reviewed and signed-off by Eric Dumazet and David S. Miller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the timer for the alarm was not removed during resume, causing later timers to not be cleared. This can lead to utilities such as hwclock timing out when waiting for the update interrupt.

The patch adds a check to only call hpet_rtc_timer_init if the device may wakeup. This ensures that the cmos interrupt handler is not allowed to run before resuming, preventing the issue described above.

The patch also includes a coding-style tweak.

Based on the provided information, it appears that this patch addresses a specific issue and improves the behavior of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes two issues in the net/mlx4_core module related to the update-qp command.

First, the bit mask for the currently supported driver features (MLX4_UPDATE_QP_SUPPORTED_ATTRS) was defined twice, using both an enum value and a pre-processor define directive. This is incorrect and can lead to confusion and potential bugs. The patch removes the duplicate definition and ensures that the correct bit mask is used.

Second, the return value of the mlx4_update_qp() function call from within the SRIOV resource-tracker was wrongly voided down. This means that any error that occurs during the mlx4_update_qp() call would not be properly propagated and handled. The patch fixes this issue by assigning the return value of mlx4_update_qp() to the 'err' variable and returning it in case of an error.

The patch also includes proper Fixes tags to reference the commits that introduced the issues.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases to fix the mentioned issues.
true || ACK

This patch adds missing configuration for MBUS windows access protection in the mvneta_conf_mbus_windows function. The patch fixes an issue where the register contents were inherited from the bootloader. The patch also includes the necessary changes to enable access protection for the MVNETA driver.

The patch has been reviewed and signed-off by Marcin Wojtas and Gregory CLEMENT. It also includes a "Fixes" tag, indicating that it addresses a specific issue.

Based on the provided information, the patch appears to be necessary and addresses a known issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the sctp module where the prsctp policies are not properly checked. Currently, the patch checks if prsctp is enabled on the local host using asoc->prsctp_enable. However, this is not sufficient as prsctp should only be used if it is enabled on both the local and peer hosts.

The patch modifies the code to use asoc->peer.prsctp_capable to check if prsctp is enabled on both sides. This ensures that prsctp policies are only used when prsctp is enabled on both the local and peer hosts.

The patch also fixes several instances where the prsctp_enable flag is used incorrectly and replaces it with the correct check using asoc->peer.prsctp_capable.

Overall, this patch improves the correctness of prsctp policy handling in the sctp module and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the tvp5150 driver where a break statement was missing in the set control handler for the V4L2_CID_HUE control. This bug caused the hue control to enable or disable the decode completely. The patch adds the missing break statement, ensuring that the control is handled correctly.

The patch also includes the "Fixes" tag, referencing the commit that introduced the bug. This indicates that the patch is a proper fix for the issue.

Additionally, the patch has been reviewed and signed-off by the relevant maintainers, Laurent Pinchart and Mauro Carvalho Chehab.

Considering all these factors, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch updates the Tilera boot infrastructure to provide the initramfs to Linux as a Tilera-hypervisor file named "initramfs" instead of "initramfs.cpio.gz". This change allows for the use of other compression techniques on the file without causing confusion.

The patch also includes a fallback mechanism to check for the old name "initramfs.cpio.gz" in case the new name is not found. This ensures compatibility with older kernels.

The patch is necessary to ensure compatibility with the newer Tilera boot infrastructure and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the kernel module loading code related to the async_probe generic module parameter. The patch adds the missing argument to the parse_args() function call, which was causing a crash when the async_probe parameter was used. The fix is straightforward and addresses the issue as originally intended. Additionally, the patch has been reviewed and signed-off by relevant maintainers. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. It fixes a possible NULL pointer dereference issue in the bcm2835 i2c driver. The issue occurs when an interrupt fires before curr_msg is set by bcm2835_i2c_xfer_msg(). The patch adds a check for NULL curr_msg and handles the unexpected interrupt with an error message instead of crashing. The patch has been reported by Peter Robinson and has been Acked by Noralf Trønnes.
true || ACK

This patch fixes the srcline translation for call chains of user space applications in the perf unwind feature. It updates the code to use addr_location::addr instead of ip for entries. The patch has been tested and reviewed by multiple developers, including Namhyung Kim and Arnaldo Carvalho de Melo.

The patch modifies two files: tools/perf/util/unwind-libdw.c and tools/perf/util/unwind-libunwind-local.c. In both files, the change is straightforward, updating the assignment of e.ip to al.addr.

The patch improves the output of the perf report command, providing more accurate source code line information for call chains of user space applications. The before and after examples in the patch description clearly demonstrate the improvement.

Based on the provided information, the patch appears to be well-tested, reviewed, and beneficial. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where kprobes fail to find symbols in the map even if they exist. The patch replaces the use of map__load() with map__find_symbol_by_name() to search for symbols in the map. This ensures that kprobes can find symbols correctly.

The patch also introduces a new function, find_probe_functions(), which uses map__find_symbol_by_name() to search for symbols in the map. This function is used to count the number of matched functions and to iterate through all the symbols with the same name.

Overall, this patch improves the efficiency and accuracy of symbol searching for kprobes. It has been reviewed and tested by the relevant developers and is ready to be accepted into the Linux -stable releases.
true || ACK

This patch fixes a race condition in the code where the variable `mddev->sync_thread` is checked without holding the `mddev_lock()`. This can lead to confusion and the possibility of two threads starting simultaneously.

The patch addresses this issue by checking if `MD_RECOVERY_RUNNING` is set before acquiring the `mddev_lock()`. If it is set, the patch then flushes the workqueue, checks if `mddev->sync_thread` is set, and reaps the sync thread if necessary. All of this is done under the `mddev_lock()` to avoid any race conditions with `md_check_recovery()`.

The patch also includes a `Fixes` tag, indicating that it addresses a specific commit, and a `Cc` tag for the stable mailing list, indicating that it should be considered for inclusion in stable releases.

Based on this analysis, the patch appears to be a valid fix for the race condition and should be accepted in Linux -stable releases.
true || ACK

This patch fixes the debugfs entry creation path in the f2fs filesystem. The patch moves the initialization of the debugfs entry to the init part of the f2fs and the destruction will be done from the exit part. This change ensures that the entry creation code will not be executed for individual partition mounts.

The patch also adds two new functions, f2fs_create_root_stats() and f2fs_destroy_root_stats(), which are used to create and destroy the debugfs root directory and the "status" file respectively.

Overall, this patch improves the debugfs handling in the f2fs filesystem and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the issue where the call to topology_init is too late for the set_sched_topology call. By using the smp_cpus_done() call, the s390 specific topology array can be registered early enough. This ensures that the initial scheduling domain structure is established with the correct topology array.

The patch also adds an early_initcall for early_topology_init, which sets the s390 topology early in the initialization process.

Overall, this patch improves the timing of setting the topology and ensures that the correct topology array is used. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch removes the "blocked" flag in the mlx4_en_tx_ring structure and replaces it with the use of netif_tx_queue_stopped() function to check the state of the queue. This change is made to avoid a race condition where the completion function can check the "blocked" flag and open the TX queue before it is closed.

The patch also removes the code that sets the "blocked" flag and wakes up the TX queue in the mlx4_en_process_tx_cq() function. Instead, it checks if the TX queue is stopped and at least one packet was completed, and then wakes up the TX queue.

In the mlx4_en_xmit() function, the code that sets the "blocked" flag and stops the TX queue is also removed.

Overall, this patch simplifies the code and removes the redundant "blocked" flag, which can lead to a race condition. The use of netif_tx_queue_stopped() function provides a more reliable way to check the state of the TX queue.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a potential memory leak in the error path of the function rsi_send_auto_rate_request(). If the memory allocation for the array 'selected_rates' fails, the error path exits without freeing the previously allocated skb. This can lead to a memory leak. The patch adds a dev_kfree_skb() call to free the skb in the error path, preventing the memory leak.

The patch has been reviewed and signed-off by Christian Engelmayer and John W. Linville, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the HID i2c-hid driver fails probing if gpiolib is not enabled. The patch checks the return value of acpi_dev_add_driver_gpios() and only fails the probe if the return value is -ENXIO or less than 0. This ensures that the driver does not fail if GPIO support is not enabled.

The patch also includes a reported-by tag and signed-off-by tags, indicating that the issue was reported by Gabriele Mazzotta and the patch was reviewed and signed off by Mika Westerberg and Jiri Kosina.

Overall, this patch is a necessary fix to prevent unnecessary failures in the HID i2c-hid driver and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a reference leak issue in the percpu-refcount module. The issue occurs when percpu_ref_tryget() and percpu_ref_tryget_live() return "false" even though they acquire a reference. This results in a reference leak since the caller assumes it does not need to do a corresponding percpu_ref_put().

The patch changes the return type of the tryget routines from int to bool, ensuring that the correct boolean value is returned. This prevents the reference leak issue.

The patch also includes a fix identifier, a link to the bug report, and the necessary Signed-off-by and Reviewed-by tags.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the current code where the msg_namelen member is not set to 0. This causes the net/socket.c to leak the local sockaddr_storage variable to userland, resulting in a potential security vulnerability. By setting msg_namelen to 0, this leak is prevented.

The patch is simple and straightforward, and it fixes a known issue. It does not introduce any new functionality or changes that could potentially cause regressions. Therefore, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the offset of the reserved_4 field in the struct vp_rpt_id_entry_24xx in the qla2xxx driver. The offset is changed from 28 to 24, which is the correct value according to the Fixes tag in the patch. The patch has been reviewed and signed-off by multiple developers, including the original author and maintainers of the qla2xxx driver. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where an 'nvme reset /dev/nvme0' command would block forever because the queues were never frozen. The patch adds a check for the controller state being in the resetting state before freezing the queues. This ensures that the queues are properly frozen during the reset process.

The patch has been reviewed by Keith Busch and Christoph Hellwig, and has been signed-off by Jens Axboe. It is a small and targeted fix that addresses a specific issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the s390/kvm code where the saved values of the ACRS/FPRS registers are not up-to-date during a store status operation. The patch collects the ACRS/FPRS values before saving them, ensuring that the saved values are correct.

The patch also fixes some strange problems with hotplug and virtio-ccw, where the low level machine check handler revalidates all registers with the content of the save area. This ensures that the ACRS/FPRS registers are correctly validated during hotplug.

The patch has been reviewed and signed-off by Christian Borntraeger and Gleb Natapov. It is also marked for stable release.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where errors in add_probe_trace_event() were not being properly handled, leading to a segmentation fault in certain cases. The patch ensures that tf->ntevs and tf->tevs are not modified if add_probe_trace_event() fails. After applying the patch, the issue is resolved and the expected output is obtained.

The patch also includes the necessary error handling and memory cleanup in case of failure, ensuring that resources are properly freed.

Based on the provided information, the patch appears to be correct and necessary for fixing the bug. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch modifies the f2fs file system code in two places. 

In the first modification, the patch adds a check for the s_dirty flag under the cp_mutex lock in the write_checkpoint() function. This ensures that the checkpoint is only skipped if the s_dirty flag is not set. This change is necessary because the s_dirty flag is reset under the cp_mutex lock, so it should be checked under the same lock to ensure consistency.

In the second modification, the patch removes an unnecessary check for the s_dirty flag in the f2fs_sync_fs() function. This check is redundant because the write_checkpoint() function already checks the s_dirty flag and skips the checkpoint if it is not set. Removing this check simplifies the code and improves performance.

Overall, the patch improves the correctness and efficiency of the f2fs file system code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition in the drm/nouveau/tmr driver that could result in a delay of approximately 4 seconds until an alarm triggers. The patch introduces a check after updating the hardware to ensure that the alarm timestamp is still in the future. If it is, the alarm is scheduled and the function exits. If not, the alarm is moved to the completed list.

The patch also includes a fix to shut down the interrupt if there are no more pending alarms.

Overall, this patch addresses a potential race condition and improves the reliability of alarm triggering in the driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a specific issue reported by Andreas Schwab regarding problems with resume on specific hardware. The patch adds a missing normalize call to ensure that the timekeeper is properly normalized after the add operation.

The patch has been tested by Andreas Schwab and has been signed-off by John Stultz and Thomas Gleixner. It also includes relevant Cc's to Prarit Bhargava and Ingo Molnar.

Based on the provided information, it seems that this patch is necessary to fix a known issue and has been tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue specific to Access Points (APs) in the mwifiex driver. When an AP is started with WEP security and an external station is connected to it, the data path works correctly. However, if the AP is restarted with WPA/WPA2 security, the station is able to connect but ping fails.

The issue is caused by the driver skipping the deletion of WEP keys if the interface type is AP. This redundant check is removed in the patch, which resolves the issue.

Based on the provided information, the patch appears to be a valid fix for a specific issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses the issue of a flood of "kevent may have been dropped" warnings generated by usbnet when something goes wrong. It ratelimits the rate of their generation, which helps mitigate the fallout caused by the current implementation.

Although the patch does not fix the underlying problem in usbnet's kevent deferral mechanism, it is still beneficial to include it in the Linux -stable releases. The patch adds a net_ratelimit check before generating the warning message, which helps prevent excessive flooding of these messages.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a logic issue in the ci13xxx_udc driver related to marking the DMA address of a request as invalid. Currently, the driver sets the dma address to 0 to mark it as not valid. However, some gadget drivers set the dma address to DMA_ADDR_INVALID to mark it as invalid. This inconsistency leads to bogus data being sent because the ci13xxx_udc driver assumes that the request has already been mapped.

The patch addresses this problem by using DMA_ADDR_INVALID instead of 0 to mark the request's DMA address as invalid. This ensures consistency and prevents the driver from assuming that the request has been mapped when it hasn't.

The patch has been tested and signed-off by multiple developers. It also includes a tested-by tag from a third-party tester.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch aims to reduce the memory footprint for debugging in the radeon driver. It replaces the usage of hex_dump_to_buffer() with a kernel helper function printk() to dump up to 64 bytes. In this case, the actual size is 15 bytes.

The change is straightforward and improves the code by using a more efficient and concise method for printing the DPCD data. It does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the unused return smatch warnings in the tcmu_netlink_event function in drivers/target/target_core_user.c. The patch correctly handles the return value of nla_put_string and nla_put_u32 functions, and frees the skb in case of an error. The patch also adds an initialization for the ret variable to -ENOMEM, which is a good practice. Overall, the patch improves the code quality and should be accepted in Linux -stable releases.
true || ACK

This patch is a minor cleanup for the FRAC_BITS value in the cpufreq intel_pstate driver. It fixes the issue of hardcoding the value of FRAC_BITS by using the FRAC_BITS macro instead. The patch has been reviewed and Acked-by Viresh Kumar. It also includes the Fixes tag referencing the commit that introduced the rounding error.

Based on the information provided, it appears that this patch is a valid fix for a minor issue and has been reviewed and Acked-by another developer. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the S25FL127S nor flash part where each writing to the configuration register takes a long time and during that time, no more accesses to the flash should be done. This can cause rootfs mounting to fail and potentially break the filesystem.

The patch adds a wait loop after the register writing until the flash finishes its work, ensuring that no further accesses are made to the flash during this time.

The patch also includes error handling in case there is a timeout while writing the configuration register.

Overall, this patch addresses a specific issue and provides a solution to prevent potential failures and data corruption. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the device-dax driver where it fails to fallback when taking a fault that is larger than the device alignment or handling a larger fault when a smaller mapping is already established. The patch adds a check to ensure that the fault size matches the alignment before proceeding with the fault handling. It also checks if the fault is outside of the VMA range and returns VM_FAULT_SIGBUS if it is. The patch has been tested and reported by Jeff Moyer and has been reviewed and signed-off by Dave Jiang and Dan Williams. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the badness score of a thread can overflow if the privileges given to root threads or the value of /proc/pid/oom_score_adj exceed the amount of rss of the thread. The patch changes the type of the 'points' variable to 'long' and modifies the return statement to return 1 if the value of 'points' is negative.

The bug can lead to incorrect badness scores and potentially incorrect selection of tasks to be killed during an out-of-memory situation. The patch addresses this issue by ensuring that the badness score is correctly calculated and does not overflow.

The patch has been reported by Dave Jones and Acked by Oleg Nesterov. It has also been signed-off by David Rientjes and Linus Torvalds.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM code where the function kvm_vm_ioctl_register_coalesced_mmio() incorrectly returns success even when the underlying function kvm_io_bus_register_dev() fails. The patch correctly modifies the return value of the function to return the error code from kvm_io_bus_register_dev().

Additionally, the patch removes an unnecessary NULL test for the 'dev' variable and cleans up the code by removing the redundant if statement.

The patch also includes the necessary Fixes and Signed-off-by tags.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the netvsc_recv_callback() function in the netvsc_drv.c file. The issue is that the __vlan_hwaccel_put_tag() function is being called unconditionally, which results in VLAN_TAG_PRESENT being added to the packet even if it doesn't come from a VLAN.

The patch adds a check to only call __vlan_hwaccel_put_tag() if the packet's vlan_tci field has the VLAN_TAG_PRESENT flag set. This ensures that VLAN_TAG_PRESENT is only added when the packet comes from a VLAN.

The patch has been reviewed by multiple developers and has been reported by Olaf Hering. It also includes the necessary Signed-off-by tags.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the rtl8192cu driver where a struct rtl_tcb_desc object is assigned without being cleared. The patch adds a call to memset to clear the struct before it is used.

This bug could potentially lead to uninitialized data being used, which can cause unexpected behavior or crashes. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Based on the provided patch, it appears that the patch is deleting the last traces of "__enabled_" prefixed versions of the normal Kconfig options. This is in line with the fix for IS_ENABLED() and friends to not require these special versions anymore.

Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a use-after-free bug in the quatech2 USB serial driver. The patch ensures that the serial disconnected flag is checked before accessing private port data after waking up. This is necessary because the private port data, including the wait queue, can be gone when waking up after a disconnect.

The patch also removes the unnecessary delta_msr_wait wait queue from the port private data structure and initializes it in the qt2_port_probe function.

Overall, this patch addresses a critical bug and improves the stability and reliability of the quatech2 USB serial driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an overflow condition in the pool_find_page() function in the dmapool module. If a DMA pool lies at the very top of the dma_addr_t range, the calculated end address of the pool wraps around to zero, causing page lookup to always fail. 

The patch modifies the calculation to be overflow-proof by subtracting the starting address of the page from the given DMA address and comparing it with the pool allocation size. This ensures that the comparison is done correctly even when the address wraps around.

The patch has been reviewed and signed-off by multiple developers, including Robin Murphy, Andrew Morton, and Linus Torvalds. It also includes appropriate Cc's to relevant individuals.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the libnvdimm module where smart data retrieval is broken due to an incorrect payload size. The patch correctly sets the payload size to 128 bytes as per the specification. Since this is a bug fix, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a specific issue where the early MMU mapping of the UART can get booted out of the TLB between the start of paging_init() and when the UART is re-added at the end of s3c_init_cpu(). This can cause a hang at bootup if early_printk is enabled. The patch avoids this hang by calling debug_ll_io_init() early.

The patch has been reviewed and Acked-by Kukjin Kim <kgene.kim@samsung.com>. It has also been signed-off by Doug Anderson <dianders@chromium.org> and Olof Johansson <olof@lixom.net>.

The change itself adds a call to debug_ll_io_init() in the exynos_init_io() function. This ensures that the UART is properly initialized early on, avoiding the potential hang.

Based on the provided information, it seems that the patch addresses a specific issue and has been reviewed and signed-off by relevant parties. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the Intel i915 graphics driver where, in rare cases, the entire ring can be filled without emitting a request. This causes the outstanding request to be flushed and waited upon, but when space on the ring is cleared and a new command is emitted, the allocated seqno for this operation is cleared as well, triggering a sanity check failure.

The patch rearranges the code to ensure that the allocation of the seqno for this operation is done after any required flushes of outstanding operations. This ensures that a valid seqno is always used when emitting a request.

The patch has been reviewed and signed-off by the relevant maintainers and has been tested in a memory failure stress test. It is a small and targeted fix that addresses a specific bug without introducing any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the mac80211 module where the virtual monitor interface is not properly assigned during channel context assignment. The patch adds the necessary code to assign the interface pointer before the channel context, ensuring that the interface is found correctly.

The patch has been reported and tested by Emmanuel Grumbach, and signed-off by Johannes Berg. It also includes the necessary locking and unlocking of mutexes to ensure thread safety.

Overall, the patch appears to be well-tested and addresses a specific bug. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch fixes a potential issue where a malicious or broken server can send a large unsigned integer value for the "credits" field, which can result in an underflow and potentially trigger a deadlock. The patch changes the type of the "credits" variable from int to u32 (unsigned 32-bit integer) to ensure that it can handle the large unsigned integer values correctly.

The patch also updates the type of the "rb_max_requests" field in the "struct rpcrdma_buffer" from int to u32 to maintain consistency with the change in the "credits" variable.

The patch has been reviewed and tested, and it addresses the reported issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the error handling in the io_edgeport driver for USB serial devices. It ensures that short control-message transfers are detected and logged as errors when reading incomplete manufacturer and boot descriptors. The patch also changes the behavior to use default all-zero descriptors after a short transfer is detected instead of partially initialized ones.

The patch has been reviewed by Greg Kroah-Hartman and signed-off by Johan Hovold, who is the maintainer of the driver.

The changes in the patch are straightforward and address a specific issue in the driver. The patch also includes error handling improvements and proper logging of error messages.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses the issue of preventing userspace contexts from accessing the Problem State Area MMIO region after detaching a context. It unmaps any mapped MMIO regions when detaching a userspace context.

The patch adds a new field `mapping` to the `struct cxl_context` and a new mutex `mapping_lock` to protect it. The `mapping` field is used to store the address space mapping of the context, and the `mapping_lock` is used to synchronize access to it.

In the `cxl_context_init` function, the `mapping` field is initialized with the provided `mapping` argument. In the `__detach_context` function, the `mapping` field is checked and if it is not NULL, the Problem State Area mapping is released by calling `unmap_mapping_range` with the appropriate parameters.

In the `__afu_open` function in `drivers/misc/cxl/file.c`, the `inode->i_mapping` is passed as the `mapping` argument when calling `cxl_context_init`. This ensures that the address space mapping of the file is stored in the `mapping` field of the context.

Overall, this patch adds the necessary functionality to unmap the MMIO regions when detaching a userspace context, which improves the security and stability of the system. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a check for NULL context in the mmc_cd_gpio_free() function to prevent an oops when the function is mistakenly called on a driver cleanup path, even if a previous call to mmc_cd_gpio_request() failed.

The patch is a simple and straightforward fix that adds a necessary check to prevent potential issues. It does not introduce any new functionality or change existing behavior.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the ARM architecture where the pmd_present function does not correctly check the valid bit of the pmd entry. The subsequent patch, pmd_mknotpresent, clears the valid bit, resulting in a not-present entry. However, pmd_present still returns true even after the pmd_mknotpresent operation.

This patch modifies the pmd_present implementation to take into account the valid bit. It adds a check for the L_PMD_SECT_VALID flag, ensuring that pmd_present only returns true if the valid bit is set.

The patch also includes the necessary Fixes and Signed-off-by tags, as well as appropriate Cc entries for stable and relevant maintainers.

Based on the provided information, this patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes the third argument of the function `anycast_dst_alloc()` in the `addrconf.c` file of the IPv6 module. The third argument was previously set to 0, but it should be a boolean value. The patch corrects this by setting the third argument to `false`.

This fix ensures that the correct boolean value is passed to the `anycast_dst_alloc()` function, which is important for proper functionality of the IPv6 module. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch disables the timestamping capability in slave mode for old hypervisors that do not support it. It updates the "flags2" field of the "dev->caps" structure to remove the "MLX4_DEV_CAP_FLAG2_TS" flag, indicating that timestamping is not supported in slave mode. Additionally, it prints a warning message to inform the user about this limitation.

This patch is necessary to ensure that the timestamping feature is disabled in slave mode for compatibility reasons. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where an 'unhandled fault' occurs when a gadget driver calls usb_gadget_connect() while the USB cable is not plugged into the OTG port. The fault is caused by an access to MUSB's memory space while its clock is turned off due to pm_runtime kicking in.

To fix the fault, the patch encloses musb_gadget_pullup() with pm_runtime_get_sync() and pm_runtime_put() calls to ensure that the path is always reached with the clock turned on.

The patch has been reported by Zach Pfeffer and signed-off by John Stultz, Felipe Balbi, and drivers/usb/musb/musb_gadget.c.

Considering the nature of the issue and the proposed fix, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch extends the Fujitsu D3003-S2 board connector quirk to cover a more recent APU stepping with a new PCI ID. The patch adds the new PCI ID (0x9806) to the condition for applying the quirk. This ensures that the back plane connectors are correctly marked for the new APU stepping.

The patch has been reviewed and signed-off by Tvrtko Ursulin and Alex Deucher, who are both recognized contributors to the Linux kernel. The patch also includes the appropriate Cc to the stable mailing list and the relevant file.

Based on the information provided, it appears that the patch is necessary to ensure proper functionality on the Fujitsu D3003-S2 board with the new APU stepping. Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided patch, I would recommend not accepting it in Linux -stable releases (NAK). 

The patch disables the check for (fp < RSP) in the perf_callchain_user32 and perf_callchain_user functions. This check is responsible for ensuring that the callchains are not truncated when there are two different stack regions present. Disabling this check may lead to incorrect callchains being generated.

Although the patch mentions that in limited testing it didn't seem to break anything, it is important to consider the potential impact on a wider range of systems and use cases. It is not clear how extensively the patch has been tested and whether it covers all possible scenarios.

Additionally, the patch suggests a long-term solution of having userspace advise the kernel on the range of valid stack addresses. This indicates that there might be a better solution to address the issue rather than disabling the check.

Considering these factors, it would be prudent to further investigate and find a more robust solution before accepting this patch in Linux -stable releases.
true || ACK

The patch fixes a return value check in the usbhs_mod_gadget_probe() function in the renesas_usbhs driver. Currently, the function checks for NULL return value from usb_get_phy(), but it should be checking for ERR_PTR() using IS_ERR(). This patch corrects the check by replacing the NULL test with IS_ERR().

The patch has been reviewed and Acked-by Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>. It also includes Signed-off-by tags from Wei Yongjun <weiyj.lk@gmail.com> and Felipe Balbi <felipe.balbi@linux.intel.com>.

The patch is a fix for a specific issue and does not introduce any new functionality or regressions. It is a simple and straightforward fix that improves the correctness of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a deadlock caused by a race condition between relocation in Btrfs when creating a snapshot. The patch changes the function btrfs_block_rsv_add to btrfs_block_rsv_add_noflush to avoid the deadlock. The change ensures that flushable reservation is not done during relocation when creating a snapshot.

The patch has been signed-off by the authors and the affected file is fs/btrfs/transaction.c.

Based on the provided information, the patch appears to address a known issue and provides a reasonable solution. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a warning in the of_free_opp_table() function in the drivers/base/power/opp.c file. The patch removes the warning when OPP is not defined for a device, as it is not an error condition. Additionally, the patch prevents a crash in dev_name() when find_device_opp() returns ERR_PTR(-EINVAL).

The patch has been reviewed and Acked by Viresh Kumar <viresh.kumar@linaro.org>, which indicates that it has been reviewed and approved by another developer.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation:
The patch removes a problematic change that was introduced in commit 027bd7e89906, which caused failed XS_TRANSACTION_START messages to leave the transaction open. This regression can cause problems with suspend and migration, as all transactions must be closed before suspending.

By removing the change, the patch ensures that the transaction is properly closed in case of failure, preventing potential issues with suspend and migration.

The patch has been reviewed and signed-off by Jan Beulich and David Vrabel, and it has also been CC'd to Konrad Rzeszutek Wilk and the stable mailing list.

Therefore, based on the analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch introduces a new software pte flag, L_PTE_NONE, that is set to identify faulting, present entries. It addresses the issue where PROT_NONE mappings can be accessed by the kernel on systems without support for domains, allowing tasks to read PROT_NONE pages via syscalls such as read/write over a pipe.

The patch modifies the ARM architecture-specific code in the mm subsystem, specifically the pgtable-2level.h, pgtable-3level.h, and pgtable.h header files, as well as the proc-macros.S, proc-v7-2level.S, and proc-v7-3level.S assembly files.

The changes made in the patch are necessary to ensure the correct behavior of PROT_NONE mappings on ARM systems without domain support. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the interrupt routing for GEN9 hardware in the i915 driver. The patch correctly sets the interrupt routing to the CPU for GEN9, which was previously not set correctly. This ensures that RPS interrupts are properly routed to the CPU for GEN9 hardware.

The patch has been reviewed and signed-off by multiple developers, including Imre Deak, Daniel Vetter, and Jani Nikula. This indicates that the patch has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an error return code in the btrfs_init_test_fs() function. Currently, the function returns 0 when there is an error in the kern_mount() error handling case. However, it should return a negative error code instead.

The patch correctly modifies the return statement to return PTR_ERR(test_mnt), which is the appropriate error code for the failure case.

The patch has been reviewed by Omar Sandoval and signed-off by multiple maintainers, including David Sterba and Chris Mason.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ratelimit code by correctly resetting the begin time when the interval is passed. Currently, the code sets the begin time to 0, which leads to improper suppression. The begin value should be set to jiffies instead of 0 to properly reset the interval.

The patch includes a test case that demonstrates the issue with the current code. After applying the patch, the test case no longer shows suppression when there is a 3-second sleep.

The patch has been reviewed and signed-off by multiple developers, including Linus Torvalds. It is a straightforward fix that addresses a specific bug in the code. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the behavior of the UDP error handler in the Linux kernel. It prevents ICMP redirects from being reported to user space by adding a "goto out" statement after the call to the redirect function.

The rationale behind this change is that ICMP redirects are not considered error conditions and should not be treated as such. By not reporting them to user space, it avoids unnecessary processing and potential confusion for applications that rely on the error handler.

The patch has been reviewed and signed-off by multiple developers, including Duan Jiong and David S. Miller. It also includes changes to both the IPv4 and IPv6 UDP error handlers, ensuring consistent behavior across protocols.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression in HDMI audio caused by a code refactoring commit. The missing code is added back into the new code layout, resulting in HDMI audio working again. The patch has been tested on one HDMI head and is expected to work on any HDMI head. Although the patch may also be needed for nva3, it cannot be tested. The patch includes the necessary code changes to enable HDMI audio.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the bcmgenet driver where the RGMII_MODE_EN bit was incorrectly defined as 0 instead of 6. This caused issues on newer GENET controllers where the RGMII data-path needed to be explicitly enabled using this bit.

By correcting the definition of RGMII_MODE_EN to 6, the patch ensures that the RGMII data-pad is properly enabled on newer designs. This is an important fix for the bcmgenet driver to work correctly on these controllers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where drop_one_stripe() can be called with conf->max_nr_stripes == 0, which should not be allowed. The patch adds a test to ensure that max_nr_stripes is always above min_nr_stripes. Additionally, the patch changes the calculation of 'hash' in drop_one_stripe() to use a 'mask' instead of a 'mod' operation, ensuring that 'hash' is valid even if max_nr_stripes reaches zero.

The patch also includes a Fixes tag, indicating that it addresses a specific commit, and it has been reported and tested by Tomas Papan. The patch is also signed-off by NeilBrown.

Based on the provided information, the patch appears to be a valid fix for the reported issue and should be accepted in Linux -stable releases.
true || ACK

The patch removes a redundant call to regulator_disable() in the ads7846_remove() function. The warning message indicates that there are unbalanced disables for the vads7846 regulator, which is caused by the redundant call. By removing the redundant call, the warning message will no longer appear.

The patch has been signed-off by the author and the maintainer, indicating that it has been reviewed and approved. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a quirk to invert the panel backlight brightness value for the Acer Aspire 5734Z machine. The patch is signed-off by multiple developers and has been acked by Chris Wilson. The patch also includes the necessary changes in the intel_quirks structure to enable the quirk for the specific machine.

Considering the provided information, it seems that the patch is well-tested and addresses a specific issue for the Acer Aspire 5734Z machine. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds support for the Telit LE910 V2 mobile broadband card in the cdc_ncm driver. The device does not have ARP capabilities, so the patch modifies the driver to use the wwan_noarp_info struct for this device.

The patch has been reviewed by Bjørn Mork and signed-off by Daniele Palmas and David S. Miller, who is the maintainer of the drivers/net/usb/cdc_ncm.c file.

The patch adds the USB device and interface information for the Telit LE910 V2 device, with the appropriate USB class, CDC subclass, and protocol. It also sets the driver_info field to point to the wwan_noarp_info struct.

Based on this information, it appears that the patch is necessary to add support for the Telit LE910 V2 device and does not introduce any regressions or issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch disables register synchronization for low frequency SYSCLK in the WM8996 codec driver. It addresses an issue where register synchronization may take too long to take effect, causing I/O issues. By disabling synchronization, this patch avoids any potential issues.

The patch modifies the `wm8996_set_sysclk` function in `sound/soc/codecs/wm8996.c` to set the `sync` variable to `0` when the clock rate is 32000 or 32768. It then updates the `WM8996_CONTROL_INTERFACE_1` register with the `sync` value using `snd_soc_update_bits`.

Additionally, the patch adds a new definition for `WM8996_REG_SYNC` in `sound/soc/codecs/wm8996.h` with the value `0x8000`. This definition is used in the `snd_soc_update_bits` call to update the `WM8996_CONTROL_INTERFACE_1` register.

Based on the provided information, the patch appears to be a valid fix for the issue and does not introduce any new problems. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the detection of unsupported highmem with cache aliases in the MIPS architecture. The current code is ineffective because it runs before the caches are probed, resulting in the cpu_has_dc_aliases macro always evaluating to false. This patch moves the paging_init() function to run after cpu_cache_init(), ensuring that the macro evaluates correctly and the unsupported highmem case is detected successfully.

Additionally, the patch addresses a hidden issue where mem_init_free_highmem() attempts to free all highmem pages, even though they are not being used and do not have valid page structs. This leads to an invalid pointer dereference and a TLB exception. The patch skips the loop in mem_init_free_highmem() if cpu_has_dc_aliases evaluates true, avoiding the issue.

The patch has been reviewed and signed-off by multiple contributors, including the original author and maintainers of the MIPS architecture. It also includes appropriate Cc's to relevant mailing lists and individuals.

Therefore, based on the provided information, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ath9k driver where the duration calculation for non-aggregated packets was broken. Before the tx path rework, the length of the packet or aggregate was passed to ath_tx_fill_desc to calculate the duration. However, after the rework, ath_tx_sched_aggr can pass a burst of single frames with len=0 to ath_tx_fill_desc, resulting in incorrect duration calculation.

The patch fixes this issue by overriding the length in ath_tx_fill_desc with fi->framelen when aggr is false, ensuring that the correct length is used for duration calculation.

The patch has been reported by Simon Wunderlich and signed-off by Felix Fietkau and John W. Linville. It also includes a stable tag, indicating that it is suitable for inclusion in Linux -stable releases.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced by commit 2ae66c26550cd94b0e2606a9275eb0ab7070ad0e, which caused a buffer-alignment issue on machines with Intel controller and Nvidia HDMI. The patch moves the flag "align_buffer_size" into the local struct, ensuring that it is not affected by other controllers.

The bugzilla link provided confirms the existence of the bug and the patch has been tested and reviewed by Takashi Iwai, a well-known ALSA developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch fixes a comparison using the wrong pointer variable in the dma debug code. The issue was reported by cppcheck, which identified that the same expression was being compared on both sides of the '==' operator. The patch corrects this by comparing the 'dev_addr' field of 'a' with the 'dev_addr' field of 'b' instead. This ensures that the comparison is done correctly.

The patch also includes the necessary Signed-off-by tags from the authors.

Based on this analysis, I recommend accepting the patch in Linux -stable releases.
true || ACK

This patch improves the error handling in the initialization of the ehv_bytechan tty driver. It avoids deregistering a never-registered tty driver, which could lead to a NULL-pointer dereference. The patch adds proper error handling and cleanup code in case of registration failures.

The patch is signed-off by the original author and the maintainer of the drivers/tty/ehv_bytechan.c file, indicating that it has been reviewed and approved by them.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch is a cleanup that removes the unnecessary use of GFP_ATOMIC flags in the netlbl_secattr_catmap_setrng() function. The function takes a GFP flags parameter but never uses it, and since there is no lock taken in this function, there is no reason to prefer GFP_ATOMIC over the caller's GFP flags.

The patch simply replaces the use of GFP_ATOMIC with the flags parameter passed by the caller, which is GFP_ATOMIC in the only caller cipso_v4_map_cat_rng_ntoh(). This change does not affect how the code works, it just cleans up the code.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a typo in the rtlwifi driver code. The condition in the if statement is corrected from "TXHIGHPWRLEVEL_LEVEL1" to "TXHIGHPWRLEVEL_LEVEL2". This typo was causing the condition to be evaluated incorrectly. The fix has been verified against the pre-mac80211 version of the code.

The patch has been reported by David Binderman and Andrea Morello, and it has been signed-off by Larry Finger and John W. Linville. It is also marked for inclusion in the stable releases.

Based on the information provided, it appears that this patch is a valid fix for a bug and has been properly reviewed and tested. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds spin lock protection to the mod->irq_bempsts and mod->irq_brdysts variables in the usbhs_status_get_each_irq() function. This is necessary because other functions can write to these variables during the spin lock. Without this protection, the driver may clear the BRDYSTS and/or BEMPSTS wrongly, causing the transaction to not finish properly.

Additionally, the patch ensures that the INTSTS0, BRDYSTS, and BEMPSTS variables are used at the same timing by protecting them with the spin lock.

Overall, this patch improves the reliability and correctness of the USB driver and should be accepted in Linux -stable releases.
true || Based on the provided patch, it appears to be a fix for a specific issue related to the execution bit in OpenFirmware's translation entries on sparc64 architecture. The patch ensures that the execute bit is forced on in every mapping.

Considering the detailed explanation provided in the patch description and the fact that it addresses a specific issue on a specific architecture, it seems reasonable to accept this patch in Linux -stable releases. Therefore, my decision is ACK.
true || ACK

This patch fixes a bug in the bgmac driver where the polling function was not returning the correct value when it wanted NAPI to call it again. The patch changes the return value from "handled" to "weight" in order to return the correct budget value.

The patch has been reviewed and Acked-by Felix Fietkau, who is a known contributor to the Linux kernel. It also includes the Fixes tag, indicating that it addresses a specific bug.

Based on this information, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the ALSA sequencer code where there is a race between the timer setup ioctl and the close of the client. This race condition can lead to a use-after-free issue. The patch adds a proper lock around the timer-related calls in the relevant code path to prevent this race condition.

The patch has been reported and tested by Dmitry Vyukov, a well-known kernel developer. It also includes the stable mailing list for consideration.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch adds a blacklist for interface 1 on the Huawei E173s-6 USB serial device. This is necessary because interface 1 causes an oops on usb_wwan with log flooding when accessed. The patch also adds the Huawei E173s-6 device to the blacklist. This ensures that the interface is not added to qmi_wwan, as it does not respond to QMI and is likely used by the card reader. The patch is signed-off by the author and the stable team, indicating that it has been reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a bug in the hugetlbfs code related to coredump of hugepages. The bug occurs when a memory error happens on a hugepage and the affected processes try to access the error hugepage, causing a VM_BUG_ON(atomic_read(&page->_count) <= 0) in get_page(). 

The patch adds a swap entry check in follow_hugetlb_page() to properly handle the different bit layout between hugepage hwpoison entry and pmd entry. With this patch, hugetlb_fault() can be called and proper actions can be taken, allowing for the dumping of all hugepages except for hwpoisoned ones.

The patch has been reviewed and Acked-by multiple developers, including Michal Hocko, KOSAKI Motohiro, and David Rientjes. It also has a Cc to the stable mailing list, indicating that it is suitable for inclusion in -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a crash in the benchmark functions of the radeon driver. The crash occurs when radeon_copy_dma and radeon_copy_blit are called without a valid reservation object. The patch adds the necessary reservation object to these function calls, preventing the crash.

The patch also includes a bug reference and has been reviewed by Christian König and signed-off by Ilija Hadzic and Alex Deucher.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a possible hang due to a race condition on thread termination in the dm crypt module. The patch introduces a new flag, DM_CRYPT_EXIT_THREAD, which is set and tested while holding the cc->write_thread_wait.lock, ensuring there is no racy access to the flag. Additionally, the patch removes an unnecessary set_task_state(current, TASK_RUNNING) following the schedule() call, as the process's state is already set to TASK_RUNNING when it is woken up.

The patch has been reviewed and signed-off by the relevant developers. It also includes a Fixes tag, indicating that it addresses a specific issue. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ath9k driver where the sequence number of a pending frame is not cleared from the pending frame bitmap if the retry count is 0. This can happen if the retry count wasn't incremented due to powersave. The patch adds the necessary code to clear the sequence number in this case.

The patch has been reviewed and signed-off by Felix Fietkau and John W. Linville, who are both recognized contributors to the Linux kernel.

Based on the provided information, the patch appears to be a valid fix for a bug in the ath9k driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a sanity check for the file name length in the hfs_mac2asc function in the fs/hfs/trans.c file. It checks if the length of the file name is greater than the maximum allowed length (HFS_NAMELEN) and if so, it sets the length to the maximum allowed length.

This is a necessary sanity check to prevent a buffer overflow in case of a corrupted file system where the length field could be wrong. By limiting the length to the maximum allowed length, it ensures that the buffer is not overflowed.

The patch has been reported and acknowledged by Clement LECIGNE and has also been signed-off by Dan Carpenter and Linus Torvalds. It is also marked for stable release.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a quirk to assert the presence of a controllable backlight, overriding the VBT backlight presence check during backlight setup. It addresses a regression caused by a misconfigured VBT on certain machines. The patch has been tested and reviewed, and it only applies to the 3.15 kernel version. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the cpu_timer_sample_group() function in the sched/cputime file. The bug causes the sample run ahead, making the sleep short. The patch removes the double accounting of the delta for the calling task, ensuring that the sample is accurate.

The patch has been reviewed and signed-off by several kernel developers, including Peter Zijlstra, Ingo Molnar, and Linus Torvalds. It also includes a link to the original discussion on the LKML mailing list.

Therefore, based on the analysis of the patch and the positive reviews, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the UVD suspend and resume functionality for VI APU in the amdgpu driver. It addresses the issue where the same handle is passed before suspend and after resume, causing the session and handle to be destroyed. The patch skips the suspend and resume operations for APU devices, as indicated by the AMD_IS_APU flag. This ensures that the firmware remains untouched during suspend and resume.

The patch has been reviewed by Christian König and has been tested on VI APU devices. It does not introduce any new functionality or regressions. Therefore, it is safe to accept this patch in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch addresses an issue where the new link protections introduced in a previous commit were enabled by default, causing some applications to break. The patch reverts the default behavior to the legacy behavior, ensuring that existing systems are not broken.

The patch also provides instructions for distributions to enable the link protections if desired, and mentions the possibility of introducing a kernel config option for such behavioral options in the future.

The patch includes reported-by tags and is signed-off by Linus Torvalds, indicating that it has been reviewed and approved by relevant individuals.

Therefore, based on the information provided, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a possible race condition in the mlx5_core_destroy_mkey() function in the mlx5_core driver. The patch ensures that the mr is first removed from the radix tree before destroying it, preventing a race condition if the key was reallocated and attempted to be inserted into the radix tree.

Additionally, the patch handles radix tree insert/delete failures by logging a warning message and destroying the mr if the insert operation fails.

The patch has been reviewed and signed-off by Sagi Grimberg and Eli Cohen, and also signed-off by Roland Dreier.

Overall, the patch addresses a potential race condition and handles failure cases properly, making it suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes an issue in the md (multiple devices) subsystem of the Linux kernel. The patch refines the md_check_recovery function to only call ->add_disk if MD_RECOVERY_NEEDED is set. This prevents unnecessary work and reduces the frequency of info messages from ->add_disk.

The patch has been reported by Jan Ceuleers and signed-off by NeilBrown. It is suitable for the 3.3.y stable branch.

Based on the provided information, the patch appears to address a specific issue and improves the behavior of the md subsystem. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a locking bug in the SELinux/NetLabel glue code that affects systems with NetLabel enabled. The bug is causing a suspicious RCU usage error, as indicated by the kernel error message. The patch corrects the problem by converting the bottom half socket lock to a more conventional and correct lock_sock() call.

The patch has been reviewed and signed-off by Paul Moore <pmoore@redhat.com>, who is a recognized contributor in the SELinux and security areas. Additionally, the patch has been marked for stable release, indicating that it has been deemed suitable for inclusion in the Linux -stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the query device function of the mlx5 driver. The patch correctly frees the dev->port when there is a failure to enable RoCE or initialize node data. The fix is necessary to prevent memory leaks and ensure proper resource management.

The patch has been reviewed by multiple developers from Mellanox and has been signed-off by them. It has also been reviewed and signed-off by Leon Romanovsky from kernel.org and Doug Ledford from Red Hat.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the cxgb4 driver that could cause a crash on machines with more cores than the maximum number of offload queue sets (MAX_OFLD_QSETS). The patch limits the number of offload queue sets to the minimum value between MAX_OFLD_QSETS and the number of online CPUs. This ensures that the driver does not crash on machines with more cores than the maximum number of offload queue sets.

The patch has been reviewed and signed-off by Ganesh Goudar and David S. Miller, who is a well-known maintainer of the Linux kernel networking subsystem.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue introduced by commit a544c619a54b in the HID: wacom driver. The commit introduced delayed work for querying (setting the mode) on all tablets, but the Bamboo Touch tablet (056a:00d0) has a ghost interface that claims to be a pen device. This patch cancels the delayed work and calls the _wacom_query_tablet_data() function to set the mode on the ghost pen interface before removing it.

By doing so, this patch ensures that the mode setting is executed before the device is removed, resolving the issue introduced by the previous commit. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a missing spinlock initialization in the aq_ring header.lock spinlock. The patch initializes the spinlock using the spin_lock_init() function, ensuring that it is properly initialized before being used.

The patch also includes the Fixes tag, referencing the commit that introduced the issue, which adds credibility to the fix.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. The patch disables the RHWO (Render Hang Workaround Optimization) optimization in the gen7 driver for Intel GPUs. The BSpec Workarounds page states that bits 10 and 26 must be set to avoid 3D ring hangs. The patch also includes a link to two bug reports related to GPU hangs that are resolved by disabling this optimization.

The patch has been tested by Eugeni Dodonov and signed-off by Kenneth Graunke and Jesse Barnes. The code changes are also straightforward and do not introduce any new risks or regressions.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an out of bounds access issue in the f_fs USB gadget driver. The issue occurs when accessing the companion descriptor for SuperSpeed endpoints. If the endpoints are HighSpeed or FullSpeed, the companion descriptor is not allocated, resulting in an out of bounds access.

The patch adds a check to only access the companion descriptor if the gadget is SuperSpeed. This ensures that the out of bounds access is avoided for HighSpeed and FullSpeed endpoints.

The patch also includes a reproduction of the issue on the Rockchip platform rk3368 SoC, which supports USB 2.0 and uses functionfs for ADB. The issue is reported with kernel configurations CONFIG_KASAN=y and CONFIG_SLUB_DEBUG=y.

The patch has been tested and fixes the issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch fixes a typo in the get_fmt callback function in the m5mols driver. The check of the return value from __find_format() was inverted by mistake, causing a regression. The patch corrects the check, ensuring that the format is assigned correctly when it is found, and returns -EINVAL when it is not found.

The patch has been signed-off by multiple developers, including Sylwester Nawrocki, Kyungmin Park, and Mauro Carvalho Chehab, indicating that it has been reviewed and approved by them.

Therefore, based on the provided information, the patch should be accepted in Linux -stable releases.
true || ACK

The patch removes a useless BUG_ON statement in the i915_gem_entervt_ioctl function. This BUG_ON statement was causing a regression in the 3.5 kernel version, resulting in a kernel BUG when starting an old X server. The regression was introduced in commit 1b50247a8d, which removed the list of pinned inactive objects.

According to Chris Wilson, the BUG_ON statement is unnecessary and the checks it performs are too late. Removing the BUG_ON statement will not introduce any new issues and will fix the regression.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ACPI PCI IRQ disable function. The Xen pciback driver assumes that pci_dev->irq won't change after calling pci_disable_device(). However, a recent commit in the Linux kernel resets pci_dev->irq to zero when pci_disable_device() is called. This patch avoids resetting pci_dev->irq and provides a hotfix for the issue in the 3.19 kernel.

The patch has been tested and signed-off by multiple developers, including Jiang Liu and Sander Eikelenboom. It also includes appropriate Cc's to relevant maintainers and developers.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the md/raid5 driver where the need_this_block() function could potentially index beyond the end of the failed_num[] and fdev[] arrays. The patch limits the loops to at most 2 iterations, preventing this issue.

The bug was reported by Shaohua Li and the patch is signed-off by NeilBrown. The change is localized to the drivers/md/raid5.c file.

Based on the information provided, the patch appears to be a valid fix for the bug and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a possible out of bounds access issue in the Samsung serial driver on non-DeviceTree platforms. The issue occurs when the serial device is probed and the index used to reference elements of the s3c24xx_serial_ports array is incremented even if the probe is deferred. This can lead to memory corruption.

The patch addresses this issue by incrementing the index only on successful probe, ensuring that it does not point outside of the array.

The patch has been reported by Bartlomiej Zolnierkiewicz and has been tested and signed-off by Krzysztof Kozlowski and Greg Kroah-Hartman.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch addresses a recursive locking bug introduced in the imx_console_write() function by commit 9ec1882df2. The bug occurs when the function is called recursively, leading to a deadlock situation. The patch proposes a solution to avoid locking in the sysrq case and use trylock in the oops_in_progress case.

The patch also addresses another issue related to the port->sysrq indicator. Currently, if the indicator is not reset, all console writes happen unlocked, making the writer unprotected against open/close or other operations that modify the port. The patch proposes a solution to have a separate indicator port->sysrq_cpu, which is set to smp_processor_id() before calling handle_sysrq() and reset to -1 after that. This change ensures that all other CPUs are forced into the spin_lock path, solving the problem.

The patch has been reported and tested by Tim Sander and signed-off by Thomas Gleixner and Greg Kroah-Hartman. It also includes the necessary changes to the imx_console_write() function.

Overall, the patch provides a clear and effective solution to the recursive locking bug and the issue with the port->sysrq indicator. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition in the netfilter nf_ct_h323 module. The previous commit introduced a bug where the timer was re-activated even if it had already expired. This could lead to accessing memory that was already freed when the timer expires again.

The patch replaces the mod_timer function with mod_timer_pending to fix this issue. This ensures that the timer is only re-activated if it is still pending and has not already expired.

The patch also includes the necessary Fixes and Signed-off-by tags.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the stmmac driver during suspend/resume. Currently, the driver reallocates all the resources during resume but does not release them during suspend. The patch changes the logic to reinitialize the descriptors and the rx/tx pointers only during resume, instead of freeing and reallocating all the resources from scratch. This is a more efficient solution as the memory data will always be preserved.

The patch has been tested on STi boxes and has been reported by ZhengShunQian <zhengsq@rock-chips.com>. It is also signed-off by Giuseppe Cavallaro <peppe.cavallaro@st.com> and David S. Miller <davem@davemloft.net>.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds the functionality to pass beacons from foreign APs in AP mode and GO mode. This is necessary in order to set the ht protection IE properly. The patch modifies the filter_flags to include MAC_FILTER_IN_BEACON, which allows probe requests and beacons from other APs to pass through.

The patch has been signed-off by the authors and the code changes appear to be correct and necessary for the desired functionality. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the TCP implementation related to F-RTO (Forward RTO-Recovery) probes. The bug causes the sender to incorrectly send more probes if the next ACK advances SND_UNA and does not sack new packets. This behavior can lead to longer Head-of-Line (HoL) blocking on the receiver's side.

The patch modifies the code to correctly handle the F-RTO probes. It checks if the SND_NXT (next sequence number to be sent) is greater than the HIGH_SEQ (highest sequence number sent so far). If it is, it then checks if the FLAG_DATA_SACKED or is_dupack flags are set. If either of these flags is set, it means that the loss was real, and the F-RTO is reset to 0. This ensures that F-RTO probes are sent at most once, as specified in the RFC 5682.

The patch has been reviewed and signed-off by multiple developers, including Yuchung Cheng, Neal Cardwell, and David S. Miller. It is a targeted fix for a specific issue and does not introduce any new functionality or regressions.

Therefore, based on the analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch reverts a previous commit that prevented calling prepare_fb and cleanup_fb functions when the framebuffer stays identical. Instead, the patch allows the driver to decide when these functions are noops. This change is beneficial as it avoids unnecessary calls to prepare_fb and cleanup_fb, improving performance. The patch has been reviewed and Acked by relevant maintainers.
true || NAK

Explanation: The patch is reverting a previous commit that implemented the "radeon_pci_shutdown" function in the DRM Radeon driver. The reason for reverting is that it causes a race condition between drm_dev_unregister() and pci_driver.shutdown at shutdown or driver unload time.

The patch mentions that there is a need to revisit how to properly support kexec within the DRM. However, it does not provide any alternative solution or explanation for why the current implementation is problematic.

Without a clear explanation of the race condition and a proposed solution, it is difficult to determine whether reverting the commit is the correct course of action. Therefore, it is best to not accept this patch in Linux -stable releases until a proper analysis and solution are provided.
true || ACK

This patch fixes an issue with the SYNACK RTT estimation in Fast Open. The patch ensures that the correct SYNACK timestamp is used when a passive Fast Open socket sends data before the handshake completes. It also avoids unnecessary calls to tcp_update_ack_rtt() in tcp_synack_rtt_meas() if the RTT sample is already taken in tcp_ack().

The patch has been reviewed and Acked-by three experts from Google, as well as signed-off by David S. Miller.

Therefore, based on the analysis and the positive reviews, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a reject for input-only pins to be set as output for the MPC5121 platform. It also improves the mach-specific quirk setup to consume fewer lines and scale better. The patch has been reviewed and signed-off by the relevant developers.

The changes in the patch are necessary to ensure correct behavior and prevent potential issues with input-only pins being set as output. The rewritten mach-specific quirk setup improves the code's efficiency and maintainability.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch allows the creation of zero-sized memory maps (mm) in the Nouveau driver. It is useful in scenarios where a chipset may or may not have a particular resource, and avoids the need to check for the existence of the mm everywhere.

The patch modifies the `nouveau_mm_init` function in `mm.c` to handle zero-sized mm creation. If the `length` parameter is zero, the function sets the `offset` and `length` of the `node` to zero as well. This ensures that the mm is created correctly even when it has zero size.

The patch also removes the `heap_size` variable from the `nouveau_mm` structure in `mm.h`. This variable is no longer needed as the `length` parameter is used to calculate the size of the mm.

Overall, this patch improves the flexibility and efficiency of the Nouveau driver by allowing the creation of zero-sized mms. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a deadlock issue that can occur when using NVMe-oF with a small queue size (<32). The patch changes the way signaling is done, depending on the queue depth, and removes a magic define. The patch also includes a new function, `nvme_rdma_queue_sig_limit()`, which calculates the signaling limit based on the queue size.

The patch has been reviewed and Acked-by Sagi Grimberg, indicating that it has been reviewed and approved by a trusted developer. The patch also includes the Cc: stable@vger.kernel.org, indicating that it is suitable for inclusion in stable releases.

Overall, the patch provides a necessary fix for a deadlock issue and has been reviewed and approved by trusted developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch replaces the usage of plain (HZ / 50) with msecs_to_jiffies(20) in the stmpe_ts_handler function of the stmpe-ts driver. The new implementation is more explicit about the desired behavior, which is to schedule the task 20 milliseconds from now. This change improves code readability and maintainability.

The patch has been reviewed by Viresh Kumar and signed-off by Marek Vasut and Dmitry Torokhov, indicating that it has undergone a thorough review process.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference bug in the ux500 driver during system suspend. The bug was caused by a lacking validation of the ->driver_data pointer, which is not set when the musb core driver fails to probe or hasn't been probed yet. The patch adds a check for a NULL pointer before calling the usb_phy_set_suspend function, preventing the dereference.

The patch has been reviewed and Acked-by Linus Walleij and signed-off by Ulf Hansson and Felipe Balbi.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the DSS clock domain does not transition from idle to active state when HDMI is enabled. The patch ensures that the DSS clock domain is enabled before enabling the module using the MODULEMODE bits in the clock domain's CM_DSS_DSS_CLKCTRL register. This prevents the clock domain from failing to change its state to active and ensures that the 'dss_48mhz_clk' clock is not disabled, which is needed for HDMI's PHY to function correctly.

Although the patch includes a temporary hack by calling dss_runtime_get() before pm_runtime_get_sync() for hdmi's platform device, it is necessary to ensure that the DSS clock domain is enabled. The patch also includes a corresponding dss_runtime_put() call in hdmi_runtime_put() to complement the dss_runtime_get() call.

Overall, this patch addresses the issue of HDMI not working when it's the default display and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a build error in the s3c2410_udc driver. The error is caused by passing the address of a bit-field 'maxpacket' to the 'usb_ep_set_maxpacket_limit' function, which expects a value instead. The patch corrects this by passing the value of 'ep->ep.maxpacket' instead of its address.

The patch has been reviewed and signed-off by multiple developers, indicating that it has been tested and verified. Therefore, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a use-after-free bug in the block layer of the Linux kernel. The bug was causing a general protection fault and crashing the system. The patch adds a reference to the struct request_queue in blk_init_rl() to ensure that the memory allocated for the struct request_queue stays around until all blk_exit_rl() calls have finished.

The patch has been reviewed and tested by multiple developers and has been found to fix the crash. It has also been signed-off by the original author and has received acknowledgements from other developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the interrupt enable code in the cavium-octeon MMC driver. On OCTEON SoCs with CIU3, there is no interrupt masking local to the MMC bus interface. Additionally, some SoCs have a diagnostic register at the same address as the enable register, causing interrupts to fire immediately if stored to. The patch addresses this issue by not touching the register on these SoCs.

The patch has been tested and reviewed by the relevant maintainers and has a "Fixes" tag referencing the commit that introduced the issue. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch resolves the hang issue of direct I/O read in handling EXT4_IO_END_UNWRITTEN. It ensures that the increase of i_aiodio_unwritten and setting of EXT4_IO_END_UNWRITTEN flag are done simultaneously. The patch also fixes the problem reported by Michael Tokarev.

The changes in the patch are necessary to prevent the i_aiodio_unwritten counter from going negative and causing processes to wait forever. The patch adds the necessary checks and increments the i_aiodio_unwritten counter when setting the EXT4_IO_END_UNWRITTEN flag.

The patch has been reported and tested by Michael Tokarev and has been reviewed and signed-off by Eric Sandeen, Tao Ma, and Theodore Ts'o. It is also CC'd to the stable@kernel.org mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a lockdep warning in the __ipoib_ib_dev_flush function in the IB/ipoib driver. The warning is caused by recursive calls to __ipoib_ib_dev_flush, which results in the vlan_rwsem lock being acquired twice by the same task. To fix this, the patch replaces the down_read call with down_read_nested, which allows recursive locking without triggering the lockdep warning.

The patch has been reviewed and signed-off by Haggai Eran <haggaie@mellanox.com> and Doug Ledford <dledford@redhat.com>, who are both maintainers of the drivers/infiniband/ulp/ipoib/ipoib_ib.c file.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where a NULL pointer dereference occurs when read_tree_block() fails. The patch sets tree_root->node to NULL when the read_tree_block() fails, preventing the subsequent code from triggering the error. The fix is simple and does not introduce any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the iwlwifi driver where interrupts can be missed if the reset happens after some other interrupt reasons were already added to the "trans_pcie->inta" variable. The bug is identified through code inspection and can potentially cause random command timeouts.

The patch correctly moves the reset of "trans_pcie->inta" after the spinlock is released, ensuring that interrupts are not missed. It also includes the necessary Signed-off-by tags.

Given that this patch addresses a bug and has been reviewed by the relevant maintainers, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an uninitialized memory access issue in the oprofile module for the s390 architecture. The issue occurs when calling the oprofilefs_ulong_from_user() function with a count of zero, which leaves the *val variable uninitialized. This patch adds a check for retval <= 0 after calling oprofilefs_ulong_from_user() to handle this case correctly.

The patch is a straightforward fix for a known issue and does not introduce any new functionality or regressions. It has also been tested and reviewed by the appropriate maintainers. Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

Explanation: The patch modifies the sctp_diag code to correctly handle the TCPF_CLOSE flag in the idiag_states field. Currently, the code checks for the absence of the TCPF_LISTEN flag to determine if the socket is not in the listening state. However, this assumption is incorrect because 'ss' always adds the TCPF_CLOSE flag to the idiag_states field. The patch changes the condition to check for the absence of both the TCPF_LISTEN and TCPF_CLOSE flags to correctly identify non-listening sockets. This change ensures that sctp_diag works as intended and provides accurate information about the socket state. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes the issue with the current poison pointer values of LIST_POISON{1,2} being too big for setups with mmap_min_addr values equal or less than 1 MB. By changing the values to smaller ones, the problem is solved for small mmap_min_addr setups.

The suggested values by Solar Designer have been used, and they are within the safe range for non-mmap'able/hardly-mmap'able space. The change does not introduce any security risks and is a reasonable solution to the problem.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch fixes a broken loop condition in the switch mode of the cpsw driver. The loop condition was incorrectly modified in a previous patch, causing incorrect behavior in switch mode. The patch correctly restores the loop condition and adds comments to clarify the intent.

The patch has been reviewed and Acked by Heiko Schocher, indicating that it has been reviewed and approved by another developer.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch adds the "__fallthrough" annotation to inform the compiler that the fall through case label is intended. This is necessary to avoid a warning/error when compiling with gcc >= 7. The patch is a simple and straightforward fix that addresses the issue correctly. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the sock_tx_timestamp() function in packet_snd() cannot work correctly when a syscall (e.g. sendto syscall) is used without a msg_control buffer. The issue occurs because the socks.tsflags is set to 0 in this case. This patch sets the socks.tsflags to sk->sk_tsflags as the default value, which resolves the issue.

The patch has been reported by Kazuya Mizuguchi and Keita Kobayashi, and has been reviewed and acknowledged by Soheil Hassas Yeganeh and Willem de Bruijn. It has also been signed-off by Yoshihiro Shimoda and David S. Miller.

Based on the provided information, the patch appears to be a valid fix for the reported issue and has received positive reviews and acknowledgements. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the PFMF instruction handler in the s390 architecture. The handler blindly wrote the storage key even if the page was mapped as read-only in the host. This patch introduces a copy-on-write (COW) mechanism before continuing and bails out in case of errors.

The patch has been reviewed and tested by the relevant parties. It also includes a Cc to the stable@vger.kernel.org mailing list, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dm table code related to write same support. The bug causes the iterate_devices loop in dm_table_supports_write_same() to return true even when device_not_write_same_capable() returns true. This is incorrect behavior and can lead to incorrect write same support.

The patch correctly modifies the condition in the if statement to return false when device_not_write_same_capable() returns true. This ensures that write same support is only enabled when all devices in the table support it.

The patch also includes a Reported-by tag, indicating that the bug was reported by Bharata B Rao, and Signed-off-by tags from the patch author and the maintainer.

Given the nature of the bug and the correctness of the patch, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch introduces a new function called xhci_test_and_clear_bit() which is used to clear the RWC (Read/Write Clear) bit in the PORTSC (Port Status and Control) register. The function is defined in xhci-hub.c and is used in multiple places within the xHCI driver code.

The purpose of clearing the RWC bit is to ensure that the port state is properly updated after certain events, such as resuming a port or handling port status changes. The patch modifies the existing code to use the new function instead of directly manipulating the PORTSC register.

The patch also adds the function declaration for xhci_test_and_clear_bit() in xhci.h, which is the header file for the xHCI driver.

Overall, this patch improves the code readability and maintainability by introducing a new function for clearing the RWC bit. It does not introduce any new functionality or change the behavior of the driver. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where the linear region size of a 39-bit VA kernel may not be sufficient to cover all of system RAM, even on platforms with less than 256 GB of memory but laid out sparsely. By setting MAX_MEMBLOCK_ADDR accordingly, the patch ensures that the memory that cannot be mapped is clipped before being installed into the memblock memory table.

The patch has been reviewed by Catalin Marinas and tested by Stuart Yoder. It has also been signed-off by Ard Biesheuvel and Will Deacon.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the perf tools where the wrong pointer is being passed for raw data sanity checking when parsing sample events. This bug causes the perf record command to hang in certain setups. The fix is to use the proper pointer to the raw data instead of the 'u' union.

The patch has been reviewed by David Ahern and has received positive feedback. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch is aimed at resetting the HCR (Hypervisor Configuration Register) on each vcpu when resetting the vcpu using KVM_ARM_VCPU_INIT. The HCR is modified dynamically to enable/disable trapping of guest accesses to the VM registers. This is crucial for the reboot of VMs working since necessary cache maintenance operations are not performed when faulting in pages with the guest MMU off.

The patch adds a new function `vcpu_reset_hcr` which sets the HCR to `HCR_GUEST_MASK` for ARM architecture and `HCR_GUEST_FLAGS` for ARM64 architecture. This function is called in `kvm_arch_vcpu_ioctl_vcpu_init` and `kvm_arch_vcpu_setup` to reset the HCR on each vcpu.

The patch has been Acked-by Marc Zyngier and Signed-off-by Christoffer Dall.

Based on the provided information, it seems that the patch addresses an important issue and has been reviewed by experts in the field. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an API misuse in the intel_idle driver. The patch replaces the use of smp_call_function() with on_each_cpu() to ensure that all CPUs execute the specific functions in intel_idle. Without this fix, there could be issues with auto_demotion and broadcast timer setup on some CPUs.

The patch also includes the necessary Cc and Signed-off-by tags, indicating that it has been reviewed and tested by the relevant parties.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the USB gadget driver. If dma_pool_alloc() fails, the patch correctly frees the bd_table that was just allocated but not added to the chain of bd_table. This prevents a memory leak and ensures proper memory management in the driver. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch addresses a problem where the kernel hangs during bootup on Little Endian (LE) operating systems when both IMA and VTPM are enabled. The issue is caused by tpm_ibmtpm_recv hanging due to incorrect Endianness conversion in tpm_ibmvtpm_send. The patch fixes this by correctly converting the CRQ message for LE. 

The patch has been tested with IMA and VTPM enabled on both Big Endian (BE) and LE PowerPC64 LPARs, exercising the CRQ and TPM command code paths in vtpm. It is also based on previous patches that added Little Endian support to the vtpm module.

The patch includes the necessary Signed-off-by and Reviewed-by tags, as well as the appropriate Cc tags for stable kernel releases. The changes are limited to the tpm_ibmvtpm.c and tpm_ibmvtpm.h files.

Based on the provided information, the patch appears to be a valid fix for the reported issue and has been properly tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference bug in the tps65217-charger driver. The bug occurs when the driver tries to use drv_data in the property get handler without setting it, leading to a NULL pointer dereference. The patch properly sets drv_data during probe by using the power_supply_config parameter, ensuring that the property get handler works as desired.

The patch has been reviewed and signed-off by the relevant developers. It also includes a "Fixes" tag, indicating that it addresses a specific commit that introduced the bug.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the virmidi driver's closing of its assigned rawmidi device, which could lead to a use-after-free issue in snd_seq_deliver_single_event(). The patch properly protects the linked list deletion and calls in the correct order in snd_virmidi_input_close().

The patch has been tested and reported by Dmitry Vyukov, and it has been reviewed and signed-off by Takashi Iwai. It also includes a BugLink and is CC'd to the stable mailing list.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch fixes the checking of the USB speed for the RTL8152 device. It replaces the original method with a more reliable way of checking the USB speed using the speed field of the struct usb_device. The patch also updates the STAT_SPEED_FULL value to 0x0002, which is the correct value for full speed USB. Additionally, the patch checks for both USB_SPEED_FULL and USB_SPEED_LOW, which covers all possible non-high speed USB speeds. Overall, the patch improves the accuracy of the USB speed checking for the RTL8152 device.
true || ACK

This patch modifies the behavior of the freeze_kernel_threads() function to only thaw kernel threads in case of freezing failure, instead of thawing all tasks. This allows for additional cleanup to be performed before thawing userspace tasks.

The patch also updates the suspend_freeze_processes() function to reflect the changes in freeze_kernel_threads().

The patch has been reviewed and acknowledged by Tejun Heo and Nigel Cunningham.

Additionally, the patch fixes a regression introduced during the 3.3 merge window, where thaw_processes() may be called before swsusp_free() in some situations, leading to memory allocation failures.

Overall, this patch improves the error recovery path and ensures that only kernel threads are thawed in case of freezing failure, providing more control and flexibility to the caller.
true || ACK

This patch fixes a lockdep warning about log_mutex in the Btrfs file system. The issue occurs when checking INODE_REF/INODE_EXTREF for a corner case, where a different inode's log_mutex is acquired while holding the current inode's log_mutex. This can potentially lead to a deadlock.

The patch addresses this issue by using mutex_lock_nested() when processing the other inode's log_mutex. This ensures that the lock is acquired in a nested manner, preventing any potential deadlocks.

The patch has been reviewed by Filipe Manana and signed-off by Liu Bo and David Sterba. It modifies the btrfs/tree-log.c file.

Based on the provided information, the patch appears to be a valid fix for the lockdep warning. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in commit 2205369a314e12fcec4781cc73ac9c08fc2b47de, where the source MAC address for frames sent using the VLAN interface is set to the address of the real interface, which is incorrect. With TX VLAN offload enabled, the source MAC address should be set to the address of the VLAN interface.

The patch sets the source address before calling the create function of the real interface, ensuring that the correct source MAC address is used.

The patch has been signed-off by Peter Boström <peter.bostrom@netrounds.com> and David S. Miller <davem@davemloft.net>, which indicates that it has been reviewed and tested by the authors.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the bonding driver where an assertion failure occurs due to a race condition with rtnl locking. The patch replaces the rtnl locking with RCU primitives to ensure proper synchronization.

The patch has been reported and tested by Joe Lawrence, and it has been reviewed by other relevant individuals. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a memory leak issue in the gennvm_register function of the lightnvm driver. It correctly frees the allocated memory for nvm block and gennvm lun structures when the gennvm register fails. The patch also adds a new function, gennvm_free, which is called in both the gennvm_register and gennvm_unregister functions to free the memory. This ensures that the memory is properly released in case of failure or unregistering.

Overall, the patch improves the memory management in the lightnvm driver and fixes a potential memory leak. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds additional checks to avoid overflow in msg-type 6 requests in the s390/zcrypt driver. It introduces two new variables, req_sumlen and resp_sumlen, which are used to calculate the sum of the request and reply lengths respectively. These sums are then compared with the largest operand (either the request data length or the request control block length) to ensure that there is no overflow.

The patch also includes checks to ensure that the total message length does not exceed the maximum allowed size.

By adding these checks, the patch improves the robustness and security of the s390/zcrypt driver by preventing potential buffer overflows. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch removes the "weak" attribute from the clocksource_default_clock() declaration in order to ensure that a non-weak definition is always preferred over the weak one, regardless of link order. This fix addresses a potential issue where the linker could choose the wrong definition based on link order.

The patch has been reviewed and Acked-by two trusted individuals, John Stultz and Ingo Molnar. Additionally, it fixes a previous commit (f1b82746c1e9) that aimed to clean up clocksource selection.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an error in the staging iio accel driver by checking for a negative return value from the function sca3000_read_ctrl_reg() instead of checking for non-zero. This is the correct way to handle error conditions in this case.

The patch has been reviewed and signed-off by Luis de Bethencourt and Jonathan Cameron, who are both recognized contributors to the Linux kernel.

The patch is also marked for stable release, indicating that it is a bug fix that should be backported to stable versions of the Linux kernel.

Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

This patch fixes a regression introduced by commit 6e3f62f0793e in the mfd core. The commit changed the behavior of generating platform-device ids, causing some mfd-drivers to rely on the old behavior. This patch partially reverts the commit with respect to PLATFORM_DEVID_NONE, allowing the affected drivers to continue functioning correctly.

The patch has been reported and tested by Bartlomiej Zolnierkiewicz and has been reviewed and approved by him as well. It also has the necessary Fixes and Cc tags for stable kernel releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the MPX code that could lead to mis-decoding the "REX prefix" and giving false information about bounds violations to userspace. The patch correctly fixes the conditionals to tolerate the non-boolean values returned by the X86_REX_*() macros.

The patch has been reported by Dan Carpenter and signed-off by Dave Hansen and Thomas Gleixner. It has also been reviewed by the x86@kernel.org mailing list and the stable@vger.kernel.org mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a use-after-free bug in the send_leave function of the IB/core module. The bug occurs when the leave_handler is executed before setting the group->query_id member, which can lead to memory corruption if the group object is deleted. The patch removes the unused group->query_id variable and modifies the return statement in the send_join and send_leave functions to return 0 if ret is greater than 0, indicating a successful sa_query call. This ensures that the group->query_id is not set if the sa_query call fails. The patch also includes the necessary Fixes and Signed-off-by tags. Overall, the patch addresses a bug and improves the code by removing unused variables. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a potential issue where a user sets a too small tick value with a fine-grained timer like hrtimer, causing the kernel to try to fire up the timer irq too frequently. This can lead to condensed locks and eventually kernel spinlock lockup with warnings.

The patch introduces a lower limit of the resolution, specifically 1ms. If the user passes a tick value that results in a resolution less than 1ms, the kernel now returns -EINVAL, indicating an invalid argument.

The patch also checks the queue size parameter and ensures it falls within a valid range.

Overall, this patch improves the stability and reliability of the ALSA timer subsystem by rejecting user parameters that could potentially cause issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the otg default state in the musb_hdrc driver. The current default state is a_idle and Mode=Host, which causes a kernel message during musb gadget enumeration. The patch sets the otg default state to b_idle and its Mode to Peripheral, resolving the issue.

The patch has been validated on TI AM335x GP EVM USB0 port with g_zero.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided information, I would recommend accepting this patch in Linux -stable releases (ACK). 

The patch addresses a regression that causes a NULL pointer dereference when a Lenovo T540p ThinkPad is attached to a docking station. The regression was bisected to a specific commit, and the patch provides a temporary fix to avoid the NULL pointer dereference and make the docking station work again.

While there is acknowledgement that this fix is not the proper solution and there is ongoing work to find the correct fix, it is important to address the immediate issue of the crashing at boot. By accepting this patch, the stability of the Linux kernel for users with the affected hardware will be improved.

Therefore, I recommend accepting this patch in Linux -stable releases (ACK).
true || ACK

This patch modifies the initialization of the ulpi bus in the ulpi_init function. Instead of using module_init, it uses subsys_initcall. This change ensures that the ulpi_init function is executed during the subsys_init phase, which is earlier in the boot process compared to module_init.

The patch addresses a potential issue where phy drivers and ulpi interface providers may depend on the registration of the ulpi bus. By executing ulpi_init during subsys_init, it reduces the chances of unnecessary probe delays and -EPROBE_DEFER errors for ulpi_drivers that are registered before the ulpi bus itself.

The patch has been reported by Zhuo Qiuxu and signed-off by Lu Baolu. It has also been acked by Heikki Krogerus. Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the drm/prime subsystem. The issue occurs when increasing the reference counts of both dma-buf and gem for imported dma-buf that come from gem. This leads to the release function of dma-buf not being called and the gem reference count not being decreased.

The patch adds dma_buf_put() for imported gem that comes from its own gem into each driver that has prime_import and prime_export capabilities. This ensures that only the gem reference count is increased if importing gem exported from the gem of the same driver.

The patch also includes proper Signed-off-by and Cc tags.

Overall, this patch addresses a memory leak issue and improves the stability of the Linux kernel. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch allows the SBus driver for Sun Happy Meal cards to be loaded on SBus systems that are based upon SBI SBus Bridges. It extends the filter implemented in a previous commit to include the "sbi" name in addition to the "sbus" name. This ensures that the driver will not be loaded for PCI cards utilizing the same chipset.

The patch has been signed-off by the relevant developers and the code changes appear to be correct and necessary. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the zram hot removal code that can lead to a crash when the module is reloaded. The bug occurs when the zram_remove() function returns an error (typically -EBUSY), but idr_remove() is still called, resulting in a leftover device at the device release.

The patch adds a proper error check in the hot_remove_store() function to not call idr_remove() unconditionally. It checks the return value of zram_remove() and only calls idr_remove() if the return value is 0 (indicating success).

The bug has been reported and tested by multiple individuals, and the patch has been reviewed and acked by Minchan Kim and Sergey Senozhatsky.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM arm/arm64 virtual interrupt controller (vgic-v2) code. The bug occurs when saving the state of the list registers, where the dirty list registers are not properly cleared. This can lead to unexpected EOI interrupts pending for virtual level interrupts.

The patch correctly adds the necessary code to clear the dirty list registers before saving their state. This ensures that no unexpected EOI interrupts are left pending.

The patch has been reviewed and tested, and it has been deemed safe for inclusion in the Linux -stable releases. Therefore, I recommend accepting this patch.
true || ACK

This patch fixes a bug in the virtio console driver where subsequent read() operations return 0 instead of -ENODEV after the port gets unplugged. This can lead to confusion for users who are not monitoring the SIGIO signal and may not realize that the port has been unplugged.

The patch correctly returns -ENODEV on all read() operations after the port gets unplugged, ensuring that the user is notified of the device going away. This behavior is consistent with the write() operation.

The patch is a bug fix and does not introduce any new functionality or regressions. It has been reviewed and tested by the appropriate maintainers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where RPS interrupts and related work items are not disabled before resetting the GPU, which can interfere with GPU initialization and cause RPS interrupts to show up too early. The patch solves this by disabling RPS interrupts and flushing any related work items before resetting the GPU.

The patch has been reviewed and tested, and it has a reported bug and a testcase associated with it. It also has the necessary Signed-off-by tags from the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the lockd daemon initialization process. Currently, there is no synchronization between lockd() and lockd_up() functions, which can lead to a situation where nlmsvc_timeout is not properly initialized before it is used.

The patch moves the initialization of nlmsvc_timeout into the lockd_create_svc() function, ensuring that it is properly initialized before being used.

The fix has been tested and is targeted for the stable release branch (3.10.x). It has also been reviewed by the relevant maintainers.

Therefore, I recommend accepting this patch for inclusion in the Linux -stable releases.
true || ACK

This patch fixes a potential kernel oops when encountering unsupported relocs in modules. Currently, the code blindly branches to whatever would be at the entry in the reloc handler function pointer arrays, which may be NULL or result in dereferencing some value after the function pointer array. The patch adds checks to ensure that the reloc type has an entry in the function pointer array and that the handler is non-NULL. If no handler is found, an error code is returned to fail the module load.

The patch also includes error handling for unknown relocation types, printing an error message and returning -EINVAL.

Overall, this patch improves the reliability and stability of the Linux kernel by preventing potential crashes and providing better error handling. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an error handling issue in the udc core of the USB gadget driver. The patch ensures that the udc device is properly deleted if an error occurs during the registration process. This is important for maintaining the stability and reliability of the USB subsystem.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and verification. The fix is straightforward and does not introduce any new risks or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the xen/balloon driver where if highmem pages are requested on a system without highmem, the alloc_xenballooned_pages function will enter an infinite loop trying to find highmem pages to return. This patch modifies the function to allow low memory to be returned when highmem pages are requested, thus avoiding the infinite loop.

The patch has been reviewed and signed-off by Daniel De Graaf and Konrad Rzeszutek Wilk, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the previous patch that was supposed to prevent inner-reload while VFs exist in the bnx2x driver. The bug caused the MTU change to not be prevented, but instead randomly prevented bnx2x_resume() from running. This patch moves the check to the correct spot, ensuring that the MTU change is prevented when VFs are enabled.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and verified. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the handling of synchronous aborts in the imx6 PCI driver. The previous commit made PCI configuration requests non-posted, resulting in synchronous aborts when the CFG space read to probe for downstream devices times out. The patch adds the necessary code to handle these aborts correctly, similar to what other PCI drivers do on ARM.

The patch has been tested by Fabio Estevam and Peter Senna Tschudin, and it is signed-off by Lucas Stach and Bjorn Helgaas. It also has an Acked-by tag from Richard Zhu.

Overall, the patch addresses a specific issue and has been tested, signed-off, and reviewed by relevant parties. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM (Kernel-based Virtual Machine) module related to nested VPID (Virtual Processor Identifier) emulation. The bug causes an unhandled exception when running the kvm-unit-tests/vmx.flat test suite on L0 (host) with VPID disabled.

The patch addresses the issue by not setting the nested VPID enable bit if it is disabled on L0. This ensures that VPID is hidden and forbidden in L1 (guest) if it is disabled on L0.

The patch has been tested and fixes the issue. It also includes the necessary Fixes and Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where reserving the full 16M range for PEM-specific resources leads to a failure when the pcieport driver requests resources. The patch changes the reservation to only reserve the PEM-specific register, which is SZ_64K. After that, the reservation is increased to SZ_16M as expected by the thunder_pem_init() call.

The patch also adds a reservation for the PCI configuration space.

The fix has been tested and is necessary for proper initialization of the Cavium ThunderX host controller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided patch, it appears to fix a deadlock issue between the chcp and thaw ioctls in the nilfs2 file system. The deadlock occurs when the thaw ioctl is called while the chcp command is waiting at nilfs_transaction_begin(). The patch replaces the usage of sb->s_umount with a dedicated mutex to protect snapshot mounts, thus resolving the deadlock issue.

The patch has been tested and signed-off by the author and has also been reviewed by the stable mailing list. It is a targeted fix for a specific issue and does not introduce any new functionality or regressions.

Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning that occurs when the /cpus node is missing on Sparc platforms. The current code complains with a warning if /cpus isn't there, which became a problem with a recent commit. This patch provides a temporary fix to fail silently if the cpus node isn't present. A proper fix will come later to allow arch code to provide a custom mechanism for decoding the CPU hwid if the 'reg' property isn't appropriate.

The patch has been reviewed and signed-off by Grant Likely, and it has been CC'd to relevant individuals. It is a simple and straightforward fix that addresses a specific issue without introducing any new problems. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a new USB ID for a Philips (or NXP) PTA01 wireless adapter. The device is recognized correctly by lsusb as "0471:209e Philips (or NXP) PTA01 Wireless Adapter". The patch has been tested on real hardware and works flawlessly on any upstream kernel with the ath9k_htc module attached to it.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch removes the use of BUG_ON() statements in the btrfs_map_block function. Instead, it adds error handling code to handle potential errors and log error messages. This change improves the stability and reliability of the Btrfs file system in the face of file system corruption. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a potential infinite loop in the qla4xxx driver. Currently, when qla4xxx_get_fwddb_entry returns QLA_ERROR, the loop continues without updating the next_idx variable. This means that the condition 'idx < max_ddbs' may never be met, causing the loop to continue indefinitely.

The patch addresses this issue by explicitly increasing the next_idx variable in the error condition. This ensures that the loop will eventually terminate.

The decision to use 'continue' instead of 'break' in the error condition is left to the qlogic maintainer. However, the patch itself is valid and necessary to prevent the potential infinite loop.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a NULL pointer dereference issue in the smp_conn_security() function. The patch adds a check for the NULL pointer before accessing the chan variable, and if it is NULL, it returns with an error message. This prevents the NULL pointer dereference and improves the stability of the code. The patch also includes the appropriate Signed-off-by tags and a Cc to the stable mailing list, indicating that it should be considered for inclusion in stable releases.
true || ACK

This patch fixes an obvious bug in the ALSA ctxfi driver where the check for dma_set_mask() call was incorrect. The original commit was wrong, but it still worked for most machines by setting a 32-bit DMA mask in the end. The bug severity is low.

The patch correctly adds the missing "!" in the dma_set_mask() call check, ensuring that the DMA transfer mask is set correctly. It also sets the coherent mask using the same DMA bit mask.

Since this patch fixes a bug and has been tested, it should be accepted in Linux -stable releases.
true || ACK

This patch aims to handle invalid IPv4 and IPv6 packets consistently in the netfilter module. Currently, IPv6 conntrack marks invalid packets as INVALID and allows the user to drop them with an explicit rule. However, IPv4 conntrack drops such packets itself.

With this patch, IPv4 conntrack will mark invalid packets as INVALID and allow the user to drop them. This change ensures consistency between IPv4 and IPv6 conntrack behavior.

The patch modifies the `ipv4_get_l4proto` function in `nf_conntrack_l3proto_ipv4.c`. It checks if the IPv4 header is valid and if the packet is fragmented. If the header is invalid or the packet is fragmented, the function returns -NF_ACCEPT instead of -NF_DROP.

Based on the provided information, this patch appears to be a valid and necessary change to ensure consistent handling of invalid packets in the netfilter module. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch is a trivial clean up in the acct_isolated() function of the mm/compaction.c file. It removes the fields "nr_anon" and "nr_file" from the compact_control structure and modifies the acct_isolated() function to count the number of anonymous and file pages isolated using the count array. The patch also updates the zone page state accordingly.

The patch has been reviewed and Acked-by multiple developers, including Johannes Weiner, KAMEZAWA Hiroyuki, KOSAKI Motohiro, Mel Gorman, Rik van Riel, and Michal Hocko. It has also been signed-off by Minchan Kim, Andrew Morton, and Linus Torvalds.

Since this patch is a trivial clean up and has received positive reviews and acknowledgements from multiple developers, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the GRO (Generic Receive Offload) fast path in the Linux kernel. The fast path caches the frag0 address, but if frag0 is modified by pskb_may_pull or its variants, the cached address becomes invalid. This patch disables the fast path when entering the IPv6 extension header path, ensuring that the GRO fast path is not used incorrectly.

The patch includes a fix for the reported issue and is signed-off by multiple developers, including Herbert Xu, Eric Dumazet, and David S. Miller. It also includes a reference to the commit that introduced the issue.

Based on the provided information, it appears that the patch addresses a specific problem and has been reviewed and tested by multiple developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch improves the brcmfmac driver by using a firmware callback upon failure to load. Previously, the code only unbound one device when firmware loading failed, but for the sdio driver, two devices need to be released. This patch extends the callback with a parameter to pass the error code, allowing both devices to be released upon failure.

The patch has been reviewed by multiple Broadcom developers and has the necessary Signed-off-by tags. It also includes a Cc to the stable@vger.kernel.org mailing list, indicating that it should be considered for inclusion in stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a kmem_cache leak in the IB/rxe driver. It decrements the qp reference when handling an error path in the completer, preventing the leak. The patch also includes proper cleanup by dropping the reference and freeing the skb when necessary.

The patch has been reviewed and signed-off by multiple developers, including Yonatan Cohen, Leon Romanovsky, and Doug Ledford. It is a targeted fix for a specific issue and does not introduce any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an information leak issue in the RFCOMM code of the Linux kernel. The patch correctly initializes the padding bytes of the struct rfcomm_dev_list_req and struct rfcomm_dev_info before copying them to userland. It also allocates the memory using kzalloc() to ensure that the uninitialized kernel heap memory is properly initialized.

The patch has been reviewed and signed-off by multiple developers, including Mathias Krause, Marcel Holtmann, Gustavo Padovan, and Johan Hedberg. It has also been signed-off by David S. Miller, who is a well-known maintainer of the net/bluetooth/rfcomm/tty.c file.

Therefore, based on the analysis of the patch and the review process, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a possible interrupt storm issue that can occur on resume from S3 suspend state on systems with certain BIOS versions. The issue is caused by the BIOS re-initializing GPIO pins and re-programming interrupt masks, which can lead to a high number of unhandled interrupts and trigger an interrupt storm.

The patch moves the suspend and resume hooks to be called at _noirq time, which ensures that the interrupt mask is restored to a known state before device interrupts are enabled. This prevents the interrupt storm from happening.

The patch has been tested and reported to fix the issue on a specific system, and it has also been signed-off by the relevant developers. Additionally, it has been marked for inclusion in stable releases, indicating that it is considered a stable and safe fix.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a NULL-pointer dereference issue in the mos7840 USB-Serial driver. The driver has a broken check for an interrupt-in endpoint, which means that an interrupt URB has never been submitted. This patch adds a fix to check if the interrupt_in_buffer is NULL before setting up the interrupt urb. Additionally, the patch also adds a check for the number of interrupt-in endpoints, ensuring that there is at least one interrupt-in endpoint present. This patch has been reviewed and signed-off by Johan Hovold and Greg Kroah-Hartman. It also includes a Fixes tag, indicating that it addresses a specific commit. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the kernel could read past the buffer page boundary when caching ACLs returned from the server. The patch modifies the `nfs4_write_cached_acl` function to use `_copy_from_pages` instead of `memcpy` to avoid reading beyond the buffer page boundary.

The patch also fixes a bug in the `__nfs4_get_acl_uncached` function where the `resp_buf` variable is not used. The patch removes the unused variable.

Overall, the patch addresses the reported issue and improves the code by using the correct function to copy data from pages. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a rounding error in the calculation of the limits->max_policy_pct value in the intel_pstate driver. The current calculation rounds down the value, resulting in a lower max frequency than expected. The patch adds a DIV_ROUND_UP() function to correctly round up the value.

The patch has been reviewed and Acked-by three individuals, including Prarit Bhargava, Srinivas Pandruvada, and Viresh Kumar. This indicates that the patch has been reviewed and approved by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a length check when retrieving TCP flags in the openvswitch module. It ensures that the packet is long enough to contain the TCP header before attempting to read it. This prevents reading off the end of the packet and potentially accessing bad data.

The patch also includes a check to verify that the packet is an IP packet with TCP protocol. This ensures that the length check is only performed when necessary.

Overall, this patch improves the robustness and reliability of the openvswitch module by preventing potential issues caused by reading off the end of the packet. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a warning about array bounds in the eicon driver. The code is modified to avoid the warning by open-coding the PUT_WORD() line. The patch has been tested and the warning is resolved. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in the commit "sunrpc: Properly decode kuids and kgids in RPC_AUTH_UNIX credentials" where any RPC containing a -1 (0xffff) uid or gid would fail with a badcred error. The previous fix in commit "svcrpc: fix failures to handle -1 uid's and gid's" only fixed part of the problem and overlooked the gid upcall, causing mountd's attempt to write a response to get -EINVAL.

The symptoms of this bug were nfsd failing to reply to the first attempt to use a newly negotiated krb5 context.

The patch has been reported and tested by Sven Geggus and is signed-off by J. Bruce Fields.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug reported by Simon Kirby where there were divides by zero errors in __tcp_select_window(). The issue occurred when inet_csk_route_child_sock() returned a NULL pointer, causing a free of the new socket while the keepalive timer was still armed in tcp_create_openreq_child().

The patch adds a call to tcp_clear_xmit_timers() to clear the transmit timers before freeing the new socket. This ensures that the timers are properly handled and avoids the divide by zero errors.

The patch has been tested by Simon Kirby and signed-off by Eric Dumazet and David S. Miller.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes error handling in the udc_pci_probe() function of the amd5536udc USB gadget driver. Currently, if a failure occurs early in the function, the error handling code just frees the device and returns. This patch adds proper resource deallocations in udc_pci_probe() itself, since udc_pci_remove() is not suitable to be called so early in the initialization process.

The patch also replaces iounmap(dev->regs) with iounmap(dev->virt_addr) in udc_pci_remove() for clarity.

The patch has been reviewed and signed-off by Alexey Khoroshilov and Felipe Balbi.

Based on the provided information, the patch appears to be necessary and correct. It improves error handling and resource deallocation in the udc_pci_probe() function, which is important for the stability and reliability of the USB gadget driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the max8997-haptic driver. The issue occurs when booting with Device Tree Blob (DTB) because the platform data for the haptic device is not set in the supplied data from the parent MFD device.

The patch checks if the platform data is available and assigns it to the haptic_pdata variable. If the platform data is not available, an error message is printed and the function returns with an error code.

This patch is necessary to prevent a NULL pointer dereference and should be accepted in Linux -stable releases.
true || NAK

Explanation: The patch removes a broken attempt at GPU reset using genpd. The author has tested and confirmed that it doesn't actually work. However, the patch does not provide an alternative solution or explain why the GPU reset is necessary. Without a proper solution, it is not advisable to remove the existing code. Additionally, the patch also caused build breakage due to using CONFIG_PM_SLEEP functions without the corresponding Kconfig dependency. This indicates that the patch may introduce further issues. Therefore, it is not recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the tipc_nl_publ_dump() function. It checks if the socket for which the user is listing publication exists before parsing the socket netlink attributes. The patch has been tested and reported by Baozeng Ding and has been Acked by Jon Maloy. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential NULL pointer dereference in the spi-orion driver. The call to of_match_device() may return NULL if there is no match in the device tree. The patch checks the return pointer and sets the local device data to the lowest common denominator orion device data if it is NULL.

The patch also includes a reported-by tag and signed-off-by tags from reputable sources.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds support for the iPhone 4S to the ipheth driver. It includes the necessary USB product ID and interface information for the iPhone 4S. The patch also includes the appropriate changes to the ipheth_table, which is used to match the USB device with the driver.

Since the patch adds support for a new device and does not modify any existing functionality, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where calling regulator_get with a NULL dev argument causes an error when printing /sys/kernel/debug/regulator_summary. The patch explicitly handles "deviceless" consumers in the debugfs code, ensuring that the error is avoided.

The patch has been reviewed and signed-off by Leonard Crestez and Mark Brown. It also includes the stable@vger.kernel.org and drivers/regulator/core.c in the Cc list, indicating that it is intended for stable releases and relevant maintainers are notified.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a new interface, add_device_randomness(), which allows for adding device-specific or boot-specific data to the random pool. This data is likely to differ between devices or even between boots. The purpose of this interface is to initialize the random pool to different values for devices that might otherwise be identical and have very little entropy available to them, especially in the embedded world.

The patch also includes the necessary modifications to the random.c file and the random.h header file.

Overall, this patch provides a useful enhancement to the random number generation in the Linux kernel, improving the quality of randomness for devices with limited entropy. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch modifies the elan_i2c driver to include the Elan vendor ID and the touchpad's product ID under input/input*/{vendor,product}. This change allows a generic Elan gestures config to be applied to all Elan touchpads on ChromeOS by matching on devices that have vendor ID 04f3.

The patch also sets the input device's vendor and product IDs in the elan_setup_input_device function. This ensures that the correct vendor and product IDs are associated with the input device.

Overall, this patch adds necessary functionality to the elan_i2c driver and enables the application of a generic Elan gestures config. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the NCT6776F chip where the fan input pins for fans 3 to 5 are not properly detected. The patch adds additional checks using a secondary set of chip register bits to correctly detect if fans 3 to 5 are being monitored.

The patch has been reviewed and Acked-by Jean Delvare, who is a recognized contributor to the Linux kernel. The patch also includes a Signed-off-by line from the patch author.

Based on the provided information, it appears that the patch addresses a specific issue and has been reviewed and approved by a trusted contributor. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a hung task issue that occurs when a command timeout occurs due to a firmware or hardware bug. The issue is caused by synchronous commands in the command queue that are never downloaded to the firmware. The patch replaces the wait_event_interruptible call with wait_event_interruptible_timeout to fix the issue.

The patch has been signed-off by multiple developers from Marvell and John W. Linville, who is a well-known maintainer of the wireless subsystem in the Linux kernel.

The change in the code is straightforward and does not introduce any new functionality or potential regressions. It simply replaces one function call with another to add a timeout for the wait event.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch separates the border enable readout from the panel fitter in the LVDS driver. The border enable is independent from the panel fitter, so moving the readout to intel_lvds_get_config() ensures that it will be read if LVDS is enabled even if the panel fitter is not.

The patch fixes a state checker warning related to the mismatch in gmch_pfit.lvds_border_bits. By moving the readout to intel_lvds_get_config(), the correct value for gmch_pfit.lvds_border_bits will be set, resolving the warning.

The patch has been reviewed and tested, and it has been cherry-picked from a commit. It also includes the necessary Signed-off-by tags.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch fixes a regression introduced in the mtd_nandectest by properly handling the new error code in double bit error detection. It changes the return value from 0 to -EINVAL when the return value of __nand_correct_data is -EBADMSG. The patch has been reviewed and tested by multiple individuals, indicating that it has been thoroughly evaluated. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds support for the MSI Windpad 110W, which is another eGalax device. It includes the necessary changes to the hid-ids.h file to define the USB device ID for the MSI Windpad 110W. Additionally, it adds the device ID to the mt_devices array in hid-multitouch.c, specifying the driver data as MT_CLS_EGALAX.

The patch has been signed-off by Benjamin Tissoires and Jiri Kosina, indicating that it has been reviewed and approved by them.

Based on the information provided, the patch appears to be a valid addition to the Linux kernel and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential crash caused by calling brightness_set manually in the usbport_trig_update_count() and usbport_trig_notify() functions. The patch replaces the manual call with the proper helper function led_set_brightness(), which will fallback to the brightness_set_blocking callback if needed.

The crash is caused by some LED drivers not implementing the brightness_set callback, leading to a NULL pointer dereference. By using the proper LED API, this issue is resolved.

The patch also includes a reported-by tag and a Fixes tag, indicating that the issue has been reported and the patch addresses the problem. It is also signed-off by the author and the maintainer.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the PL061 driver where the irqdomain initialization was in the wrong place. This caused a crash when booting using platform data. The patch moves the irqdomain initialization to a point where the spinlock and GPIO chip are both fully populated, allowing the callbacks to be used without crashes.

The patch has been tested and fixes the issue. It has also been reported by Russell King and reviewed by other relevant individuals.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the cifs_iovec_write function where the handling of the file position was broken. The patch correctly initializes the "offset" variable after the generic_write_checks function is called, ensuring that the correct offset is used for the write operation. The patch has been reviewed and signed-off by the relevant developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the nfc-fdp driver. The patch checks if the 'phy' pointer is NULL before dereferencing it, and if it is NULL, it prints a debug message and returns. This prevents a potential crash or undefined behavior that could occur if the 'phy' pointer is NULL.

The patch also moves the assignment of 'client' after the NULL pointer check, which ensures that 'client' is not dereferenced if 'phy' is NULL.

Overall, this patch improves the robustness and stability of the nfc-fdp driver by handling the NULL pointer case properly. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch is a simple fix that clears the SA (System Area) buffer object when it is created. It helps to fix a hang issue related to the SDMA (System Direct Memory Access) ring. The patch has been reviewed and signed-off by multiple developers from AMD, indicating that it has gone through the necessary review process.

The patch itself adds a single line of code to the `amdgpu_sa_bo_manager_start` function in the `amdgpu_sa.c` file. It uses the `memset` function to clear the memory pointed to by `sa_manager->cpu_ptr`, which is the CPU-accessible pointer to the SA buffer object. This ensures that the SA buffer is initialized to zero before it is used.

Given the simplicity of the patch and the fact that it addresses a known issue, it is reasonable to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition between the scsi_error_handler and scsi_host_dev_release functions in the SCSI subsystem. The race condition can cause a hang when a device goes away because the scsi_error_handler might miss a wake-up signal.

The patch addresses the issue by inverting the ordering of the set_current_state and kthread_should_stop calls in the scsi_error_handler function. This ensures that the task is always in a non-running state before checking the stop flag, preventing missed wake-ups.

The patch has been reviewed and tested, and it has been reported to affect the current code as well. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch increases the XHCI suspend timeout to 16ms, which is in line with the Intel XHCI specification. The current timeout of 10ms is causing the kernel to abort the suspend in some cases. By increasing the timeout to the recommended value, the problem is fixed.

The patch is also requested to be backported to kernels as old as 2.6.37, which indicates that it is considered important for stability and compatibility.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in commit ac29c64089b7, which caused the hash fault handler for spufs' kernel accesses to not have _PAGE_PRIVILEGED set. This resulted in the DMAs required to establish SPE memory no longer working.

The patch adds _PAGE_PRIVILEGED to the hash fault handler for kernel accesses, ensuring that the DMAs work correctly.

The fix has been reviewed and tested, and it is a straightforward fix for a regression introduced in a previous commit. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the error return value is not initialized when pci_map_rom fails and no ROM can be mapped. By setting the return value to -ENODATA, the patch ensures consistent error handling in this case. The patch has been reviewed and signed-off by trusted developers. Additionally, the issue was found through static code analysis using CoverityScan, which adds further confidence in the correctness of the patch. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a build error in the m68k architecture when CONFIG_DISCONTIGMEM is enabled. The error is caused by the implicit declaration of the pfn_to_nid function in mm/ksm.c. The patch adds the necessary declaration for CONFIG_DISCONTIGMEM in the arch's asm/mmzone.h file.

The patch has been tested and reported by Geert Uytterhoeven, and it has been reviewed and signed-off by Hugh Dickins, Andrew Morton, and Linus Torvalds.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the USB module order in the mackerel board, ensuring that the USB0 port is assigned as the Gadget port and the USB1 port is assigned as the Host port. This resolves the confusion for users and improves the usability of the board. The patch has been reviewed and signed-off by the relevant developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression in the rt2x00 driver for the rt2500pci device. The regression was introduced by commit e2bc7c5, which broke rfkill on the rt2500pci device. The patch reverts to the old behavior on rt2500pci to fix the regression. Additionally, the patch also fixes another issue introduced by the same commit, which was unregistering rfkill on device remove instead of ifconfig down.

The patch has been tested and reported by Niels, and it has been bisected to identify the specific commit that introduced the regression. The patch also includes the necessary Signed-off-by tags.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a warning that occurs when using the DIV_ROUND_CLOSEST macro with unsigned divisors. The patch checks for the divisor variable type when deciding which operation to perform, ensuring that the correct operation is used for both signed and unsigned divisors.

The patch also addresses the issue of negative dividends divided by unsigned divisors by marking this case as unsupported. This is necessary because the C compiler converts divide operations with unsigned divisors to unsigned, even if the dividend is signed and negative. By marking this case as unsupported, the patch prevents incorrect values from being returned in such scenarios.

The patch has been tested and signed-off by multiple individuals, including the original reporter and the maintainers. It also includes a detailed explanation of the problem and the solution.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the qlcnic driver where a spurious mailbox interrupt is mistaken as a good mailbox completion interrupt, leading to premature completion of the next mailbox request. The patch adds a check to guard against this and ignores the spurious interrupt. It also adds a stats counter to record this condition.

The patch has been reviewed and signed-off by the relevant developers. It is a small and targeted fix that addresses a specific issue. It does not introduce any new functionality or risk of regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the devfreq_add_device() function in the devfreq subsystem. The bug occurs when the find_devfreq_governor() function returns an error, causing devfreq_add_device() to fail to add the devfreq instance.

The patch adds error handling code to handle the case when find_devfreq_governor() returns an error. It logs an error message and sets the error code before jumping to the error handling label.

This patch is necessary to ensure that the devfreq device has the default governor. Without this patch, the devfreq instance would not be added correctly if the governor is NULL.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch disables FBC (Frame Buffer Compression) on SandyBridge due to performance issues and frequent lockups. The patch checks the generation of the Intel graphics device and disables FBC if the generation is less than or equal to 6 (SandyBridge is generation 6).

Disabling FBC on SandyBridge is a reasonable solution to address the performance and lockup issues. Therefore, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug introduced by commit e0d4435f, which broke the PPPOL2TP_SO_SENDSEQ setsockopt. The patch ensures that the hdr_len session field is updated every time the L2TP header format is modified, so that l2tp_xmit_skb() can push the correct amount of data for the L2TP header.

The patch also adds the l2tp_session_set_header_len() function to adjust hdr_len whenever sequencing is activated or deactivated from userspace. This function is called in l2tp_nl_cmd_session_modify() and pppol2tp_session_setsockopt() to update hdr_len when the send_seq attribute is modified.

Overall, this patch addresses a bug and ensures that the L2TP header length is correctly computed and updated. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the R8A7791 PFC driver where the HSCIF1 group E signals were omitted in the IPSR4 register description. This omission causes the HSCIF1's probe to fail, resulting in error messages. The patch adds the necessary PINMUX_IPSR_MSEL() invocations for the HSCK1_E, HCTS1#_E, and HRTS1#_E signals, resolving the issue.

The patch also includes the "Fixes" tag, indicating that it addresses a specific issue. The patch has been signed-off by the relevant developers, indicating that it has been reviewed and tested.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch ensures that all interrupts are deactivated at boot for GIC/GICv3 based systems. It clears the active bits for SPIs and disables them, while leaving the PPI and SGIs alone as they are enabled by redistributor registers. It also deactivates all interrupts for banked PPI and SGI interrupts. This patch helps guarantee a clean state at initialization time and improves the reliability and stability of the system. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where PHY interrupts are overwritten by 0 in the smsc911x driver. The patch removes a memcpy operation that was causing the issue and also removes the now unused phy_irq member. This ensures that the SMSC911x PHYs are always in polling mode, preventing unpredictable behavior.

The patch has been reviewed and Acked by multiple developers, including Sergei Shtylyov. It also includes a Fixes tag, indicating that it addresses a specific issue.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the Btrfs file system code to delay the iput() calls with async extents. The concern is that these iput() calls could potentially induce lockups on people waiting on writeback, if they are the final iputs. This could happen in rare cases where ordered extents are not created due to an error. To address this concern, the patch changes the iput() calls to delayed iputs using the btrfs_add_delayed_iput() function.

The patch seems to address a potential issue and provides a mechanism to handle it. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the gpio-74x164 driver where the buffer allocation size is incorrect. The driver was allocating chip->registers * 8 bytes, but only one byte per register is necessary. The patch corrects this by allocating chip->registers bytes instead.

The patch has been reviewed and signed-off by Roland Stigge and Linus Walleij, indicating that it has been tested and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the iwlagn driver where the max TID count is set to 9 instead of the correct value of 8. The patch correctly updates the value to 8, which is the valid range for TIDs. This bug can cause a kernel BUG and a crash when certain operations are performed.

The patch also includes a reported-by tag and signed-off-by tags from the developers who identified and fixed the bug.

Considering the nature of the bug and the correctness of the patch, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the handling of bypass_val_on in the regulator_get_bypass_regmap function. Currently, the handling of bypass_val_on is done unconditionally, which results in drivers reporting bypass being enabled when it is not. This patch adds handling to use bypass_mask if bypass_val_on is zero, ensuring that the correct value is used for comparison.

The patch includes a Fixes tag, indicating that it addresses a specific commit. It also includes Signed-off-by tags from the authors, indicating that they have reviewed and approved the patch.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch simplifies the netlink message length assignment in the connector module. Instead of subtracting the netlink header length from the size and then using the NLMSG_LENGTH() macro to add it back again, the patch uses the precalculated size directly.

This change improves code readability and reduces the chances of introducing bugs related to the calculation of the message length.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a potential issue in the at91_adc driver. Currently, if touchscreen mode is enabled and a conversion is requested on another channel, the result in the last converted data register can be a touchscreen relative value. This is because starting a conversion involves doing a conversion for all active channels, starting with ADC channels and ending with touchscreen channels. If the ADC_LCD register is not read quickly, its content may be a touchscreen conversion.

To remove this temporal constraint, the conversion value is now taken from the channel data register. This ensures that the correct conversion value is used and eliminates the possibility of getting a touchscreen relative value.

The patch has been reviewed and Acked-by Ludovic Desroches, Alexandre Belloni, and Nicolas Ferre. It also has a Cc to the stable mailing list, indicating that it is suitable for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a problem in the Btrfs backref code where nodes were being checked along with leaves when populating extent item entries. This could lead to a crash if random_memory matched disk_bytenr. The patch addresses this issue by adding a check for the level of the reference, ensuring that it is at level 0 before populating extent item entries.

The patch has been signed-off by Josef Bacik and Chris Mason, who are both recognized contributors to the Btrfs codebase.

Based on the provided information, the patch appears to be a valid fix for a potential crash issue. Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

The patch removes the call to nfs4_ds_disconnect() in the filelayout_async_handle_error() function. The reason for this is that there is nothing to prevent another thread from dereferencing ds->ds_clp during or after the call to nfs4_ds_disconnect(), which could result in a NULL pointer dereference and an Oops. Instead, the patch relies on filelayout_mark_devid_invalid() to avoid this issue by avoiding the use of ds->ds_clp.

The function nfs4_ds_disconnect() is also removed from the header file and implementation file, as it is no longer needed.

Overall, the patch improves the code by removing a potential NULL pointer dereference and simplifying the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the ixgbe driver where calling dev_close() during the offline selftest causes IFF_UP to be cleared, resulting in the removal of interface routes and addresses. This behavior is inconsistent and not intended by the user when running the offline selftest. 

The patch replaces the call to dev_close() with a direct call to the net_device_ops ndo_stop function, avoiding the clearing of IFF_UP altogether. This ensures that the interface routes and addresses are not removed during the offline selftest.

The patch has been tested and signed-off by multiple contributors, indicating that it has undergone testing and review.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the workingset shadow nodes shrinker. The issue occurs when memcg_kmem_enabled() becomes true while doing a global reclaim and sc->memcg is NULL. The patch fixes this by checking sc->memcg instead of memcg_kmem_enabled(). The fix has been tested and acknowledged by multiple developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch increases the maximum number of properties in the DRM subsystem from 16 to 24. This change is necessary because on i915 machines with many TV connectors, the maximum number of properties is being reached, resulting in backtraces in the logs. By increasing the limit to 24, it is expected that there will be enough room for all the properties.

The patch has been tested and signed-off by multiple developers, indicating that it has been reviewed and verified. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || NAK

Reasoning:
The patch suggests reverting a deprecation warning for the SCTP_SNDRCV support in favor of SCTP_SNDINFO/SCTP_RCVINFO. The reasons provided for reverting the warning include the fact that SCTP_SNDRCV is a uapi and therefore set in stone forever, the need for SCTP applications to probe for both SCTP_SNDRCV and SCTP_SNDINFO/SCTP_RCVINFO support, and the inability of some users to change their applications due to proprietary legacy reasons.

However, it is important to note that deprecation warnings serve a purpose in informing developers about upcoming changes and encouraging them to update their code accordingly. By reverting the warning, developers may continue to use the deprecated SCTP_SNDRCV support without being aware of the recommended alternative. This can lead to compatibility issues and hinder the adoption of newer kernels.

Therefore, it is recommended to keep the deprecation warning in place to encourage developers to migrate to SCTP_SNDINFO/SCTP_RCVINFO and ensure compatibility with future kernel versions.
true || ACK

This patch fixes a bug in the be2net driver where the mcc/mbox lock is not being released when be_cmd_copy() returns an error. The patch adds a check for the return value of be_cmd_copy() and releases the lock before returning the error code -EBUSY.

The patch has been reviewed and signed-off by multiple developers, including the driver maintainer. It is a simple and straightforward fix that addresses a specific issue without introducing any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch fixes an off-by-two bug in the perf hists browser. The bug was introduced by commit 5395a04841fc, which changed the order of columns and resulted in misalignment in the normal output. The patch adds a boolean variable "first" to keep track of whether it is the first column or not. If it is not the first column, it prints two spaces before the column value to align it correctly. The patch has been reviewed and Acked by Jiri Olsa and reported by Markus Trippelsdorf. It also includes the necessary Signed-off-by tags. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the pinctrl-baytrail driver where the DIRECT_IRQ bit is not cleared for pads using io mode. This can result in the io based irq not being detected. The patch adds a check to clear the DIRECT_IRQ bit in io mode and triggers a WARN if it is misconfigured.

The patch has been reviewed and Acked-by Mika Westerberg, indicating that it has been reviewed and approved by another developer. The patch also includes the necessary Signed-off-by tags.

Based on the provided information, it appears that the patch addresses a valid issue and has been reviewed and approved by other developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch suggests avoiding the use of variable-length arrays in kernel/sys.c. Variable-length arrays can generate worse code and may cause issues on certain architectures, such as the reported problem on POWER where register r28 can get corrupted. Since variable-length arrays are generally considered bad practice, it is recommended to avoid using them.

The patch replaces the variable-length array with a fixed-size array of 65 characters, which is a safe and reasonable size for the given context. This change ensures that the code is more robust and less prone to potential issues.

The patch has been reviewed and signed-off by Linus Torvalds, the original author of the Linux kernel, which adds credibility to its acceptance. It has also been reported by Henrik Grindal Bakken and Cc'd to Benjamin Herrenschmidt and the stable@kernel.org mailing list, indicating that it has been thoroughly reviewed and tested.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch disables the use of shadow registers by default in the iwlwifi driver. This is done because using this feature has been found to cause communication issues between the driver and the device, resulting in host command timeouts. The patch acknowledges the bug and disables the feature until a fix is available.

Given that the use of shadow registers is causing reliability issues, it is appropriate to disable this feature by default in the Linux -stable releases. This will prevent potential communication problems and improve the overall stability of the driver. Therefore, the patch should be accepted.
true || ACK

This patch fixes a regression where kcompactd was not waking up in certain scenarios. The patch corrects the zoneindex in kcompactd() function to ensure that kcompactd wakes up properly. The fix is simple and does not introduce any crash risks. It has been reviewed and Acked-by Vlastimil Babka. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a build error caused by the removal of the LPSS_SSP type in commit 03fbf488cece. The LPSS_SSP type was accidentally added in commit a6e56c28a178 and is not needed for Intel LPSS SPI devices. Therefore, removing this incorrect binding will fix the build error.

The patch has been reported by Axel Lin and signed-off by Jarkko Nikula and Robert Jarzmik. It also includes the Fixes tag and is targeted for the stable branch.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced in commit 05cc5a39ddb7, which caused a null pointer dereference when loading the 8021q module on machines with 57710 or 57711 adapters. The patch correctly checks for the adapter type and sets the accept_any_vlan flag accordingly. This ensures that the driver does not mistakenly publish capabilities for vlan CTAG filtering when it is not supported by the adapter.

The patch has been reported by Otto Sabart and signed-off by Yuval Mintz, Ariel Elior, and David S. Miller. It modifies the bnx2x_main.c file in the drivers/net/ethernet/broadcom/bnx2x directory.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases to fix the regression and prevent null pointer dereferences when loading the 8021q module on machines with the affected adapters.
true || ACK

This patch improves the dwc3_gadget_resize_tx_fifos() function in the dwc3 gadget driver by iterating only over valid IN endpoints. It uses the num_in_eps parameter to determine the number of IN endpoints and terminates the loop accordingly. This prevents dereferencing a potential NULL dwc->eps[i] where i >= (num_in_eps + num_out_eps).

The patch also updates the dwc3_writel() function call to use the correct fifo_number parameter, which is now derived from the loop index num. This ensures that the FIFO size is correctly written for each IN endpoint.

Overall, this patch improves the efficiency and correctness of the dwc3_gadget_resize_tx_fifos() function. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the SCTP module of the Linux kernel. The issue occurs when an SCTP server receives a malformed INIT ping-of-death packet. The patch adds a check for NULL before dereferencing the pointer, preventing the kernel from crashing.

The patch also includes a Fixes tag, indicating that it addresses a specific commit that introduced the issue. It is also signed-off by the author and has an Acked-by tag from another developer, indicating that it has been reviewed and approved.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds protection to the code accessing ctl_table by grabbing the header with grab_header() and releasing it with sysctl_head_finish(). This is necessary to prevent issues when poll() is called in entries created by modules, such as hostname and domainname. The patch addresses a bug that may be triggered if a user calls poll() in a file that doesn't support it.

The patch also handles the case where an entry goes away while poll() is being called, ensuring that ctl_table still exists.

The patch has been reported by Dave Jones and signed-off by Lucas De Marchi, Andrew Morton, and Eric W. Biederman. It has also been reviewed by several individuals, including Al Viro, Linus Torvalds, and Alexey Dobriyan.

Based on the provided information, the patch appears to be a valid fix for the reported issue and should be accepted in Linux -stable releases.
true || ACK

This patch adds support for Intel Secure Hash Algorithm Extensions (SHA-NI) to the x86 architecture. The SHA-NI feature provides new instructions for accelerated computation of SHA-1 and SHA-256, which can improve performance for applications that rely on these hash functions.

The patch includes the necessary changes to the cpufeature.h file to define the X86_FEATURE_SHA_NI flag, which will allow the feature to be shown in the /proc/cpuinfo for CPUs that support it.

The patch also includes a link to the SHA extension programming guide in the Intel Architecture Instruction Set Extensions Programming reference, which provides further information on the definition of this feature's cpuid.

Given that this patch adds support for a new hardware feature and includes the necessary changes to enable it, it should be accepted in Linux -stable releases.
true || ACK

Reasoning: The patch improves the error message in the l2c310_of_parse() function in the ARM architecture. The suggested change by Russell King aligns the error message with the ARM documentation, using "L2C-310 OF" instead of "PL310 OF". Additionally, the patch improves the clarity of the error message by providing a more descriptive message that specifies the invalid cache associativity value. This change will help developers and users better understand the issue and take appropriate actions. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch modifies the genirq code to set the irq thread policy without checking CAP_SYS_NICE. The previous implementation would only set the thread's priority to RT if the user had CAP_SYS_NICE, otherwise it would run with the SCHED_OTHER policy. 

The patch uses sched_setscheduler_nocheck() to set the thread's policy to SCHED_FIFO without checking CAP_SYS_NICE. This ensures that the irq thread will always run with the SCHED_FIFO policy, regardless of the user's capabilities.

The patch has been reviewed and signed-off by multiple developers, including Thomas Pfaff, Sebastian Andrzej Siewior, and Thomas Gleixner. It has also been CC'd to the stable@vger.kernel.org mailing list.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the syscall number is not updated after a PTRACE_SETREGS on ORIG_*AX. This update is necessary to ensure that the potentially altered syscall number is available in the seccomp filters after RET_TRACE.

The patch has been reviewed and Acked-by Kees Cook <keescook@chromium.org>. It also fixes four failing seccomp_bpf tests.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a missing range check in the dma_mmap() function in the IOMMU-based dma-mapping implementation. The check ensures that the offset and buffer size parameters are within a valid range, preventing access beyond the allocated buffer. This is an important fix to prevent potential buffer overflows.

The patch has been reviewed and signed-off by Marek Szyprowski and Russell King, indicating that it has undergone proper testing and review. It also includes a Cc to the stable@vger.kernel.org mailing list, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the nfs_file_direct_write function where the inode size is not updated correctly for AIO writes. The patch adds a new parameter to the nfs_direct_complete function to indicate whether it is called for a write operation. If it is called for a write, it updates the inode size based on the position of the write. This ensures that the inode size is correctly updated for AIO writes.

The patch also updates the calls to nfs_direct_complete in nfs_direct_read_completion, nfs_direct_read_schedule_iovec, nfs_direct_write_schedule_work, and nfs_direct_write_complete to pass the correct value for the write parameter.

Overall, this patch addresses a bug and improves the correctness of the nfs_file_direct_write function. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a problem where WRITE_SAME commands are failed with -EPERM when the SG_IO ioctl() is executed without CAP_SYS_RAWIO capability. The patch adds the WRITE_SAME commands to the blk_default_cmd_filter write_ok list, allowing the SG_IO ioctl to finish successfully.

The problem can be reproduced with the sg_write_same command, which fails with -EPERM when executed without CAP_SYS_RAWIO capability. However, after applying the patch, the sg_write_same command can be executed successfully even without CAP_SYS_RAWIO capability.

The patch has been reviewed by Christoph Hellwig and signed-off by Mauricio Faria de Oliveira, Brahadambal Srinivasan, and Jens Axboe.

The patch also provides links to QEMU and libvirt documentation, indicating that this issue is observed in QEMU KVM guests with 'scsi-block' devices. In this scenario, when a filesystem performs zero-out calls, which are translated to write-same calls in the guest kernel, and then into SG_IO ioctls to the host kernel, SCSI I/O errors may be observed in the guest. This patch addresses this issue.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a null-pointer dereference and kernel panic that occurs when the firewire-sbp2 module is removed before a login operation to a target completes. The patch cancels pending work for each unit in sbp2_remove(), ensuring that there are no extra references preventing the module from unloading. This fix has been tested and confirmed to resolve the crash. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the bridge device incorrectly re-injects STP (Spanning Tree Protocol) packets to the Rx path. The current implementation sets skb->dev to the bridge device, which breaks the kernel's STP functionality as all STP packets appear to originate from the bridge device itself.

The patch addresses this issue by learning the packet's source MAC address and injecting it back to the Rx path for further processing by the packet handlers. This ensures that the netfilter's behavior is consistent with regards to packets destined to the Bridge Group Address, regardless of whether STP is enabled or not.

The patch also includes a fix for a potential use-after-free issue that was previously addressed in commit 8626c56c8279.

Overall, this patch improves the functionality and consistency of the bridge device's handling of STP packets. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch reverts a previous commit that caused a regression on the GeekBox and Banana Pi M1 boards when connected to a real transceiver instead of a switch via fixed-link. The patch removes the changes made to the stmmac_mdio_register() function in stmmac_mdio.c and the stmmac_probe_config_dt() function in stmmac_platform.c. It also removes the mdio_node member from the plat_stmmacenet_data structure in stmmac.h.

Based on the provided information, it seems that the previous commit caused issues on specific hardware configurations, and reverting it would resolve those issues. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch removes a test that calls the DRBG with an uninitialized DRBG cipher handle. This test is considered inappropriate as it tries to generate random numbers before initialization. The checks verifying for an initialized DRBG have already been removed in previous patches. Therefore, removing this test is consistent with the previous changes and improves the code by removing unnecessary checks.
true || ACK

This patch fixes the PCI config address passed to DDW RTAS calls in the powerpc/pseries/iommu.c file. The previous commit replaced the PE address with the PCI config address to remove the dependency on EEH struct in the DDW mechanism. However, the PCI config address format provided by the patch ("xxxxBBSS") is not accepted by the firmware (pHyp or QEMU) according to the PAPR spec. The firmware expects the format "xxBBSSxx". 

The patch corrects the PCI config address format by shifting the bus number and device function number appropriately. This ensures that the correct PCI config address is passed to the DDW RTAS calls.

The patch has been tested and reported by Guilherme G. Piccoli. It also has the necessary Fixes and Cc tags for stable releases.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a build issue in the mc13xxx regulator module. The symbols "mc13xxx_get_num_regulators_dt" and "mc13xxx_parse_regulators_dt" were not being exported, causing the allmodconfig build to fail on sparc64. The patch adds the necessary EXPORT_SYMBOL_GPL statements to export these symbols, resolving the build issue.

The patch has been reviewed and signed-off by David S. Miller and Mark Brown, who are both reputable contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the usbip vudc driver where the already_seen flag is not cleared for ep0. This bug can cause a timeout error when setting configuration on the host side. The patch correctly clears the already_seen flag for ep0 separately from the other endpoints. The fix has been tested and has been Acked by Shuah Khan. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where MTU probing initialization was not occurring properly when setting the MSS (Maximum Segment Size) in a TCP repair. The patch adds a call to tcp_mtup_init() function when setting the MSS, ensuring that MTU probing is reinitialized correctly.

The patch also modifies the tcp_repair_options_est() function to take a generic sock pointer instead of a tcp_sock pointer. This allows the function to be used with any type of socket, not just TCP sockets.

Overall, this patch addresses a bug and improves the functionality of TCP repair. It does not introduce any new issues or regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch changes the variables `maxlen` in the functions `gfs2_extent_length` and `gfs2_bmap_alloc`, as well as in the function `gfs2_block_map`, from `unsigned int` to `size_t`. This change is necessary for very large files where the variables may get shifted to all 0's when using 32-bit arithmetic.

Changing these variables to `size_t` allows for 64-bit arithmetic, which is required for handling very large files, such as 1PB.

The patch also updates the function signatures and variable declarations accordingly.

Overall, this patch improves the compatibility and correctness of the code when dealing with large files, and therefore should be accepted in Linux -stable releases.
true || ACK

This patch adds a limit to the maximum number of indirect extents that can be followed in a row in the UDF filesystem. Without this limit, the udf_next_aext() function could potentially loop forever for a corrupted filesystem. The patch introduces a new macro, UDF_MAX_INDIR_EXTS, which is set to 16. If the number of indirect extents exceeds this limit, an error message is printed and the function returns -1.

This patch is important for maintaining the stability and reliability of the UDF filesystem. By limiting the number of indirect extents that can be followed, it prevents potential infinite loops and ensures that the filesystem can handle corrupted scenarios gracefully.

The patch has been reviewed by multiple developers and has received the necessary sign-offs. It also includes an updated changelog, limit, and style improvements.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch updates the set_discard_limits() function in the dm thin driver to properly align the discards that are sent to the DM thin device on a full block boundary. It sets the discard_granularity to the maximum value between the underlying data device's discard_granularity and the thin-pool's block size.

This change ensures that each discard will cover an entire DM thin-pool block, allowing the block to be reclaimed. The patch also includes a reported-by tag and signed-off-by tags from the authors.

Based on the provided information, this patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a panic issue in the mvsas driver when encountering an expander attached ATA device. The analysis shows that the driver assumes all ATA devices are locally attached and obtains the phy mask by indexing the local phy table. However, this causes an overflow when dealing with expanders that have more phys than the HBA, resulting in a pointer to rubbish.

The patch mirrors the behavior of mvs_task_prep_ssp() in mvs_task_prep_ata() by using the port properties to obtain the phy mask. This fixes the panic issue.

The patch has been reported and tested by Adam Talbot. It is also CC'd to the stable mailing list, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug introduced by a previous commit in the pci_restore_state() function. The previous commit treated all PCI devices as having Type 0 configuration headers, which is not correct because Type 1 and Type 2 headers have different layouts.

The patch modifies the pci_restore_config_space() function to only retry the restoration of BARs for Type 0 config headers. This ensures that the function behaves as before the previous commit for all header types except for Type 0.

The patch also includes a Tested-by tag and is signed-off by the relevant developers.

Based on the provided information, the patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch is adding a necessary programming of the CSMSADRCFG register in the ARM PXA3xx platform. Without this patch, devices wired to DFI and accessed through SMC cannot be accessed after resume from S2. The patch also mentions that relying on the boot loader to program the CSMSADRCFG register is not recommended.

The patch has been reviewed and Acked-by Eric Miao, indicating that it has been reviewed and approved by another developer.

The patch is adding the necessary programming of the CSMSADRCFG register in the smemc_init() function, which is called during initialization. The register is set to the value 0x2, as specified in the documentation.

Based on the information provided, it is clear that this patch is necessary to achieve the correct behavior of the Static Memory Controller and to ensure proper access to devices after resume from S2. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the UCB1x00 gpio output data is not restored correctly after a resume. The missing register write is added to restore the UCB1x00 gpio output data. This patch is necessary to ensure correct GPIO output data after a resume. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch allows exiting system management mode from 64-bit mode. The code already supports exiting from compat mode, and getting from 64-bit mode to real mode only requires clearing CS.L and CR4.PCIDE. The patch also handles the case when the vCPU supports long mode.

The patch has been tested and fixes a specific issue (Fixes: 660a5d517aaab9187f93854425c4c63f4a09195c). It has also been reviewed by other developers (Cc: Radim Krčmář <rkrcmar@redhat.com>) and has a Tested-by tag from Laszlo Ersek <lersek@redhat.com>.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the madvise_free_huge_pmd function where the fallback PTE operations are skipped after splitting a transparent huge page (THP) successfully. The patch correctly makes the function return 0 after splitting the THP, ensuring that the fallback PTE operations will be done.

The patch has been reviewed and Acked-by Minchan Kim, indicating that it has been reviewed and approved by another kernel developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the PCI versatile host bridge driver where it does not remove the PCI IO resource from the host bridge resource windows if the pci_remap_iospace() call fails. This can lead to the kernel considering the PCI IO resource valid and assigning it to downstream devices, even if the memory addresses cannot be mapped into the CPU virtual address space.

The patch addresses this issue by destroying the PCI host bridge PCI IO resources retrieved through firmware when the pci_remap_iospace() function call fails. This prevents the kernel from adding the respective PCI IO resource to the list of PCI host bridge valid resources, fixing the issue.

The patch also includes a fix for a warning message that is printed when the pci_remap_iospace() function fails.

Overall, this patch addresses a bug and improves the behavior of the PCI versatile host bridge driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the regmap cache where the last register block in a specified range is not handled correctly. The formula used to calculate the number of registers to be synced is incorrect, resulting in either syncing too few or too many registers. This patch updates the code to correctly calculate the number of registers that need to be synced.

The issue was introduced in commit ac8d91c, and this patch provides a clear fix for the problem.

The patch has been reviewed and signed-off by Lars-Peter Clausen and Mark Brown, who are both recognized contributors to the Linux kernel.

Considering the nature of the bug and the clear fix provided by the patch, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the handling of vmalloc addresses in the powerpc specific nx-842 compression driver. Currently, the driver uses __pa() for all addresses, which does not properly handle vmalloc addresses and causes a failure when a proper physical address is not passed to the hypervisor.

The patch adds a routine to convert an address to a physical address by checking for vmalloc addresses and handling them properly. It introduces a new function `nx842_get_pa()` that checks if the address is a vmalloc address using `is_vmalloc_addr()` and then converts it to a physical address using `page_to_phys()` and `offset_in_page()` functions. If the address is not a vmalloc address, it falls back to using `__pa()`.

The patch also updates the usage of `__pa()` in the `nx842_build_scatterlist()`, `nx842_compress()`, and `nx842_decompress()` functions to use the new `nx842_get_pa()` function.

Overall, this patch improves the handling of vmalloc addresses in the nx-842 compression driver and ensures that the proper physical address is passed to the hypervisor. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch replaces the use of structure assignments with the standard timer API functions setup_timer and mod_timer. This is considered a best practice for setting and updating timers in the Linux kernel.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug and a WARN_ON in the dummy-hcd driver. The bug was a NULL pointer dereference and the WARN_ON was caused by changes to the UDC core framework.

The patch ensures that the UDC is stopped after the gadget driver is unbound, preventing a NULL pointer dereference. It also removes a sysfs attribute file attached to the gadget before the UDC is deleted, as required by the UDC framework.

The patch has been reviewed and signed-off by Alan Stern and Felipe Balbi. It is also marked for stable release.

Based on the analysis, the patch appears to fix a bug and improve the stability of the dummy-hcd driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a sign type error in the genphy_config_eee_advert function in the phy_device.c file. The return value of phy_read_mmd_indirect is checked to know if the register could be accessed, but the result is assigned to a 'u32' instead of an 'int'. Changing it to 'int' will correctly get errors from phy_read_mmd_indirect.

The patch also includes the Fixes tag, indicating that it addresses a specific issue. It has been reported by Julia Lawall and signed-off by Jerome Brunet and David S. Miller.

Based on this information, the patch appears to be a valid fix for a sign type error and should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the transmission fails on a Sierra Wireless MC7710 device when the NTBs are padded to the maximum size. The patch ensures that a ZLP (Zero Length Packet) is sent when the NTB length is exactly dwNtbOutMaxSize and is an exact multiple of wMaxPacketSize. This is necessary because normally, ZLPs are avoided by padding NTBs with a zero byte if the NTB is shorter than dwNtbOutMaxSize.

The patch also adds the FLAG_SEND_ZLP flag to the cdc_mbim_info structure, indicating that ZLPs should be sent.

Overall, this patch addresses a specific issue and improves the behavior of the cdc_mbim driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression in the pinctrl-abx500 driver where the driver fails when Device Tree (DT) is enabled. The patch modifies the probe() function to attempt to extract a platform ID from DT if it cannot be sourced from platform data. The patch also removes unnecessary checks for platform data and DT, as a pointer to GPIO platform data is always passed to the driver now.

The changes in the patch are logical and address the regression in the driver. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch enables the vsync interrupt while waiting for vblank in the drm/exynos driver. It properly enables and disables interrupts and uses the drm_vblank_get and drm_vblank_put functions to manage the vblank reference count. This patch improves the functionality and reliability of the driver, so it should be accepted in Linux -stable releases.
true || ACK

Based on the patch description and code changes, it appears that this patch is dropping a workaround for a specific issue related to Voltage not getting dropped to Vmin when Gfx is power gated for the latest VLV revision. The patch checks the device revision and if it is the latest VLV revision (revision >= 0xd), it sets the RPS (Render Power State) to the minimum frequency soft limit using the valleyview_set_rps() function.

The patch has been reviewed and signed-off by multiple developers, indicating that it has gone through the necessary review process.

Therefore, based on the information provided, it seems reasonable to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the timestamp is not set as the last element in the channel specification for the adis16400 driver. This can lead to incorrect interpretation of data by userspace code reading the layout of the buffer via sysfs, potentially causing corruption.

The patch adds a new channel, ADIS16400_SCAN_TIMESTAMP, and sets it as the last element in the channel specification for all relevant adis16xxx drivers.

The patch has been reviewed and Acked-by Lars-Peter Clausen. It also includes the stable@vger.kernel.org mailing list in the Cc field, indicating that it is suitable for inclusion in stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a call to regcache_cache_only() before disabling the regulator in the wm8962 driver. This is done to ensure that the regcache_cache_only flag is turned on before disabling the regulator, and then turned off after enabling the regulator. This is a safer approach as it prevents any potential issues that may arise if the cache_only flag is not set correctly.

Additionally, this patch also fixes a potential failure when running the 'amixer cset' command before wm8962_resume().

The patch has been reviewed and signed-off by the relevant developers, and it is also marked for stable release.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the usage of exit() function in the hv_kvp_daemon.c file in the tools/hv directory. The patch replaces the usage of exit(-1) with exit(EXIT_FAILURE), which is a portable value for indicating failure. This change ensures that the correct exit code is used and avoids potential confusion with the reserved exit code 255, which is usually used for reporting 'command not found' errors.

The patch also includes the necessary Signed-off-by tags and is marked for stable release.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a GPF (General Protection Fault) caused by a line discipline that does not define a receive_buf() method. The previous commit already fixed this issue, but it did not address the problem in the tty_ldisc_receive_buf() function.

The patch modifies the tty_ldisc_receive_buf() function to check if the line discipline has a receive_buf() method before calling it. This ensures that the method is only called when it is defined, preventing the GPF.

The patch also includes the necessary Cc and Signed-off-by tags.

Based on the information provided, it seems that this patch is a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ocfs2_file_aio_write() function where the rw lock is not unlocked if the ocfs2_inode_lock() fails. This can cause a bug in ocfs2_lock_res_free() when testing res->l_ex_holders. The patch adds a goto statement to unlock the rw lock before exiting the function if ocfs2_inode_lock() fails.

The patch has been reviewed and Acked-by Sunil Mushran. It has also been signed-off by Joseph Qi, Andrew Morton, and Linus Torvalds.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a reported issue where the GRO L2 header check fails on IB/ipoib traffic. The patch makes the L2 header check more generic by taking into account the hard_header_len instead of assuming a fixed L2 header size of 14 bytes.

The patch introduces a new variable "maclen" which stores the value of skb->dev->hard_header_len. If maclen is equal to ETH_HLEN (Ethernet header length), then the existing comparison function compare_ether_header is used. Otherwise, if maclen is not zero, a memcmp is performed to compare the L2 headers.

The patch has been tested and reviewed by multiple individuals, including the original reporter of the issue. Therefore, it can be considered safe and suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a mis-merge in the gmap handling code for the s390 architecture. The commit 1e133ab296f3 dropped some changes from commit a3a92c31bf0b, which caused KVM to fail for certain memory sizes (exactly 2GB). The patch correctly updates the gmap_map_segment function to fix the issue.

The patch has been reviewed and Acked-by Heiko Carstens. It also has the Signed-off-by tags from Christian Borntraeger and Paolo Bonzini.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a check for port PM availability in the amdgpu driver. The patch correctly handles the case where the ATPX method does not exist on the dGPU and may be located on the iGPU. It enables the legacy PM method only if the parent device of the iGPU is the root port for which bridge_d3 is false. This prevents conflicts with port PM and allows the dGPU to power on correctly.

The patch has been reported and tested by Mike Lothian and has been signed-off by Peter Wu and Alex Deucher. It also includes a Cc to the stable mailing list, indicating that it should be considered for inclusion in stable releases.

The patch modifies the amdgpu_atpx_pci_probe_handle() and amdgpu_atpx_detect() functions in the amdgpu driver.

Based on the provided information, the patch appears to be a valid fix for the reported issue and should be accepted in Linux -stable releases.
true || Based on the provided information, I would recommend accepting the patch in Linux -stable releases (ACK).

The patch reverts a previous commit that introduced a bug causing booting issues on a custom AT91RM9200 board. The issue was identified as a boundary check problem when reusing static mapping. The patch provides a detailed explanation of the problem and how it occurs.

The debugging information reveals that the if condition in the code fails, leading to incorrect mapping assumptions. The original premise of the previous fix patch was also found to be wrong. The patch correctly reverts the changes made by the previous commit, resolving the booting issue.

Additionally, the patch has been Acked-by Nicolas Pitre, indicating that it has been reviewed and approved by another expert in the field.

Therefore, based on the provided information and the expert's approval, I would recommend accepting the patch in Linux -stable releases (ACK).
true || ACK

This patch modifies the `cvm_oct_napi_poll` function in the `staging/octeon/ethernet-rx.c` file. It adds a line of code to increment the `rx_count` variable, which counts the number of received packets.

The patch is beneficial because it ensures that dropped packets are also counted, preventing the NAPI handler from running for too long. By including dropped packets in the budget calculation, the NAPI handler can better manage its workload and avoid potential performance issues.

The patch has been reviewed and Acked-by Jason A. Donenfeld and Signed-off-by Aaro Koskinen and Greg Kroah-Hartman, indicating that it has undergone peer review and is considered suitable for inclusion in the Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a potential lost wakeup scenario in the staging driver for the Quatech USB2 serial device. Currently, when a usermode application performs an ioctl using TIOCMIWAIT, the code sets the current task state to TASK_INTERRUPTIBLE and waits for a wakeup from the qt2_process_modem_status function on URB completion. However, there is a race condition between the loop in qt2_ioctl(TIOCMIWAIT) and the URB completion, which can result in a lost wakeup scenario. This means that the usermode application's task may continue to sleep despite a change in the modem status.

The patch addresses this issue by adding a barrier to ensure proper ordering of memory accesses, and by setting the current task state to TASK_INTERRUPTIBLE before entering the loop. Additionally, the patch sets the task state to TASK_RUNNING before returning from the loop in case of no change or successful completion.

Given the potential impact on the functionality of the Quatech USB2 serial device and the fix provided by the patch, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch improves the power management (PM) runtime and phy handling for the omap2430 glue layer in the musb driver. It simplifies the code by allowing idling of both MUSB and PHY when nothing is configured. It also adds a warning if the PHY is not configured.

The changes in the patch include:
- Returning early from PM runtime if musb is not yet initialized.
- Initializing the PHY before enabling runtime PM for the musb parent.
- Powering on the PHY in the omap2430_musb_enable function.
- Powering off the PHY in the omap2430_musb_disable function.
- Cleaning up the PHY and cancelling the mailbox work in the omap2430_musb_exit function.
- Unregistering the platform device and setting power to false in the omap2430_remove function.
- Handling runtime suspend and resume in the omap2430_runtime_suspend and omap2430_runtime_resume functions.

These changes improve the power management and ensure proper handling of the PHY in the omap2430 glue layer. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes the VCE ring test for Big-Endian systems by ensuring that every write to the ring is translated to little-endian. The patch has been reviewed and signed-off by Christian König and Oded Gabbay. It also includes the stable tag, indicating that it should be considered for inclusion in Linux -stable releases.

The changes in the patch are straightforward and address a specific issue related to Big-Endian systems. The patch modifies the existing code to use the cpu_to_le32() function to convert the values to little-endian before writing them to the ring. This ensures that the code works correctly on Big-Endian systems.

Based on the information provided, the patch appears to be necessary and well-tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a new function called get_random_long() to the drivers/char/random.c file. This function is similar to get_random_int() but returns an unsigned long instead of an unsigned int. The patch also fixes the shifting constant in mmap_rnd() to be an unsigned long, ensuring that values greater than 31 bits generate an appropriate mask without overflow.

The addition of get_random_long() is necessary because the commit d07e22597d1d introduced the ability to choose from a range of values for entropy count in generating the random offset to the mmap_base address. This range can exceed the 32 bits of randomness provided by get_random_int(), especially on x86 systems. Therefore, the new function get_random_long() is needed to provide the required randomness.

The patch also replaces calls to get_random_int() with get_random_long() where appropriate.

Overall, this patch improves the functionality and correctness of the randomization mechanism in the Linux kernel. It has been reviewed and Acked-by several developers, including Kees Cook and Theodore Ts'o.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the xfs_sb_quota_from_disk function in the xfs_sb.c file. The issue occurs when calling the function twice in a row on a V4 superblock, which leads to setting both pquotino and gquotino to NULLFSINO. The patch makes it safe to call the function twice and removes the extra calls to libxfs_sb_quota_from_disk.

The patch has been reviewed and tested, and it addresses a specific issue that can be encountered when running xfstests with "-m crc=0". Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the irq_domain_add() function by splitting the check for irq_data == NULL and having a separate warning for it. The patch also adds a check for d->domain to prevent adding an irq_domain to an irq descriptor that already has a domain assigned to it.

The patch has been reviewed and signed-off by multiple developers, including Rob Herring and Thomas Gleixner. It also includes a link to the original discussion on the Linux kernel mailing list.

Based on the provided information, it appears that the patch addresses a valid issue and has been reviewed by relevant experts. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch resolves an issue with an infinite loop in the Exynos drm driver when using a multi-platform kernel. It registers the Exynos drm device object only in the case of Exynos SoC, which prevents the infinite loop. The patch is temporary and will be replaced with a more generic solution in the future.

The patch is specific to the Exynos drm driver and does not affect other parts of the Linux kernel. It addresses a specific issue and does not introduce any new functionality or regressions. Therefore, it is safe to include in Linux -stable releases.
true || ACK

This patch fixes two audio bugs in the hdpvr driver. The first bug is related to changing the audio encoding, which inadvertently changes the input as well. The second bug is introduced in kernel 3.10 and breaks the handling of the default_audio_input module option. Additionally, the patch fixes a small typo in the code.

The patch has been reviewed and signed-off by the relevant developers. It also includes a stable tag, indicating that it should be considered for inclusion in -stable releases.

Based on the provided information, it appears that the patch addresses valid bugs and has been properly reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the trace_marker functionality where it was adding the trace mark to the global trace buffer instead of the instance's buffer. The patch correctly assigns the instance's buffer to the 'buffer' variable, ensuring that the trace mark is added to the correct buffer.

The patch has been reviewed and tested by multiple individuals, including the original author and the stable maintainers. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch removes a duplicate call to the function iscsit_increment_maxcmdsn() for ISER_IB_RDMA_WRITE within the functions isert_map_rdma() and isert_reg_rdma_frwr(). The duplicate call is unnecessary because the function iscsit_increment_maxcmdsn() is already called once during the isert_put_datain() -> iscsit_build_rsp_pdu() operation.

Additionally, the patch removes the assignment and increment of the local variable conn->stat_sn, and changes the third parameter of the function iscsit_build_rsp_pdu() to indicate that it should be done by the iscsi_target_mode code.

The patch has been tested and has a Tested-by tag from Moussa Ba <moussaba@micron.com>. It also has a Cc tag for the stable@vger.kernel.org mailing list, indicating that it is suitable for stable releases starting from v3.10+.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the radeon driver that disables the render backends of the shader engines for SI (Sea Islands) and CIK (Caribbean Islands) GPUs. Enabling the other render backends significantly improves performance, as demonstrated by the increase in frame rate from 15 fps to 90 fps in Unigine Sanctuary on Bonaire GPU.

The patch modifies the functions cik_get_rb_disabled() and cik_setup_rb() in the drm/radeon/cik.c file, as well as the functions si_get_rb_disabled() and si_setup_rb() in the drm/radeon/si.c file. The changes ensure that all render backends are properly enabled for the specified GPU families.

The patch has been reviewed and signed-off by the relevant developers. It also includes the necessary Cc to the stable@vger.kernel.org mailing list for consideration in -stable releases.

Based on the provided information, it is clear that this patch fixes a performance issue and improves the functionality of the radeon driver for SI and CIK GPUs. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a long-standing bug in the USB DWC3 gadget driver. It ensures that the controller's lock is released before calling the gadget API function pointers during gadget resume. This is a requirement to prevent potential issues and improve the stability of the USB functionality.

The patch includes proper checks to ensure that the gadget driver and the resume function pointer are valid before releasing and acquiring the spin lock. This ensures that the code is safe and does not introduce any new issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the video driver code. If the function of_parse_display_timing() fails, the error path is taken but the memory allocated for "dt" is not freed. This can lead to a memory leak. The patch adds the missing kfree() call to free the memory in the error path, preventing the leak.

The patch has been reviewed and signed-off by Sudip Mukherjee and Tomi Valkeinen, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || NAK

Based on the information provided in the patch, it is recommended to not accept this patch in Linux -stable releases. The patch is reverting a previous commit that claimed throughput improvement for MSC/UVC, but the measurements show no significant improvement. Additionally, the patch introduces regressions such as breaking the ASIX usb-ethernet dongle on UDP RX and causing console log flooding with error messages when unplugging a 3G modem. Therefore, it is best to revert this patch to avoid these regressions.
true || ACK

This patch fixes a regression introduced in the previous patch (commit 788f7a56fce1bcb2067b62b851a086fca48a0056) for the iwl4965 driver. The previous patch broke rfkill notification to user-space. The fix in this patch is to reset the firmware after rfkill off, and also to set the rfkill hardware state. This ensures that the rfkill functionality works correctly.

Since this patch addresses a regression and fixes a bug, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a deadlock issue that occurs when the pipe A force quirk is applied in the intel_modeset_gem_init() function. The patch replaces the use of drm_modeset_lock_all() with a mutex lock on mode_config.mutex, which is sufficient to avoid the deadlock.

The regression was introduced in a previous commit, and this patch addresses the issue by modifying the code in intel_modeset_gem_init().

The patch has been reviewed and signed-off by the relevant developers, and it also includes a cc: stable tag, indicating that it should be considered for inclusion in Linux -stable releases.

Therefore, based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the xmon data-breakpoint feature in the powerpc architecture. Currently, when a watchpoint match occurs, the hw_breakpoint_handler is called by do_break via notifier chains mechanism. However, if the watchpoint is registered by xmon, the hw_breakpoint_handler does not find any associated perf_event and returns immediately with NOTIFY_STOP. This causes do_break to also return without notifying xmon.

The patch solves this issue by returning NOTIFY_DONE when hw_breakpoint_handler does not find any perf_event associated with the matched watchpoint, rather than NOTIFY_STOP. This ensures that the core code continues calling the other breakpoint handlers, including the xmon one.

The patch is also marked for stable@vger.kernel.org, indicating that it is suitable for inclusion in Linux -stable releases.

Based on the provided information, it appears that the patch correctly addresses the bug and improves the functionality of the xmon data-breakpoint feature. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a deadlock issue in the IMA (Integrity Measurement Architecture) module. The patch replaces the usage of `file->f_path.dentry` with the `file_dentry()` function, which ensures that the overlayfs dentry is used correctly without causing a deadlock.

The patch has been reported by Krisztian Litkey and signed-off by Miklos Szeredi. It also includes the appropriate Cc to the stable mailing list and relevant individuals.

Given that the patch addresses a known issue and has been reviewed and tested, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an error path in the icmp6_dst_alloc() function in the ipv6/route.c file. The error path was not properly converted in a previous commit, which could lead to crashes in mld_sendpack(). The patch adds a return statement with an error code (-ENODEV) to handle the case when idev is NULL. This ensures that the function returns an error pointer instead of NULL, preventing potential crashes.

The patch has been reported by Dave Jones and signed-off by Eric Dumazet and David S. Miller, indicating that it has been reviewed and tested by multiple individuals. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || NAK

Based on the provided patch and the information provided, it seems that the patch is causing a regression in booting on the netwinder platform. The patch is removing the call to "pci_ioremap_io(0, DC21285_PCI_IO)" which is causing overlapping PCI mappings and resulting in a kernel BUG.

Since the patch is causing a regression and breaking the boot process, it should not be accepted in Linux -stable releases.
true || ACK

This patch fixes a problem introduced by commit b685d3d65ac7, which removed the REQ_SYNC flag from WRITE_FUA and WRITE_PREFLUSH definitions. As a result, when the storage doesn't report volatile write cache, the write operation becomes asynchronous, leading to potential performance regressions.

The patch ensures that all bios that are synchronous are properly marked with the REQ_SYNC flag. It modifies the write_dev_supers() function to include the REQ_SYNC flag when submitting bios for write operations. It also modifies the write_dev_flush() function to include the REQ_SYNC flag when setting the bi_opf field of the bio structure.

By explicitly marking bios as synchronous with the REQ_SYNC flag, this patch ensures that the write operations are treated as synchronous, even when the storage doesn't report volatile write cache. This prevents potential performance regressions and improves the overall stability and reliability of the btrfs filesystem.

The patch has been reviewed by Liu Bo and signed-off by Jan Kara and David Sterba. It also includes the necessary Fixes tag to reference the commit that introduced the problem.

Therefore, based on the analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the iio dummy driver where the IRQ handler was not returning IRQ_WAKE_THREAD, causing the threaded handler to not be called. By returning IRQ_WAKE_THREAD, the threaded handler will be awakened and called, ensuring that the events are properly processed and delivered to userspace.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and found to be correct.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a missing call to pci_set_master() in the kdump path of the hpsa driver. The previous patch "hpsa: refine the pci enable/disable handling" did not include this call, which is necessary for proper device initialization. The patch has been reviewed and tested by Robert Elliott, and signed-off by Tomas Henzl and Christoph Hellwig. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the NVMe device driver where the DMA alignment for the PRP entries does not match the device's page size. This can lead to a BUG_ON condition in nvme_setup_prps() when the DMA length is a multiple of 4K but not 8K.

The patch addresses this issue by defaulting the NVMe device page size to 4K, which matches the IOMMU's page size on Power architecture. This is a stop-gap fix until an API and implementation can be added to obtain the IOMMU's page size across all architectures.

The patch has been tested and shown to resolve the bug, preventing the kernel from crashing. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds an error check to handle the return value of devm_ioremap. If devm_ioremap fails and returns NULL, the patch returns -ENOMEM, preventing a potential NULL pointer dereference in the kernel. This is a necessary fix to avoid a potential crash or instability in the system. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a cut and paste error in the spc_emulate_evpd_b3() function in the target_core_spc.c file. The error was causing the lba_map_segment_size to be used twice for the Referrals VPD. The patch correctly sets the user data segment multiplier instead of the user data segment size.

The patch has been signed-off by Sebastian Herbszt <herbszt@gmx.de> and Nicholas Bellinger <nab@linux-iscsi.org>, who are both recognized contributors to the Linux kernel.

The patch modifies the spc_emulate_evpd_b3() function by replacing the put_unaligned_be32() call at offset 12 with put_unaligned_be32(dev->t10_alua.lba_map_segment_multiplier, &buf[12]).

Based on the analysis, it appears that the patch is a valid fix for the cut and paste error and does not introduce any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the sysfs reports the cable as present even though there is no link. By marking the link as down on startup and letting the PHY interrupt deal with carrier changes, the sysfs will accurately report the link status.

The patch has been tested on a Beagle XM and has been reviewed and Acked by Steve Glendinning. It has also been signed-off by Paolo Pisati and David S. Miller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the devm_kzalloc function in devfreq's statistics data structure was using the parent device as the dev allocated for. This caused a memory leak when the devfreq device was disabled in run-time. 

The patch resolves this issue by designating the devfreq device pointer more precisely when allocating memory. It uses the devfreq device pointer instead of the parent device pointer.

This change ensures that the allocated memory is properly freed when the devfreq device is disabled, preventing memory leaks.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug in the ALSA USB audio driver for the MAYA44 USB(+) device. The driver was aborting parsing too early, which resulted in missing input volume controls. The patch moves the check for the descriptor error after parsing the unit's input pins, ensuring that the capture mixer controls are not missing. The patch has been reported and tested by the user nightmixes, and it has been signed-off by the maintainers Clemens Ladisch and Takashi Iwai. The patch also includes a Cc to the stable mailing list, indicating that it is suitable for inclusion in stable releases. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch addresses a bug where the command response is processed before the SCAN report event during extended scan, leading to a crash. The patch ensures that the driver's main thread gives priority to events over command responses by moving the event processing code before the command response processing code.

The patch has been reviewed and signed-off by multiple developers from Marvell and John W. Linville, who is a well-known maintainer of the wireless subsystem in the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a crash issue on AMD Trinity systems when running as Xen Dom0. It stubs out MSR methods that are not needed, which resolves the crash. The patch has been reported by Andre Przywara and has been signed-off by H. Peter Anvin.

The patch is a small fix that addresses a specific issue and does not introduce any new functionality or changes. It is a safe and targeted fix for a known problem. Therefore, it is suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a bug in the PCI subsystem related to IOV resource sorting by alignment requirement. The current code iterates over the whole list of resources, which is unnecessary and inefficient. The patch terminates the loop when it finds the first smaller resource in the head list, which is the correct behavior.

The patch has been tested and fixes the issue as described. It also includes a proper Fixes tag and is signed-off by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced in the 3.9-rc1 release where the USB connection does not work properly when the g_ether module is loaded. The patch corrects the readiness check in the omap_musb_mailbox function by properly checking if the musb core is ready before proceeding. The patch also includes proper error handling if the musb core is not yet initialized. Overall, this patch addresses a major regression and improves the functionality of the USB driver on omap2430 platforms. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the vc4 driver by correctly calling the drm_atomic_helper_crtc_destroy_state() function instead of the __drm_atomic_helper_crtc_destroy_state() function. The patch also includes the necessary Fixes tag and is CC'd to the stable mailing list, indicating that it is a stable fix.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a crash in the iic_setup_cpu() function in the powerpc/cell platform. The conversion from __get_cpu_var() to this_cpu_ptr() was incorrect, causing an oops at boot. The patch correctly uses the per-cpu address of struct cpu_iic instead of cpu_iic.regs->prio. The fix has been tested and is signed-off by the author. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the brcmfmac driver where the brcmf_sdio_fromevntchan() function was being called on the data frame instead of the software header. This caused some frames to be mischaracterized as on the event channel rather than the data channel, leading to dropped packets and a major performance regression.

The patch has been tested and verified to fix the issue, with the download speed jumping from 1Mbit/s back up to 40MBit/s due to the sheer amount of packets being incorrectly processed.

The patch also includes the necessary Fixes and Signed-off-by tags, as well as an Acked-by tag from a Broadcom developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer exception in the extcon-max8997 driver when platform data is not supplied. The driver was dereferencing the pdata pointer without checking if it is NULL, which could lead to a crash. 

The patch adds a check for pdata before accessing the muic_pdata field, ensuring that the driver does not crash when platform data is not provided.

The patch also includes the necessary Signed-off-by and Fixes tags, indicating that it has been reviewed and tested by the author and it fixes a specific commit.

Considering the nature of the fix and the proper inclusion of the necessary tags, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM ioapic code related to the handling of the rtc_status.pending_eoi variable. The patch adds a check to ensure that pending_eoi does not become negative, and if it does, it calls a function to recompute the correct dest_map and pending_eoi values.

The patch also adds a comment explaining the behavior of the code and the reason for the check.

Overall, the patch improves the robustness of the KVM ioapic code and prevents potential bugs and crashes. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Reasoning:
The patch reverts a previous commit that was causing incorrect behavior and warnings on perfectly working systems/firmwares. The previous commit was capping the 'capacity_now' value to 'full_charge_capacity', which is incorrect. The 'capacity_now' value can increase above the 'full_charge_capacity' value due to different charging cycles and battery firmware updates. The warning message that was being printed if 'capacity_now' didn't match 'design_capacity' was also incorrect. Reverting the commit will fix the incorrect behavior and warnings.
true || ACK

Explanation: The patch fixes a bug in the mcb_probe() function by acquiring a reference to the probed device using get_device(). This is necessary because the function is actually using the device but was not acquiring a reference to it. This bug could lead to a panic, as reported by Andreas Werner. The patch has been tested by Andreas Werner and signed-off by Johannes Thumshirn and Greg Kroah-Hartman. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch corrects the number of PWM channels for the LPC32xx SoC from 2 to 1. The LPC32xx SoC has two independent PWM controllers, each with one output channel. The current code incorrectly sets that there is one PWM controller with two channels, which prevents separate configuration of different clock parents and gates for both PWM controllers.

The patch updates the PWM device node description to be compatible with this change. It modifies the `lpc32xx->chip.npwm` value from 2 to 1, indicating that there is only one PWM channel.

Based on the provided information, the patch appears to be a valid fix for the incorrect number of PWM channels and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a problem in the xhci-hcd's resume routine. It ensures that both root hubs are resumed when the controller is runtime-resumed. This prevents a race condition where the controller might be put back to sleep before it can activate its IRQ line, causing the wakeup condition to never be handled.

The patch also simplifies the logic in the xhci_resume function by combining some repeated flag settings into a single pair of statements.

The patch has been tested by Linus Torvalds and has been signed-off by Alan Stern and Greg Kroah-Hartman.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning in the drivers/of/platform.c file. The warning is related to an incorrect type in argument 2. The expected type is "restricted __be32 const [usertype] *addr" but the actual type is "unsigned int const [usertype] *[assigned] reg". 

The patch changes the type of the variable "reg" from "const u32 *" to "const __be32 *", which matches the expected type. This resolves the warning and ensures that the correct type is used in the code.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an unbalanced mutex in the dma_pool_create() function. The bug was introduced in the 3.16 kernel version. The patch correctly unlocks the mutex in the error case by setting the retval variable to NULL. This ensures that the mutex is properly released before returning from the function.

The patch has been reviewed and signed-off by Krzysztof Hałasa and Linus Torvalds. It is also marked for inclusion in the stable kernel releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression in the arm64 VDSO code related to coarse clock monotonicity. The issue was introduced in a previous commit and caused the VDSO to return timestamps that were older than the first obtained timestamp for the same clock ID.

The patch correctly updates the VDSO code to use the timekeeper object provided by the timekeeping core, instead of using the __current_kernel_time interface. This ensures that the VDSO returns accurate timestamps.

The patch has been reviewed and Acked by Will Deacon and signed-off by Nathan Lynch and Catalin Marinas, who are recognized contributors in the arm64 kernel development.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the module autoload does not work for the net driver when it is built as a module. The patch exports the module alias information using the MODULE_DEVICE_TABLE() macro, allowing user-space to match the registered device with the corresponding module.

The patch adds the MODULE_DEVICE_TABLE(of, b53_mmap_of_table) line, which populates the module alias information for the b53_mmap driver. This can be verified by checking the output of "modinfo drivers/net/dsa/b53/b53_mmap.ko | grep alias" before and after applying the patch.

Since this patch addresses a specific issue and improves the functionality of the net driver, it should be accepted in Linux -stable releases.
true || ACK

Explanation:
The patch fixes a bug where the i2c-hid driver crashes when it tries to power down the device after the command buffer has been released. The patch removes the call to i2c_hid_free_buffers() in the i2c_hid_stop() function, ensuring that the buffers are only freed when the i2c-hid driver itself is unloaded. This prevents the crash and improves the stability of the driver. The patch also includes the necessary Fixes and Signed-off-by tags, as well as the Reported-by and Reviewed-by tags, indicating that the bug was reported and reviewed by other developers. Overall, the patch is a straightforward fix for a known issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression that causes harm even after previous attempts to fix it. It flushes the PTEs after updating them before suspend, which is necessary when using WC updates of the PTEs. The patch also includes a bugzilla reference and has been tested and reviewed by multiple individuals. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the affinity mask of an IPI (Inter-Processor Interrupt) can be overwritten before the IPI is destroyed. This can lead to a crash when ipi_destroy() is called on a multi-cpu system. The patch sets the IRQ_NO_BALANCING flag to prevent the affinity from being overwritten by setup_affinity().

The patch has been tested and fixes the issue. It also includes the necessary Signed-off-by tags and references to the original bug report and discussion.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the acpi_find_child_device() function to prefer devices without ACPI/PNP device IDs over devices that have them. This is done to cover a special case where there are multiple devices with the same _ADR value in the same namespace scope. The current behavior of returning the first device found with the same _ADR value is not sufficient in this case, as some of the devices may have a _HID or _CID returning valid ACPI/PNP device IDs.

By preferring devices without ACPI/PNP device IDs, the patch ensures that the other device with the same _ADR value (that may not have a valid device ID) can be matched going forward. This change is considered a best effort solution, as it violates the ACPI specification.

The patch has been suggested by Mika Westerberg and signed-off by Rafael J. Wysocki. It has also been tested by Hans de Goede.

Based on the provided information, the patch appears to be a reasonable solution to handle the special case described. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the broken evtype mask in the arm64 kernel's perf_event.c file. The current mask does not include the NSH bit, which is necessary for profiling at EL2. The proposed patch updates the ARMV8_EVTYPE_MASK to include the NSH bit, allowing profiling at EL2.

Since this patch is a port of a previous fix for ARMv7, it is likely to be a valid and necessary fix for arm64 as well. Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the PM/QoS subsystem. The original behavior of freeing the notifiers pointer on qos->resume_latency is restored, which is used and fixes the kmemleak warning. The patch also includes the necessary Fixes tag and is signed-off by the relevant developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL-dereference issue in the usbvision driver. It checks the number of endpoints before accessing the endpoint array, preventing a NULL-pointer dereference or accessing memory beyond the endpoint array.

The patch also includes the "Fixes" tag, indicating that it addresses a specific issue introduced by commit 2a9f8b5d25be. This ensures that the patch is targeted at fixing a known problem.

Additionally, the patch includes the "Cc: stable" tag, indicating that it should be considered for inclusion in stable releases. This suggests that the patch has been reviewed and deemed suitable for backporting to older kernel versions.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation:
The patch removes the enable_lock spinlock in the imx-tve driver. The enable_lock spinlock is claimed to serialize tve_enable/disable calls, but it is unnecessary because DRM already serializes mode sets with a mutex. Additionally, holding a spinlock while calling clk_prepare_enable() is incorrect and can cause a might_sleep() warning. Therefore, removing the enable_lock spinlock is the correct approach.

The patch has been reviewed and Acked by Sascha Hauer, which indicates that it has already been reviewed and approved by another developer.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch modifies the stk_camera_read_reg() function in the stk-webcam driver. It replaces the stack-allocated buffer with a dynamically allocated buffer using kmalloc(). This change is necessary because the USB control messages require DMA to work, and it is not guaranteed that the stack would be in a DMA enabled area.

The patch correctly allocates the buffer using kmalloc() and frees it using kfree() before returning. It also correctly handles the return value of usb_control_msg() and copies the value from the buffer to the "value" variable if the control message succeeds.

Overall, this patch improves the reliability and correctness of the stk-webcam driver by ensuring that DMA is used correctly for USB control messages. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes two issues in the NFSv4 code. First, it adds error handling for the return value of rpc_clone_client(). Previously, the return value was not checked, leading to a potential memory leak if nfs4_proc_lookup_common() replaced the original value of 'client'. Second, it simplifies the code by moving the call to rpc_clone_client() after nfs4_proc_lookup_common().

The patch has been reported by Andy Adamson and signed-off by Trond Myklebust, who is a recognized contributor to the Linux kernel.

Based on the analysis, the patch appears to be a valid fix for the reported issues and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch improves SMT balancing in the Linux kernel by avoiding select_idle_sibling() from picking a sibling thread if there is an idle core that shares cache. This is beneficial in cases where there is a shared cache core available to balance to.

The patch has been tested by Mike Galbraith and signed-off by Peter Zijlstra. It also includes the necessary Cc and Link information.

The code changes in the patch are well-documented and appear to be logically correct. The patch iterates through the sched domains and selects an eligible idle CPU based on the given conditions. The changes are clear and do not introduce any obvious issues.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch introduces a helper function `nvme_set_queue_limits` that sets the queue limits for the admin queue in addition to the I/O queues. Without this helper function, the command size on the admin queue is arbitrarily low, and other limitations are missing, which can lead to potential issues.

The patch has been reviewed and tested by multiple individuals, including Christoph Hellwig, Jeff Lien, and Keith Busch. It has also been signed-off by Jens Axboe.

The changes made by the patch are necessary for proper functioning and stability of the NVMe driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: 

The patch removes the "gpmc_fck" dummy clock from the OMAP4/5/DRA7 clock definitions. This is necessary because when the "gpmc.c" file calls "clk_get(..., "fck")", it gets a dummy clock with a rate of zero. This results in divisions by zero and misconfigured timings, causing devices on the bus to be lost.

By removing the "gpmc_fck" dummy clock, the "gpmc.c" file can fail gracefully instead of encountering these issues.

The patch has been Acked by Tero Kristo and signed-off by Florian Vaussard and Tony Lindgren.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch defines a new state called "CONNECTED" for ceph connections in the Linux kernel. This state is set when the connection sequence completes successfully and is cleared when the connection gets closed. The patch also updates the code to handle the new state appropriately in various functions.

The addition of the "CONNECTED" state improves the clarity and maintainability of the code by explicitly defining the fully operational state of a ceph connection. It also ensures that the old state is examined correctly when a socket disconnect event is reported.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a potential crash in the gs_start_tx() function of the usb gadget serial driver. The patch adds a pointer checking in gs_start_tx() to avoid the crash. It checks if the 'port->port_usb' pointer is NULL before accessing it. This is a necessary fix to prevent the crash and ensure the stability of the USB gadget serial function. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue reported by Coverity where the allocation size in the devres_alloc() function is incorrect. The patch correctly changes the allocation size from sizeof(*wdd) to sizeof(*rcwdd).

The patch also includes the Fixes tag, indicating that it addresses a specific issue introduced in a previous commit.

The patch has been Acked by Neil Armstrong, who is a recognized contributor in the watchdog subsystem.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the `intel_check_page_flip()` function generates warnings when called in soft-IRQ context. The current implementation uses `in_irq()` to check for hard-IRQ context only, which is not suitable when the kernel is run with the 'threadirqs' option selected. 

The proposed patch replaces `in_irq()` with `in_interrupt()`, which allows for either type of interrupt context. This change ensures that the page flip code is still detected and complains about misuse if it is ever called from non-interrupt context.

The patch has been reviewed and signed-off by the relevant maintainers, and it also has a Bugzilla reference. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch modifies the code in the drm/radeon/dpm and drivers/gpu/drm/radeon/rv770_dpm files. It replaces the manual lookup of the max_vddc value with the use of the stored max_vddc value when parsing the power tables.

The change improves efficiency by avoiding the need to look up the max_vddc value each time. Instead, it uses the stored value, which is more efficient.

The patch also fixes a bug where the vddc value was not being patched correctly when it was set to 0xff01. Instead of looking up the max_vddc value, it now checks if the pi->max_vddc value is set and uses that value instead.

Overall, this patch improves efficiency and fixes a bug, making it suitable for acceptance in Linux -stable releases.
true || NAK

Based on the provided patch, it is recommended to not accept this patch in Linux -stable releases. The patch reverts a previous commit that enabled autosuspend for Intel Bluetooth devices. The reason for reverting the commit is that enabling autosuspend for these devices has been shown to be unreliable. It may work for some people with certain combinations of USB host controllers, but for others, it puts the device to sleep and it will not wake up for any event.

The patch mentions that there were initial patches to the xHCI USB controller that fixed this issue for some people, but not for all. This suggests that the problem could be related to the USB subsystem, USB host controllers, or even a hardware issue. Since the root cause is not known at the moment, it is safer to revert the patch.

Therefore, it is recommended to not accept this patch in Linux -stable releases.
true || ACK

This patch fixes the calculation of the length of Tx statistics in the qlcnic_ethtool.c file. It considers the number of Tx queues while calculating the length of Tx statistics for 82xx and 83xx adapters. The patch also properly calculates the statistics length for these adapters.

The patch adds two new functions, qlcnic_82xx_statistics and qlcnic_83xx_statistics, which calculate the statistics length based on the adapter type. The qlcnic_dev_statistics_len function then uses these functions to calculate the overall statistics length for the adapter.

The patch also handles the case where the adapter has the QLCNIC_ESWITCH_ENABLED flag set, which requires additional statistics to be included in the length calculation.

Overall, this patch improves the accuracy of the statistics length calculation and ensures that the correct length is returned for different adapter types. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch corrects a logic error in the original implementation of the mmc and sdhi drivers. The logic error is related to the clock disable logic. The patch correctly updates the clock disable logic by using the bitwise OR operator instead of the bitwise AND operator.

The patch has been reviewed and signed-off by Simon Horman and Paul Mundt, indicating that it has been tested and verified.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the rtnl_calcit() function in the rtnetlink code. Currently, the function does not account for the size of the header of the netlink message when calculating the minimal dump size. This can result in incorrect dump messages for network devices.

The patch modifies the rtnl_calcit() function to correctly calculate the minimal dump size by using the nlmsg_total_size() function, which includes the size of the netlink message header.

This fix is necessary to ensure that dump messages for every network device can be stored correctly. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where the PLC (Port Link Change) bit is not cleared for USB2 root hub ports when the link state changes. Currently, the PLC is only cleared for USB3 root hub ports. 

The patch adds a check to clear the PLC bit for USB2 root hub ports in the handle_port_status() function. It checks if the speed of the host controller driver (hcd) is not HCD_USB3, and if so, it clears the PLC bit using the xhci_test_and_clear_bit() function.

This patch is a straightforward fix that ensures consistent behavior for both USB3 and USB2 root hub ports. It does not introduce any new functionality or potential regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a possible NULL pointer dereference issue introduced in a previous commit. The issue occurs when the function `wait_event_interruptible` is called before `functionfs_bind()` is called, resulting in `epfile->ffs->gadget` being NULL. Later on, the variable `gadget` is used as a parameter to `usb_ep_align_maybe`, which dereferences it.

The patch fixes this issue by moving the assignment of `gadget` to after the potential waiting has completed. This ensures that `gadget` is not NULL when it is used as a parameter.

The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a connector quirk for a specific Fujitsu board. The patch checks the device and subsystem vendor and device IDs to determine if the quirk should be applied. If the device is the Fujitsu D3003-S2 board and the connector type is VGA, the patch returns false, indicating that the quirk should not be applied.

The patch is a fix for a bug reported in the freedesktop.org bug tracker. By adding this quirk, the non-existent VGA port listed in the Vbios connector table for the Fujitsu D3003-S2 board will be correctly handled.

Since this patch addresses a specific issue and has been tested and signed-off by the relevant developer, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the issue of renaming the function `dev_hw_addr_random()` to `eth_hw_addr_random()` in the `lpc_eth.c` driver. The patch updates the code to use the new function name `eth_hw_addr_random()` correctly.

The change is straightforward and does not introduce any new functionality or potential issues. It simply replaces the old function call with the new one.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a check to ensure that a guest which sets the PAT CR (Page Attribute Table Control Register) to an invalid value will receive a #GP (General Protection) exception. Currently, if the vmx (Virtual Machine Extensions) supports loading the PAT CR during entry, the value is not checked. This patch adds the necessary check in that case.

The patch modifies the function `vmx_set_msr` in `arch/x86/kvm/vmx.c` to call the `kvm_mtrr_valid` function to check the validity of the PAT CR value. If the value is invalid, the function returns 1, indicating that the MSR (Model Specific Register) write should be rejected.

The patch also adds the `kvm_mtrr_valid` function in `arch/x86/kvm/x86.c` to check the validity of the MTRR (Memory Type Range Registers) values. This function is used by both `vmx_set_msr` and `set_msr_mtrr` functions to validate the MSR writes.

Additionally, the patch adds the declaration of `kvm_mtrr_valid` function in `arch/x86/kvm/x86.h`.

Based on the provided information, the patch appears to be a valid fix to ensure proper handling of invalid PAT CR values in the KVM (Kernel-based Virtual Machine) subsystem. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the ath9k driver where the check for PS_WAIT_FOR_TX_ACK was inverted. The hardware should only go to full sleep if no transmission is pending. The patch correctly modifies the code to check for PS_WAIT_FOR_TX_ACK before deciding to go to full sleep. 

The patch has been reported by Sujith Manoharan and signed-off by Felix Fietkau. It has also been CC'd to the stable@vger.kernel.org mailing list, indicating that it is suitable for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the Bluetooth driver where a non-link packet received in a non-active state could cause a kernel oops. The patch adds a return statement after calling h5_reset_rx() to prevent the dereferencing of a NULL Rx skb. This fix is important for stability and preventing potential crashes, so it should be accepted in Linux -stable releases.
true || ACK

This patch modifies the condition for considering double acknowledged interrupts in the snd_pcm_update_hw_ptr0 function in the ALSA PCM driver. The current condition checks if the hardware reported pointer is smaller than expected and if the time since the last update is over half a buffer time. However, this condition can incorrectly treat certain interrupts as double acknowledged when the hardware reported pointer is only slightly smaller than expected and the time since the last update is just a little larger than half a buffer time.

The patch addresses this issue by adjusting the condition to include a small offset of 1 to the half buffer time check. This ensures that interrupts are not incorrectly treated as double acknowledged when the difference is within a small range.

The patch also adds a comment explaining the use of jiffies and its inaccuracy due to being an integer value.

Based on this analysis, the patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the encoding of metadata in the net sched module. The patch correctly uses the real length of the data instead of the padded length, which is a bug according to the specification. The patch also includes a bug fix for validating the length of a u16 field, although there is currently no metadata of size u16. The patch also removes magic numbers and replaces them with appropriate constants.

Overall, this patch improves the correctness and maintainability of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the lpm_capable field is not set for the root hub device, causing LPM (Link Power Management) to not be functional in the Linux kernel. The patch adds code to check and set lpm_capable when registering a root hub device. It has been tested and Acked-by Alan Stern. The patch can be back-ported to kernels as old as v3.15, which contains the commit that introduced the bug.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a problem in the ACPI / EC driver where a SCI (System Control Interrupt) EC interrupt is incorrectly counted as a false interrupt. The patch adds a check to ensure that if the SCI bit is set in the status register, the interrupt is not considered false.

This fix is important because it prevents valid SCI interrupts from being incorrectly classified as false interrupts. By accepting this patch, we can ensure that the ACPI / EC driver handles interrupts correctly and improves the overall stability and reliability of the Linux kernel.
true || ACK

This patch fixes a bug in the calculate_imbalance() function in the sched/balancing module. The bug occurs when the local->avg_load is greater than the sds->avg_load, which can result in an imbalance overflow. The patch addresses this issue by skipping the assignment and assuming imbalance=0 in this case.

The bug can be reproduced by running 2*N cpuhogs pinned to two logical CPUs belonging to different cores on an HT-enabled machine with N logical CPUs. By observing the se.nr_migrations growth, the bug can be caught.

The patch has been reviewed and signed-off by multiple developers, including Vladimir Davydov, Peter Zijlstra, and Ingo Molnar. The link to the patch is provided for reference.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch allows EEE (Energy Efficient Ethernet) for all variants of RGMII interfaces. It extends the check for PHY_INTERFACE_MODE_RGMII to cover all RGMII variants, including those with transmit or receive internal delay, no delays at all, or delays in both directions. Since EEE is a property of the RGMII interface and its delays, it should be allowed for any of these modes.

The patch also ensures that EEE is only supported in full duplex mode and for interfaces operating with MII, GMII, or RGMII (all kinds). Internal PHYs are also allowed to proceed and should return an error if they do not support EEE.

Overall, this patch fixes the handling of EEE for RGMII interfaces and ensures that it is enabled correctly. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses an issue where unfinished touch events can compete with pen events on tablets that support both pen and touch input. The patch ensures that if the pen comes in proximity while touch is down, touch is forced up before sending pen events. This idea has already been implemented for Tablet PCs, but other tablets that support both pen and touch were not fully considered.

The patch adds a check in the wacom_intuos_inout() and wacom_bpt_pen() functions to return early if touch is still down. This prevents pen events from being sent while touch is still active.

Overall, this patch improves the handling of pen and touch events on tablets and should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the FDT manipulation in the AArch64 UEFI implementation. The patch moves the update_fdt_memmap() call into the callback function invoked by efi_exit_boot_services() right before it calls the ExitBootServices() UEFI service. This ensures that the FDT manipulation is done before the MMU is disabled, avoiding alignment faults that can occur when manipulating the FDT with the MMU off.

The patch also mentions that disabling the MMU in ExitBootServices() is not compliant with the UEFI spec and carries great risk. Therefore, it is important to fix this issue.

The patch has been tested and has a Fixes tag referring to the commit that introduced the issue. It also has the necessary Signed-off-by and Tested-by tags.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch corrects the vsync configuration sequence in the drm/exynos/mixer driver. It follows the specification by clearing the vsync indicator before configuring vsync. The patch has been reviewed and signed-off by multiple developers from Samsung, indicating that it has undergone thorough testing and review.

The changes in the patch update the code to clear the vsync indicator and enable/disable the vsync interrupt correctly. These changes ensure that the vsync functionality works as intended.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the IB/cm module where the node from the sidr tree could be erased twice or not erased at all, leading to a duplicate free or use-after-free issue. The patch ensures that the node is erased only once before freeing cm_id_priv.

The patch also includes a fix in the ib_send_cm_sidr_rep function to check if the node is empty before erasing it from the remote_sidr_table. This prevents a potential use-after-free issue.

The patch has been reviewed and signed-off by multiple developers, including the original author of the kernel CM implementation. It also includes a reference to the commit that introduced the bug.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds support for NR_CPUS = 4096 on SPARC64 platforms. Currently, NR_CPUS is limited to 4064 due to the allocation of a single page for NR_CPUS mondo entries. This patch fixes the issue by allocating (2^order) pages where order is set according to the size of cpu_list for possible CPUs. Since cpu_list_pa and cpu_mondo_block_pa are not used in asm code, there are no imm13 offsets from the base PA that will break because they can only reach one page.

The patch has been reviewed by multiple developers and has been tested on SPARC64 platforms. It does not introduce any new issues and resolves the limitation on the number of CPUs that can be used on SPARC64 platforms.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the btrfs file system where the fs_info->pending_changes variable is never cleared. The original code uses cmpxchg(&fs_info->pending_changes, 0, 0), which only clears the variable if it is already 0. This can cause problems when mounting the btrfs file system with the inode_cache mount option, as the pending_changes variable will always be 1, even when the file system is frozen.

The patch replaces the cmpxchg function with xchg to ensure that the pending_changes variable is always cleared. This fix is necessary to prevent potential issues when using the inode_cache mount option.

The patch has been reviewed and signed-off by multiple developers, including Qu Wenruo, David Sterba, and Chris Mason. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a check to skip the creation of PWM fan control attributes if DPM (Dynamic Power Management) is disabled. Since PWM fan control is only available with DPM, there is no non-DPM support on amdgpu. Therefore, the sysfs nodes for PWM fan control attributes would never be created in the first place if DPM is disabled.

By adding this check, the patch ensures that there won't be any crashes or issues related to accessing non-existent sysfs nodes for PWM fan control attributes when DPM is disabled.

Hence, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a WARNING message that occurs when unloading a block driver. The issue is that the percpu_ref_kill() function is being called more than once, which is not expected behavior. 

The patch removes the unnecessary freezing and unfreezing of the queue in the blk_mq_del_queue_tag_set() function. Since the queue is already frozen by blk_cleanup_queue(), there is no need to freeze it again before deleting the tag set. 

The patch has been reviewed by Tejun Heo <tj@kernel.org> and signed-off by Ming Lei <ming.lei@canonical.com> and Jens Axboe <axboe@fb.com>. 

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the selinux_inode_setxattr function that causes setxattr's of security labels over NFSv4.2 to fail. The bug was introduced by a previous patch that didn't take into account the SECURITY_FS_USE_NATIVE behavior for NFS. The patch adds the missing condition for SECURITY_FS_USE_NATIVE in the selinux_is_sblabel_mnt function, allowing security labels to be set correctly on NFS.

The patch has been reviewed and Acked-by Stephen Smalley. It also has a stable@kernel.org tag, indicating that it should be considered for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the clock rate setting in the mxs-mmc driver. It corrects the calculation of div1 and div2 values, which were previously not correctly defined. The patch also addresses the issue where if div2 was 0, the value for TIMING_CLOCK_RATE would have been 255 instead of 0. 

The patch has been reviewed and signed-off by Koen Beel and Wolfram Sang, indicating that it has undergone proper review and testing. The changes in the patch are straightforward and do not introduce any new risks or regressions. 

Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK).

The patch removes the global hardcoded limits on the amount of message queues that can be created in the ipc/mqueue module. These limits were causing issues for userspace applications, as they were too low and restrictive. The patch includes feedback from affected users and suggests reverting the limits entirely.

The patch has been reviewed and Acked-by Doug Ledford and includes the reported-by tag from Madars Vitolins. This indicates that the patch has been tested and verified by multiple individuals.

The changes in the patch involve reverting the limits and falling back to the original way of dealing with queue limits, where new queues cannot be created once a user's resource limit is reached and all memory is used.

Overall, the patch addresses a known issue and has been reviewed and tested by multiple individuals. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in commit f8ec894945e7d205ce62be59e55e72c4304e4739. The bug caused external users of input_mt_is_used() to stop incrementing the frame count unless the input device was set up to automatically drop unused slots. The bug was reported by Gabriele Mazzotta and tested by the same person. It was also reviewed by Henrik Rydberg.

The patch adds a new function __input_mt_drop_unused() which is called by input_mt_drop_unused() and input_mt_sync_frame(). This function iterates over the slots and drops the unused ones by setting the tracking ID to -1. The frame count is then incremented.

The patch is a simple fix for the bug and has been tested. It does not introduce any new functionality or changes. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch ensures that the request and response queue addresses are written to the registers before they are used. It adds a memory barrier to ensure the proper ordering of the writes. This is important for correct operation of the qla3xxx driver.

The patch has been reviewed and Acked-by Jitendra Kalsaria, who is a recognized expert in the qla3xxx driver. This adds credibility to the patch.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the bcm_sysport_resume() function in the bcm_sysport driver. The bug can lead to receive FIFO corruptions when coming out of a suspend cycle. This can result in corrupted or duplicate packets being delivered to the host CPU interface.

The patch adds a missing UniMAC reset in the bcm_sysport_resume() function, which resolves the issue. The fix has been tested and verified to address the problem.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the power save (PS) wrappers in the ath9k_set_coverage_class function. The PS wrappers are necessary because this function is called during suspend/resume and also via the iw command. The patch correctly adds the ath9k_ps_wakeup and ath9k_ps_restore calls before and after the ath9k_hw_init_global_settings call, respectively. This ensures that the power save state is properly handled during the configuration of parameters like sifs, slottime, and acktimeout.

The patch also includes the necessary Signed-off-by tags and is marked for stable@kernel.org, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the kernfs_deactivate() function in the Linux kernel. The function forgot to check whether the KERNFS_LOCKDEP flag is set before performing lockdep annotations. This results in feeding uninitialized lockdep_map to lockdep, triggering a warning.

The patch adds the necessary check to ensure that lockdep annotations are performed only if the KERNFS_LOCKDEP flag is set. This prevents the warning from being triggered and ensures that the lockdep_map is properly initialized.

The patch has been reviewed and signed-off by Tejun Heo, who is a well-known kernel developer. It has also been reported by multiple individuals, including Fabio Estevam and Alan Stern.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a failure to open PCM device with -ENOSYS in Terratec Phase 88. It corrects the IDs for the Selector Function Blocks of AVC Audio subunit that are used to switch the source of the clock. The current implementation incorrectly sets the IDs to 0, but the correct IDs are 9 and 8.

The patch has been reported and tested by András Murányi, and it has been signed-off by Takashi Sakamoto and Takashi Iwai.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || NAK

The patch is reverting a previous commit that allowed PCH PWM override on IVB. The reason for reverting is that it breaks the backlight controls on IVB Asus Zenbook with an eDP panel. The patch suggests that the right fix would be to read a bit and use either the PCH or the CPU register to adjust the backlight values. However, this fix is not included in this patch and is planned for a future release. Therefore, it is not suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a missing unlock on the error handle path in the net2272_irq() function in the usb gadget driver for the net2272 controller. The missing unlock could potentially lead to a deadlock or other synchronization issues. The patch adds the necessary unlock statement to properly handle the error case.

The patch has been reviewed and signed-off by Wei Yongjun and Felipe Balbi, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a check to the try_ram_remap() function in the memremap code to ensure that the PFN (Page Frame Number) passed to pfn_to_page() is valid before dereferencing the struct page pointer. This is important because the assumption that there is a 1:1 relation between the System RAM iomem region and the kernel direct mapping is not universally valid on all architectures, and on ARM and arm64, 'System RAM' may include regions for which pfn_valid() returns false.

By adding the pfn_valid() check, the patch ensures that both __va() and pfn_to_page() are only called on PFNs/physical addresses for which pfn_valid() returns true. This improves the reliability and correctness of the memremap code.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the MACB/GEM driver where the checksum field is not properly initialized, leading to incorrect checksums on transmit. The patch adds a new function `macb_clear_csum` which initializes the checksum field to 0 for packets with checksum offloading. This ensures correct checksum calculation, especially for UDP packets with payload <= 2.

The patch has been reviewed and updated based on feedback. It no longer blindly modifies SKB contents and handles the case where the header needs to be modified properly.

Based on the analysis, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the gpio controller becomes dysfunctional when power management is disabled (CONFIG_PM=n). The code enabling the clock was removed from the probe function, assuming that the pm resume hook would handle it. However, when power management is disabled, the pm_* functions are noops and the clock is never enabled.

The patch adds back the clock initialization to support CONFIG_PM=n. It prepares and enables the clock, and also disables and unprepares it in case of an error. This ensures that the gpio controller functions correctly even without power management.

The patch has been reviewed and tested, and it fixes a known issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an incorrect OOM return value in the vmw_cmd_res_reloc_add function of the vmwgfx driver. It also improves the error handling by returning early in the error paths for clarity.

The patch has been reviewed by multiple developers and has been reported by Dan Carpenter. It does not introduce any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch adds support for Microsoft Surface docks that use the Realtek RTL8152 and RTL8153 chips. Without this patch, the generic cdc_ether driver grabs the device and does not work properly. The patch adds the necessary USB device IDs for the Microsoft Surface docks to the driver_info table in both cdc_ether.c and r8152.c. This ensures that the correct driver is used for these devices. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes false lockdep warnings in the ALSA PCM core. The patch addresses the issue by passing the lock subclass calculated from the depth in `snd_pcm_action_group()` and dropping a possibly wrong lock subclass set in `snd_pcm_action_lock_mutex()`. The patch has been reported and tested by Arthur Marsh and is signed-off by Takashi Iwai.

The patch is a straightforward fix for a known issue and has been tested. It does not introduce any new functionality or risk of regressions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an error handling issue in the ftdi_sio USB serial driver. The patch ensures that short responses are properly detected when reading the latency timer, preventing the use of stale buffer data. The patch also includes a fix for a potential heap data leak through sysfs, although it notes that this is not currently an issue due to default settings.

The patch has been reviewed by Greg Kroah-Hartman and signed-off by Johan Hovold, indicating that it has undergone thorough review and testing.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch changes the i2c bus number for the IGEP's DVI connector from 3 to 2. This change is necessary because only Device Tree booting is supported for IGEP boards now. The patch has been signed-off by the relevant developers.
true || ACK

This patch fixes a context bug by removing a call to ieee80211_recalc_min_chandef() in the rate_control_rate_init() function. The fix was reported by Xiaolong Ye and signed-off by Johannes Berg. The patch is necessary to prevent the code from trying to sleep in a context where it is not allowed.

Since the patch fixes a bug and has been reviewed and signed-off by a trusted developer, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the _set_gpio_irqenable function in the gpio-omap.c file. Currently, the function only enables interrupts and does not use the enable parameter. This patch adds the capability to disable interrupts based on the enable parameter.

The patch has been reviewed and tested by multiple developers from TI (Tarun Kanti DebBarma, Santosh Shilimkar, Felipe Balbi, and Kevin Hilman) and has been signed-off by them.

The patch is a simple and straightforward fix that addresses a bug in the code. It does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the intel_th driver where a module reference is leaked when the activation of the output fails. The patch adds the missing module_put() in the activation error path, ensuring that the module reference is properly dropped. This is a necessary fix to prevent the module from ever unloading. The patch also includes a Signed-off-by line and a Cc to the stable mailing list, indicating that it has been reviewed and tested. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: 
The patch addresses an issue where the removal of the NOTRACK target in a previous patch has caused some existing setups to break. The removal of the NOTRACK target was scheduled for removal a long time ago, but some users may not have noticed or decided to stick to an old iptables version.

The patch recovers the NOTRACK target inside the CT target and adds a warning message to inform users about the deprecation of the NOTRACK target. This allows users to upgrade their iptables version or switch to using the CT target instead.

The patch has been reported by Florian Westphal and signed-off by Pablo Neira Ayuso, who is a recognized contributor to the netfilter project.

Based on the information provided, it seems reasonable to accept this patch in Linux -stable releases to address the issue and provide a warning to users.
true || ACK

This patch adds support for the new PEBS frontend profiling event for Skylake processors. It defines a new MSR (Model Specific Register) for configuring the event and exports support for it through sysfs. The patch also adds a new function to add new entries to existing tables, avoiding duplication of existing tables.

The patch has been reviewed and Acked-by Thomas Gleixner. It has also been signed-off by Andi Kleen, Peter Zijlstra, and Ingo Molnar.

Based on the provided information, the patch appears to be well-implemented and necessary for accurate profiling of frontend problems on Skylake processors. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the sctp_ulpq_renege_list() function in the net/sctp/ulpqueue.c file. The bug causes association hangs due to errors when reneging events from the ordering queue.

The patch correctly identifies all affected packets and sums the freed space before renegeing from the tsnmap. It also correctly unlinks the event and renege all applicable TSNs.

The patch has been reviewed and Acked-by Vlad Yasevich <vyasevich@gmail.com> and Acked-by Neil Horman <nhorman@tuxdriver.com>.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the "jumpy" cursor issue in the Speedlink VAD Cezanne model. The patch ensures that the fix does not interfere with the proper working of bug-free devices. The patch has been tested to catch invalid events with a value of abs(value) >= 256, which is restrictive enough to not interfere with bug-free devices. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the s5p-fimc driver where the mutex was erroneously acquired instead of released when setting TRY crop on the sub-device. This bug has been present since kernel version 3.2.

The patch correctly changes the mutex_lock() call to mutex_unlock() in the fimc_subdev_set_crop() function, ensuring that the mutex is released on the exit path.

Since this is a bug fix and it has been tested and confirmed to resolve the issue, it should be accepted in Linux -stable releases. The patch also includes the necessary Signed-off-by tags and Cc to the stable mailing list, indicating that it has been reviewed and tested.
true || ACK

This patch restores the sdvo_flags after the round trip of dtd->mode->dtd in the DRM/i915 driver. The sdvo_flags are important and cannot be ignored in all cases. The regression was introduced in a previous commit and this patch fixes the issue by preserving and restoring the sdvo_flags. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the arithmetic used to zero pad the last 64-bit word in the push buffer in the bnxt_en driver. The patch correctly calculates the end pointer by adding the length to the pdata pointer. It then passes the end pointer to PTR_ALIGN() to obtain the aligned pointer, and subtracts 1 to get the last 64-bit pointer to data. This ensures that the last word is correctly zero padded.

The patch also includes the necessary Signed-off-by tags.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch modifies the srp_send_tsk_mgmt() function in the drivers/infiniband/ulp/srp/ib_srp.c file. It adds a check to avoid sending a task management function if sending will fail anyway because there is no RDMA/RC connection or the QP is in the error state. This change improves the efficiency of the function and avoids unnecessary operations.

The patch has been reviewed and Acked-by David Dillow, indicating that it has been reviewed and approved by another developer. Additionally, it has been marked for stable release (Cc: stable@vger.kernel.org), which suggests that it is considered important for backporting to stable releases.

Therefore, based on the analysis of the patch and the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch modifies the net_ctl_permissions() function in net/sysctl_net.c to use ns_capable_noaudit() instead of ns_capable() when checking for the CAP_NET_ADMIN capability. This change is made to prevent confusion for application authors when root-running Go applications trigger a denial audit message. The patch also includes a BugLink to provide additional context.

Based on the provided information, it seems reasonable to accept this patch. The change does not introduce any security vulnerabilities and addresses a specific issue related to confusion caused by denial audit messages. The patch has also been reviewed and Acked by multiple individuals, including Tyler Hicks and Serge E. Hallyn.

Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds documentation for the mp error 0x10, INVALID_ADDR_SPACE, in the Nouveau driver. The documentation is provided by NVIDIA and explains that this error occurs when trying to use an atomic operation on local or shared memory instead of global memory.

Adding this documentation will help developers understand and troubleshoot issues related to INVALID_ADDR_SPACE. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the RX VQ processing of virtio_net. The patch addresses the issue of calling virtqueue_enable_cq on the RX path after napi_complete, violating the requirement to synchronize virtqueue_enable_cq with virtqueue_add_buf. This violation can cause the used event to move backwards, resulting in lost interrupts.

The patch resolves the issue by calling virtqueue_enable_cb_prepare with NAPI_STATE_SCHED set under the napi lock, and later calling virtqueue_poll with NAPI_STATE_SCHED clear outside the lock. This ensures that napi_complete is called to clear NAPI_STATE_SCHED before polling the virtqueue for used buffers, preventing the loss of RX events.

The patch has been reported, tested, and acked by Jason Wang, and signed-off by Michael S. Tsirkin and David S. Miller.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the xprtrdma module where the rq_private_buf.len variable is not initialized in the rpcrdma_bc_receive_call() function. This causes some NFSv4.1 OPEN requests to hang waiting for the NFS server to finish recalling delegations.

The patch adds the initialization of rq_private_buf.len to the rpcrdma_bc_receive_call() function, ensuring that svc_process_common() is invoked with a non-zero length RPC message.

The patch also includes the necessary Fixes and Signed-off-by tags.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a possible deadlock in dm-bufio that can occur with large block sizes. The deadlock is caused by the allocation of pagetables, which are always allocated with GFP_KERNEL, even if a different gfp_mask is specified. This can lead to recursion back to the I/O layer and cause a deadlock.

To avoid this deadlock, the patch sets the per-process flag PF_MEMALLOC_NOIO using the memalloc_noio_save function before calling __vmalloc. This ensures that all allocations in the process, including pagetables, are done with the implied GFP_NOIO flag. The flag is then restored using the memalloc_noio_restore function.

The patch also mentions that this should be backported to stable kernels, but since they don't have the PF_MEMALLOC_NOIO flag and the memalloc_noio_save/memalloc_noio_restore functions, the PF_MEMALLOC flag should be set and restored instead.

Based on this analysis, the patch appears to be a valid fix for the deadlock issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the s2mpa01 regulator driver where the wrong register was being used for the ramp delay of buck1 regulator. The driver was using the same register and field for the ramp delay of buck3 and buck1, which resulted in the ramp delay of buck3 being updated when setting buck1, and the ramp delay of buck1 never being set.

The patch correctly fixes this issue by using the correct register for the ramp delay of buck1 regulator.

The patch has been reviewed and signed-off by Krzysztof Kozlowski and Sachin Kamat. It has also been reviewed by Mark Brown.

Since this patch fixes a bug and has been reviewed and signed-off by relevant developers, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the drbd driver. The patch correctly frees the memory allocated for the disk_conf structure, preventing a memory leak of 336 bytes for each attach/detach cycle. The patch has been signed-off by multiple developers, including the original author of the code. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a warning message triggered by stop_other_cpus() during system reboot on 24 CPU Westmere servers. The warning message is caused by a timer interrupt that happens while default_send_IPI_mask_allbutself_phys() is sending NMIs to all the other CPUs. The patch disables the local irq before stop_other_cpus() to prevent the timer interrupt from triggering scheduler's load balance and causing the warning message.

The patch has been tested 25 times and has been Acked-by Don Zickus. It is necessary even with the latest 3.4 kernel changes. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the Btrfs file system where the wrong mapping flags were being used for the free space inode. The incorrect flags were causing issues on ARM machines, rendering Btrfs unusable on those systems.

The patch has been reported and tested by Merlijn Wajer, and it has been signed-off by Filipe Manana and Chris Mason.

The change in the patch correctly updates the mapping flags to use __GFP_FS instead of GFP_NOFS, which resolves the issue.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch allows the panel's preferred mode to override the BIOS native mode in cases where the resolutions don't match. This is useful in situations where the BIOS native mode may not be fully initialized or may have default values. By using the panel's preferred mode, which is likely to represent the panel's actual capabilities, we can ensure better compatibility and functionality.

The patch has been reviewed and signed-off by Matthew Garrett and Alex Deucher, indicating that it has undergone proper scrutiny. The code changes are also straightforward and do not introduce any potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where zero checksums are being sent for UDP packets. While zero checksums are acceptable for TCP, they should not be used for UDP. The patch replaces the zero checksum with 0xffff, regardless of the transport.

The patch has been reviewed and Acked-by Maciej Żenczykowski, indicating that it has been tested and approved by another developer.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch improves the calculation of dirtyable memory in the page writeback code. It ensures that only free pages and file pages are considered as dirtyable, excluding anonymous pages. This is important because considering anonymous pages as dirtyable can lead to a large portion of cache pages being dirtied, which can cause stalls on IO.

The patch has been reviewed and tested by multiple developers, and it has been reported to solve a specific problem with a workload that heavily uses anonymous pages. The patch also includes necessary changes in other files to support the modification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses two regressions in the nouveau driver caused by the changes in the move_notify function. The first regression is related to the incorrect handling of the new_mem parameter, which sometimes points to a stale node. This patch reverts the change and introduces a cleanup in the move() failure path instead. The second regression is caused by the call to move_notify() from cleanup_memtype_use(), which passes TTM ghost objects to the driver, leading to accessing uninitialized memory. The patch includes a workaround in the nouveau's move_notify() hook to handle this issue. 

The patch has been reviewed and signed-off by Ben Skeggs and Thomas Hellstrom. It also includes the necessary Cc and Signed-off-by tags. The changes in the nouveau_bo_move_ntfy() and ttm_bo_handle_move_mem() functions are well-documented and appear to be correct.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the socket file's ->setattr() function where the sk_uid member of struct sock could be set to a garbage value from the stack. The patch ensures that sk_uid is only copied over when ATTR_UID is set in ia_valid, indicating that the uid is being changed. This fix is necessary to prevent sk_uid from being set to an uninitialized value in cases where metadata operations such as chmod or utimes are performed. The patch has been tested and reviewed by multiple individuals, including Eric Biggers, Lorenzo Colitti, and David S. Miller. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch updates the use of the irq_reg_{readl,writel} functions in the arch/arm/plat-orion/gpio.c file to the new API introduced in the commit "genirq: Generic chip: Change irq_reg_{readl,writel} arguments". The patch fixes the use of the old API and ensures that the correct arguments are passed to the functions.

The patch has been reviewed and Acked-by Olof Johansson, indicating that it has been reviewed and approved by a trusted developer.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced by commit 0e8f2fdacf1d44651aa7e57063c76142d1f4988b in the gpio-pca953x driver. The patch correctly passes the chip as the host_data parameter to irq_domain_add_simple(), which is necessary for initializing chip_data in pca953x_gpio_irq_map(). Failing to do so can lead to a NULL pointer dereference in several functions.

The patch has been reviewed and Acked-by Maxime Ripard. It has also been signed-off by Alexandre Belloni and Linus Walleij.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Reasoning:
The patch disables PSR (Panel Self Refresh) by default on Haswell and Broadwell platforms. This decision is based on multiple bug reports indicating that PSR causes system lockups and other problems. The patch also includes a link to the bug reports for reference.

Given the evidence provided, it is reasonable to disable PSR by default on these platforms to avoid the reported issues. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the x86/microcode/intel module where the incorrect buffer size is used for saving microcode data. The patch introduces a new variable, new_mc_size, to store the correct size of the microcode patch during the iteration. This ensures that the correct buffer size is used when saving the microcode patch.

Without this fix, the kernel could encounter a bug that leads to an oops and a kernel paging request error. The fix addresses this issue by correctly saving the microcode patch with the appropriate buffer size.

The patch has been reviewed and signed-off by multiple developers, including Jun'ichi Nomura, Borislav Petkov, and Thomas Gleixner. It also includes a link to the original discussion thread on the LKML.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a problem in the mac80211 module where the recalculation of the software remain-on-channel (ROC) work timeout is done unnecessarily in some cases. The patch moves the recalculation to the only place where it is required, which improves the efficiency of the code.

The patch also fixes a potential issue where the list iteration outside the recalculation could become corrupted and crash if one of the items on the list expires during the recalculation.

Overall, this patch improves the functionality and stability of the mac80211 module, and therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the chained handler was not set correctly for gpio devices instantiated by a device tree. This resulted in unusable gpio irqs on i.MX21 and i.MX27 platforms when using oftree.

The patch correctly sets the chained handler for all gpio interrupts, ensuring that the handler is set for every port. This makes the code more robust and easier to maintain.

The patch has been Acked-by Shawn Guo and Cc'd to Grant Likely, indicating that it has been reviewed and approved by other experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the handling of mbus formats in the mx2_camera driver. It removes the use of the MX2_CAMERA_SWAP16 and MX2_CAMERA_PACK_DIR_MSB flags and instead negotiates with the attached sensor to determine the mbus format and set the CSICR1 configuration accordingly. This is necessary for the video function on mach-imx27_visstrim_m10.c to work properly.

The patch has been reviewed and tested by multiple developers, including Javier Martin, Mauro Carvalho Chehab, and Laurent Pinchart. It also addresses a previous incorrect patch that was reverted.

The changes in the patch include modifying the mx2_prp_cfg structure to include a new field "csicr1" and updating the mx27_emma_prp_table to set the csicr1 field for specific mbus formats. The mx2_camera_set_bus_param function is modified to use the csicr1 field from the mx2_prp_cfg structure instead of the platform_flags.

Overall, the patch appears to be well-tested and addresses a known issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes two bugs related to resizing RAID0 arrays. The first bug is that the code allows setting the available size on each device for RAID0 and Linear devices, even though resizing a RAID0 array in terms of making the devices bigger is not possible. This change disables the setting of the available size on each device for RAID0 and Linear devices, ensuring that the effective layout of data is not changed.

The second bug is that the raid0_size() function does not accurately report the size of the RAID0 array. This patch fixes this by rounding the device sizes to chunk sizes, ensuring that the reported size is accurate.

These bugs have been present for a long time and can cause a BUG in a RAID0 array when attempting to resize it. Therefore, this patch is suitable for any -stable kernel.

The patch has been reviewed and signed-off by NeilBrown <neilb@suse.de>, who is a recognized contributor to the Linux kernel.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds more debug information for the enospc_debug mount option in the btrfs file system. It includes additional warning messages that provide information about the block group and the lack of space for allocating a new chunk. This additional information can be helpful in diagnosing and troubleshooting balance ENOSPC errors.

The patch has been reported by a user and has been signed-off by the relevant developers. It does not introduce any new functionality or change the existing behavior of the code. It only adds debug information, which is useful for debugging purposes.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the processing of turbo activation ratio in the cpufreq intel_pstate driver. When the config TDP level is not nominal, the current processing for level 1 and level 2 ratios is incorrect. The actual ratio bits are at bits [23:16], but the current code does not shift the bits to get the actual ratio. This patch corrects this issue by shifting the bits and applying a mask to extract the actual ratio.

The patch also includes a Fixes tag, indicating that it addresses a specific commit that introduced the bug. It is also signed-off by the author and the maintainer of the driver.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a racy refcounting issue in the drm_plane_force_disable function. The issue was introduced in a previous commit that switched to weak references, but failed to update the refcounting logic accordingly.

The bug can only be triggered when there are multiple concurrent rmfb operations with fbdev restoring or similar actions. While it is unlikely to be hit in practice, it is better to be safe than sorry and backport the fix to the stable releases.

The patch has been reviewed and tested by Matt Roper, and the bug was spotted by him during the review process. The patch also includes the necessary Cc and Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a faulty behavior in the OMAP ASoC driver where the CLKR/CLKX pin is incorrectly configured as an output pin when the McBSP is configured as a master. This causes the input clock to be messed up. 

The patch addresses this issue by ensuring that the CLKR/CLKX pin is not configured as an output pin when the McBSP is configured as a master. It also enables the use of the CLKR/CLKX pin to inject an external reference clock in setups where only the McBSP is used as a master.

The patch has been tested on a beagleboard-xm using McBSP1 to drive an i2s DAC through the tx lines (CLKX,FSX,DX) and has been reviewed and acknowledged by the relevant maintainers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch updates the pin names of AIO and XIRQ according to the updated specification. The changes are straightforward and do not introduce any new functionality or potential issues. The patch has been reviewed and Acked by the relevant maintainers. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses an issue with the Skylake platform where the total number of input and output streams exceeds 15, causing some streams to not work due to overflow on SDxCTL.STRM field. The patch introduces a new stream tag allocation method by adding the flag AZX_DCAPS_SEPARATE_STREAM_TAG for Skylake platform.

The patch has been reviewed and signed-off by multiple developers, including Libin Yang and Vinod Koul. It also includes the necessary changes in the code to implement the new stream tag allocation method for Skylake.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a failure path in the musb core driver. In the fail1 failure path, the function pm_runtime_disable() is called to avoid an 'Unbalanced pm_runtime_enable' error in the next probe(). This error can be triggered by a defer probe or the next 'modprobe musb_hdrc'.

The patch also includes the necessary Cc and Signed-off-by tags.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a mistake in the vhost driver where the alignment for the physical address used for logging was not the same as the alignment for the virtual address. The patch corrects this by aligning the physical address with VRING_USED_ALIGN_SIZE, which is the same alignment used for the virtual address.

The patch is a simple fix that ensures consistency in address alignment for both virtual and physical addresses. It does not introduce any new functionality or risk of regressions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue in the brcmfmac driver where the URB (USB Request Block) may be submitted twice if a request times out. By killing the URB in the brcmf_usb_dl_cmd function when a timeout occurs, the patch ensures that the URB is never submitted twice. Additionally, it prevents a possible use-after-free of the URB transfer buffer.

The patch has been reviewed and Acked-by Arend van Spriel, who is a Broadcom employee. This indicates that the patch has been reviewed by someone with expertise in the relevant codebase.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a potential data corruption issue in the dm-snapshot driver by ensuring that the disk cache is flushed when writing metadata for merging snapshots. Without cache flushing, there is a possibility of data corruption in case of a power fault.

The patch modifies the "persistent_commit_merge" function in the "dm-snap-persistent.c" file to use the "WRITE_FLUSH_FUA" flag instead of the previous "WRITE" flag when performing area I/O. This flag ensures that the disk cache is flushed and the data is written to the disk immediately.

Given the potential risk of data corruption and the straightforward nature of the patch, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the NFSv4 protocol where a successful CLOSE call can race with an OPEN call to the same file, resulting in the stateid being overwritten. The patch introduces a check to compare the argument of the CLOSE call with the current stateid "other" field. If they do not match, it indicates that the race condition occurred, and the CLOSE call should be ignored.

The patch also includes modifications to the nfs_clear_open_stateid_locked function to handle OPEN+OPEN_DOWNGRADE races.

Overall, this patch addresses a critical issue in the NFSv4 protocol and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a behavioral change in the clock framework that causes the clock rate to be reset to its initial rate or 0 when the clock is released. This can result in the clock running at the wrong frequency after a successful probe. The patch explicitly sets the clock rate, ensuring that it is not affected by the behavioral change.

The patch has been tested and signed-off by Thierry Reding, and it has also been tested by Tomeu Vizoso. The patch sets the clock rate using the "clk_set_rate" function and logs the clock rate using "clk_get_rate". The patch also includes error handling in case setting the clock rate fails.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a potential issue where completing a request may invoke a driver callback for a request that was not initialized. The patch checks if a request was not started before the queue was marked as dying, and if so, it ends the request directly. This ensures that any unstarted requests on a dying queue are properly handled and prevents any potential issues.

The patch has been reviewed and acknowledged by multiple developers, including Keith Busch, Sagi Grimberg, Johannes Thumshirn, and Christoph Hellwig. Their reviews and acknowledgments indicate that the patch is valid and should be accepted.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the max98090.c file where an ill-defined control route between "STENL Mux" and DACs is causing errors. The patch changes the control name from "NULL" to NULL, which is the correct representation for a control that does not exist.

The patch has been reviewed and signed-off by Jarkko Nikula and Mark Brown, who are both recognized contributors in the Linux kernel community. Additionally, the patch is also marked for stable release, indicating that it has been deemed important for maintaining the stability of the Linux kernel.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes firmware loading errors in the it913x driver. It retries to get the chip version and type 5 times, and if it fails, it applies chip version 0x1 and type 0x9135. This patch also includes some error handling and logging improvements.

The changes in this patch are necessary to ensure proper functionality of the it913x driver on systems where the device does not respond or gives obscure values after cold, warm, or firmware reboot. The patch has been reviewed and signed-off by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a crash in the qedf driver caused by an uninitialized completion. The patch initializes qedf->fipvlan_compl in __qedf_probe to prevent the crash. It also adds a check to see if there are any waiters on the completion before completing it, to avoid inadvertently starting the discovery process due to an unsolicited frame.

The crash is caused by a NULL pointer dereference in __wake_up_common function, as shown in the bug report. The patch fixes this issue by properly initializing the completion and checking if it has already been completed before completing it again.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases to prevent the crash and improve the stability of the qedf driver.
true || ACK

This patch provides fixes for problems found after updating v4l2-compliance to check the frequency band enumeration in the si470x driver. The patch adds the V4L2_TUNER_CAP_FREQ_BANDS capability to the frequency bands in the si470x driver, ensuring that the driver supports frequency band enumeration.

Additionally, the patch updates the device capabilities in the si470x-i2c and si470x-usb drivers to include V4L2_CAP_READWRITE and V4L2_CAP_RDS_CAPTURE, ensuring that the drivers support read/write operations and RDS capture.

Overall, these fixes improve the functionality and compliance of the si470x driver, making it suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in a previous patch that caused a probe fail after successful parsing of the device tree. The bug was caused by the incorrect comparison of the return value of the DTS parsing function against 0. This patch corrects the comparison and sets the return value to 0 in case of success.

The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a buffer overflow issue in the ks8851_mll driver. The current limit for the number of pending frames is set to 32, which can cause a buffer overflow if interrupts are disabled for long enough to allow more than 32 frames to accumulate in the MAC's internal buffers. This patch increases the limit to 255, which should be safer.

The patch has been signed-off by multiple developers, including the driver's maintainer, and the change is straightforward and does not introduce any new functionality or potential issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the input path of the ipv6-multicast module. The patch correctly frees the skb before returning if the fib lookup fails. This prevents a memory leak and ensures proper memory management in the code.

The patch has been reviewed and signed-off by Ben Greear and David S. Miller, who are both recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the nfc device freeing process in the mei driver. The patch properly cleans up the static variable nfc_dev by setting ndev->cl and ndev->cl_info to NULL after freeing. This ensures that the nfc_dev is cleaned properly upon reset.

The patch also includes a memset call to zero out the ndev structure after freeing. This ensures that all fields in the structure are properly reset.

Overall, this patch addresses a bug and improves the stability and reliability of the mei driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a misuse of netdev_alloc_skb in the atl1c driver. The current implementation does not guarantee the suitability of the memory for use in DMA, which has caused occasional hangs and the need for resets. The patch modifies the call to use the internal version __netdev_alloc_skb, where the gfp_mask is explicitly set to include GFP_DMA.

The patch has been tested by two reporters who have the hardware to validate it, and both report an immediate cessation of the problem with this patch. Additionally, it has been reviewed and signed-off by multiple developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation:
The patch removes the non-required spinlock acquire/release calls on 'queue->irqlock' from the 'uvc_queue_next_buffer' routine. The routine is called from 'video->encode' function, which is already called with 'queue->irqlock' held. Acquiring the lock again in 'uvc_queue_next_buffer' causes a spin lock recursion.

The patch has been reviewed and Acked by Laurent Pinchart, which adds credibility to its correctness.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes an integer overflow issue in the xt_alloc_table_info function in the netfilter x_tables module. The issue can lead to a small structure allocation and a copy_from_user based heap corruption on 32-bit systems.

The patch adds a check to ensure that the size of the structure does not overflow before allocating memory. If the size overflows, the function returns NULL, preventing the heap corruption.

The patch has been reported by Ben Hawkes and has been signed-off by Florian Westphal and Pablo Neira Ayuso.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases to fix the integer overflow issue and prevent potential heap corruption.
true || ACK

This patch fixes a potential NULL pointer dereference in the md bcache driver's io.c file. The patch adds a missing check for potential NULL pointer dereferencing after calling the bio_alloc_bioset function. If the function returns NULL, the patch returns NULL, preventing any further dereferencing of the potentially NULL pointer.

This fix is important as a NULL pointer dereference can lead to crashes or other unexpected behavior in the kernel. By adding the missing check, the patch ensures that the code handles the failure case correctly.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dquot_writeback_dquots() function where errors during quota writeback were not properly reported to userspace. The bug was caused by a switched left and right side of an assignment, resulting in the error variable not being updated correctly.

The patch correctly fixes the bug by assigning the value of err to ret when err is non-zero. This ensures that errors during quota writeback are properly reported to userspace.

The patch also includes a Coverity-id and is signed-off by the author, indicating that it has been reviewed and tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds the missing destroy_workqueue() function call before returning from qlcnic_probe() in the error handling case. This ensures that the workqueue is properly destroyed and resources are freed in case of an error.

The patch also includes the necessary error handling code to free the adapter resources and the network device.

Overall, this patch improves the error handling and resource cleanup in qlcnic_probe() function, making it suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a bug where the bio allocation fails when the number of iovecs exceeds BIO_MAX_PAGES. The patch limits the number of iovecs to the minimum value between the number of pages allowed by BIO_MAX_PAGES and the number of pages calculated based on the queue's max_segments and max_sectors values.

The patch is a simple and straightforward fix for the issue and does not introduce any new functionality or potential regressions. It has also been reviewed and signed-off by the relevant maintainers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an information leak vulnerability in the USB serial driver. It adds a missing sanity check to the bulk-in completion handler to prevent an integer underflow that could be triggered by a malicious device. Without this patch, up to 56 bytes of data from after the URB transfer buffer could be leaked to user space.

The patch also includes a fix for a malformed packet, where if the length of the packet is less than 2, an error message is printed and the function returns.

Given the security implications and the fix for the malformed packet, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a performance issue with macvlan devices by initializing the vlan_features field. Currently, macvlan devices do not initialize this field, causing any vlan devices configured on top of macvlans to perform poorly. By initializing vlan_features based on the vlan features of the lower-level device, this patch ensures that the vlan features are properly set for macvlan devices.

The patch is signed-off by two developers, Vlad Yasevich and David S. Miller, which indicates that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the s390 architecture where guest CPUs would stall due to a loop in the gmap_ipte_notify function. The issue occurs when the software change bit tracking the page table entry (pte) causes it to become read-only, making it never writable again. The patch replaces the code with fixup_user_fault, which guarantees to call handle_mm_fault and resolves the issue.

The patch has been reviewed and signed-off by Christian Borntraeger and Martin Schwidefsky, who are experienced developers in the s390 architecture.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the alpha value in the DCTCP algorithm may never reach zero. The current implementation does not allow alpha to drop to zero when it is strictly reduced by alpha >> dctcp_shift_g and if alpha is less than 1 << dctcp_shift_g. This can lead to uncongested flows with leftover alpha being gradually driven down to cwnd=137.

The patch modifies the code to decrement alpha by min_not_zero(alpha, alpha >> dctcp_shift_g) instead of just alpha >> dctcp_shift_g. This change ensures that alpha can drop to zero when necessary. The patch also mentions that a decay of 15 is not unreasonable since an equal or greater amount occurs at alpha >= 240.

The patch has been reviewed and Acked-by Florian Westphal. It has also been signed-off by Andrew G. Shewmaker and David S. Miller.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the TCP receiver code where the receiver-side RTT sample is double-counted and CPU is wasted. The patch correctly removes the redundant update of ts_recent and the call to tcp_rcv_rtt_measure_ts() before and after going to step5. This will improve the efficiency of the TCP receiver code.

The patch has been reviewed and Acked-by Neal Cardwell and Eric Dumazet, indicating that it has been reviewed and approved by experts in the field.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory management issue in the twl6040-vibra driver. The previous commit introduced a bug where the of_find_node_by_name() function was causing the parent node to be released prematurely. This patch adds a call to of_node_get() before calling of_find_node_by_name() to ensure that the parent node is properly referenced.

The fix is simple and straightforward, and it addresses a specific issue introduced by the previous commit. It does not introduce any new functionality or regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the iwlwifi driver for the 8000 series where the device needs to be prepared before accessing it. Without this preparation, there is a risk of not being able to access the hardware. The patch adds a call to the iwl_pcie_prepare_card_hw() function to ensure that the device is prepared before accessing it.

The patch also includes a Fixes tag, indicating that it addresses a specific commit, and is suitable for stable releases.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: 
The patch fixes a boot message error related to the clock node "gmac_gmii_ref_clk_div". It prevents the creation of a clock alias for a non-existing clock, which eliminates the excessive error message during boot. The patch also includes the necessary Fixes and Signed-off-by tags. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a problem with chowning setuid files with xattrs in the reiserfs filesystem. The issue was that when the setuid bit was cleared during chown, the mode bits of the xattr directory were also modified, resulting in corruption. The patch addresses this by temporarily clearing everything but ATTR_UID|ATTR_GID for the calls to reiserfs_setattr and adding a missing IS_PRIVATE check in reiserfs_acl_chmod.

The patch has been reviewed and signed-off by Jeff Mahoney and Jan Kara, who are reputable contributors to the Linux kernel.

Based on the provided information, the patch appears to be a valid fix for the issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch reverts a previous commit that capped the 'capacity_now' value to 'full_charge_capacity' in the acpi_battery_get_state() function. The patch explains that capping 'capacity_now' is incorrect because good battery firmwares allow 'capacity_now' to increase above 'full_charge_capacity' and update the latter when the battery is fully charged. By capping 'capacity_now', accurate capacity reporting is lost until charging is complete whenever 'full_charge_capacity' needs to be increased.

The patch also includes a Fixes tag, indicating that it addresses a previous commit that introduced the incorrect behavior. Additionally, it has been tested on the 3.16+ stable branch.

Based on this analysis, it is recommended to accept the patch in Linux -stable releases.
true || NAK

The patch is attempting to fix a regression introduced in a previous commit. However, there were logic errors in the patch that prevented affected systems from booting even after the patch was applied. Additionally, the actual cause of the original problem is unknown as none of the developers have systems that are affected.

Given these issues, it is not recommended to accept this patch in Linux -stable releases.
true || ACK

This patch prevents stacking filesystems (such as ecryptfs and overlayfs) from using procfs as the lower filesystem. The reason for this is that there is a lot of complex functionality and access checks happening within procfs, and it is not advisable to stack other filesystems on top of it.

The patch sets the s_stack_depth field of the superblock to FILESYSTEM_MAX_STACK_DEPTH, effectively preventing any stacking on top of procfs.

Given the reasoning provided and the changes made, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch is a fix for a bug where polling the outputs when the device is suspended can result in erroneous status updates. The patch disables output polling during suspend to prevent this from happening. The patch has been reviewed by Alex Deucher from AMD and has been tested by the stable team. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the spi-topcliff-pch driver where the SSN (Slave Select Negation) signal becomes HIGH instead of staying LOW during the processing of a command/data series. The patch adds the necessary code to keep the SSN LOW when required.

The patch also removes two unnecessary lines of code that were previously setting the SSN to NO_CONTROL. These lines are redundant and can be safely removed.

Additionally, the patch adds a line of code to set the SSN to HIGH after the processing of the command/data series is complete. This ensures that the SSN is correctly controlled throughout the entire process.

Overall, the patch addresses the SSN Control issue and improves the functionality of the spi-topcliff-pch driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the wait bit helpers in the Linux kernel scheduler. The bug was introduced in commit 743162013d40, which inadvertently reversed the calls to schedule() and signal_pending(), causing the case where a signal is received while sleeping to not be handled correctly. 

The patch correctly restores the order of the function calls, ensuring that signal_pending() is checked after the sleep operation. This ensures that signals are properly handled and prevents RCU stall warnings.

The patch has been reported and tested by Vladimir Murzin, and has been reviewed by several kernel developers. It also includes the necessary Fixes and Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the initialization of the spin lock in the amd-xgbe network driver. The patch correctly initializes the spin lock using the proper pointer, which was previously initialized with the wrong pointer. This bug could potentially lead to incorrect behavior or crashes in the network driver.

The patch has been reviewed and signed-off by Tom Lendacky and David S. Miller, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a long-standing bug in the XFS filesystem where xfs_get_blocks() maps a single extent that spans EOF without marking it as buffer-new(). This causes the direct IO code to not zero the tail of the block at the new EOF, resulting in incorrect behavior.

The patch detects a mapping that spans EOF and truncates it down to EOF. This ensures that the direct IO code does the right thing for unaligned data blocks before EOF and then returns to get another mapping for the region beyond EOF, which is treated correctly by XFS by setting buffer_new() on it. This makes direct IO behave correctly with respect to tail block zeroing beyond EOF.

The patch has been reviewed and tested by multiple individuals, including Al Viro, Paul Gortmaker, Eric Sandeen, Brian Foster, and Christoph Hellwig. It also includes a fix for a build error reported by Paul Gortmaker.

Based on the analysis and testing, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a potential issue where requests may be lost if a stopped queue restarts before the requests are added to the dispatch list. The patch adds a check to ensure that requests in the rq_list are not lost in this scenario.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes two issues in the llc_ui_recvmsg() function in the af_llc.c file. 

First, for stream sockets, the patch sets the msg_namelen member to 0. This is important because without this update, the code leaks uninitialized kernel stack memory to userland. By setting msg_namelen to 0, we prevent this memory leak.

Second, the patch also fixes the missing msg_namelen update for datagram sockets in case the socket is shutting down during receive. This ensures that the msg_namelen member is properly updated in all cases.

Overall, this patch addresses important issues related to memory leaks and ensures proper behavior for both stream and datagram sockets. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the error case of the cdc-acm driver. If the probe() function fails, the attributes are removed but the memory allocated for the country_codes variable is not freed. This can lead to a memory leak.

The patch adds a call to kfree() to free the memory allocated for the country_codes variable in the error case. This ensures that the memory is properly freed and prevents a memory leak.

The patch also includes the necessary Signed-off-by tags and a CC to the stable@vger.kernel.org mailing list, indicating that it should be considered for inclusion in stable releases.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning that has been present since commit cc1ef118fc. The warning is triggered by passing -1 as the pipe for vblank events. The patch correctly passes the correct pipe to the event-send function and uses the new API to make it easier. The patch has been tested and reviewed by multiple individuals. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression in the spc_emulate_inquiry() code where the bounce buffer memory was not being zeroed, causing problems with SCSI initiators that depend on certain areas of the INQUIRY EVPD=0x83 payload being zeroed.

The bug was introduced in the v3.7-rc1 patch and the stable commit ffe7b0e9326d9c68f5688bef691dd49f1e0d3651. The patch re-adds the missing memset of the bounce buffer memory to be copied into the outgoing se_cmd descriptor kmapped SGL payload.

The patch has been reported by Kelsey Prantis and has been reviewed by Paolo Bonzini, Andy Grover, and the stable@vger.kernel.org mailing list.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a missing spin_unlock when tx frames get dropped due to a dma mapping error in the stmmac driver. The patch is signed-off by the author and has also been Acked by another developer from the same company. The addition of the spin_unlock is necessary to release the tx lock in case of a dma mapping error, preventing potential deadlocks or other issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch prevents userspace from declaring a random kernel thread as the owner of a user space PI futex. It adds a check to ensure that the task has a valid mm (memory management) structure before allowing it to be the owner of the futex. This is important for security reasons, as allowing kernel threads to be futex owners could lead to potential vulnerabilities.

The patch has been reviewed by several kernel developers and has been tested. It also has a link to the original discussion on the Linux kernel mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch updates the inode size and invalidates the inode attributes after a successful fallocate request in the fuse file system. This ensures that the latest attribute values are picked up and that the file size is correctly updated when the fallocate request extends the size of the file.

The patch also includes a fix for truncating the page cache range when the fallocate request includes the FALLOC_FL_PUNCH_HOLE flag.

Overall, this patch improves the correctness and consistency of the fuse file system when handling fallocate requests. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug introduced by a previous patch that was trying to fix a reported soft lockup issue. The bug causes an endless loop when dropping a lock while iterating a list. The patch correctly restarts the search after unlocking to avoid getting stuck in the loop. The fix has been tested and reviewed by multiple individuals. Additionally, it is believed that the soft lockup problem has been fixed by another patch. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch improves the error handling in the video/fb driver by propagating the error code from the failure to unregister a conflicting fb driver. This is important to avoid kernel panics when loading the second driver.

The patch modifies the function "do_remove_conflicting_framebuffers" to return an integer value indicating the success or failure of the unregister operation. The function "do_register_framebuffer" and "remove_conflicting_framebuffers" are also modified to handle the return value of "do_remove_conflicting_framebuffers" and propagate the error code if necessary.

Overall, this patch improves the robustness of the video/fb driver and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue in the cx88 driver when loading the cx88_dvb module for a Hauppauge HVR4000. The issue occurs because the wm8775 is optional, so even though the board info says there is one, it doesn't have to be there. The patch checks whether the module was actually loaded, which is a safer approach.

The patch has been reported and signed-off by multiple developers, including Hans Verkuil and Mauro Carvalho Chehab. It also includes a bugzilla bug report and a reported-by tag.

Based on the provided information, it seems that the patch addresses a valid issue and has been reviewed and tested by the community. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a situation where the kernel fails to find enough memory to instantiate RTAS (Run-Time Abstraction Services) during a network install. Instead of continuing to run and potentially failing in mysterious ways, the patch proposes to panic upfront if RTAS exists and memory allocation for it fails.

By panicking, the system will immediately halt and notify the user that it could not allocate memory for RTAS. This is a safer approach as it prevents further issues and allows the user to take appropriate action.

The patch has been reviewed and signed-off by multiple developers, including Anton Blanchard and Benjamin Herrenschmidt, which adds credibility to its correctness and effectiveness.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the controller is sometimes unable to complete the Control write status stage. The patch ensures that the PID_BUF is not cleared wrongly in the usbhsf_pio_try_pop() function. It also takes into account the case where the controller is in function mode and should not disable the pipe during the Control Write status stage. The patch has been reviewed and signed-off by the relevant developers.
true || ACK

Based on the patch description, it is a partial revert of a previous commit that added a cond_resched() call to __collapse_huge_page_copy(). The reason for the revert is that on x86 with CONFIG_HIGHPTE, __collapse_huge_page_copy() is called in atomic context and scheduling is not possible. This is only a possible configuration on arm and i386.

The patch removes the cond_resched() call and instead relies on the need_resched flag being set for over 100 jiffies during the iteration in __collapse_huge_page_copy(). This is considered better than using an if (in_atomic()) cond_resched() check to cover only non-CONFIG_HIGHPTE configurations.

The patch has been tested and reviewed by multiple individuals, including the original author, and has been found to be effective.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the powernow-k6 driver where the comparison is incorrectly done with the index instead of the value of 'max_multiplier'. The patch corrects this by comparing 'max_multiplier' with clock_ratio[index].driver_data. Additionally, the patch improves the for-loop condition by using CPUFREQ_TABLE_END instead of hard-coding the loop count to 8.

The patch has been reported by Viresh Kumar and has been reviewed and Acked-by Viresh Kumar. It has also been signed-off by Srivatsa S. Bhat and Rafael J. Wysocki.

Based on the provided information, the patch appears to be a valid fix for the bug and has been reviewed and Acked by relevant individuals. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the rtc_irq_set_state() function in the rtc interface code. The code currently unconditionally arms/disarms the hrtimer, regardless of the correctness of the parameters. This can lead to unexpected behavior where a random task might arm/disarm the rtc timer and surprise the real owner by either generating events or stopping them.

The patch adds a check for errors and if an error is detected, it immediately goes to the "out" label, skipping the arming/disarming of the hrtimer. This ensures that the hrtimer is only armed/disarmed when the parameters are correct.

The patch has been reviewed and signed-off by multiple developers, including the maintainers of the rtc subsystem and the stable kernel team. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch ports the changes made in the x86 pagefault handler to the 64-bit sparc architecture. These changes make the page fault handler retryable and killable, reducing the mmap_sem hold time during OOM killer invocation. The patch adds the necessary flags to the sparc64 fault handler to enable retry and killable behavior. It also handles the retry logic and updates the page fault counters accordingly.

The changes made in this patch are necessary for maintaining consistency and improving performance across different architectures. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a mistake in the current vfio-pci code where the check on the pci device type is incorrect. The current code uses the PCI_HEADER_TYPE value to mask the type value, which is incorrect. This patch fixes this by directly checking the pci_dev->hdr_type.

The patch has been signed-off by Wei Yang and Alex Williamson, and it is also marked for stable releases.

Based on the provided information, it appears that this patch addresses a bug in the code and improves the correctness of the check on the pci device type. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Based on the information provided in the patch, it is clear that the revert is necessary. The original patch was incorrect and caused issues with dithering on gen2/3 hardware. The lack of dithering has been reported by multiple users, indicating that it is a significant problem. Additionally, the references to bugzilla show that the original patch was unrelated to the dither bit issue.

The revert patch correctly restores the functionality for gen2/3 hardware by setting the dither state in pfit control. It also ensures that pre-965 hardware sets dither correctly for 18bpp panels.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the behavior of the KVM arm/arm64 vgic-v3 code to always resample the line level interrupt, regardless of the state in the list register. This ensures that spurious interrupts are not injected when they have already been retired.

The patch adds a condition to check if the interrupt configuration is level-based. If it is, the patch clears the soft pending state if the interrupt is not pending in the list register. Additionally, the patch always regenerates the pending state by setting it to the logical OR of the line level and soft pending states.

This change improves the correctness and reliability of the vgic-v3 code by ensuring that interrupts are handled correctly and spurious interrupts are avoided. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch removes redundant resource checks in multiple drivers. The drivers are already using devm_ioremap_resource, which performs sanity checks on the given resource. Therefore, there is no need to duplicate these checks in the drivers. The patch has been reviewed and Acked by Eduardo Valentin and signed-off by Wolfram Sang and Zhang Rui.
true || ACK

This patch converts the "ffs" macro in the CRIS architecture to a function-like macro. This change is necessary to avoid conflicts with code that uses identifiers called "ffs". The patch also fixes some compilation errors and warnings related to the "ffs" macro.

The patch has been reviewed and signed-off by several developers, including Geert Uytterhoeven, Mikael Starvik, Jesper Nilsson, Andrew Morton, and Linus Torvalds.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. The patch adds a check to ignore the STOP_AGG request from mac80211 when the device is being restarted. This is because when the device is restarted, all the Rx/Tx Block Ack sessions are wiped out by the driver. Therefore, honoring the request to stop Tx aggregation while reconfiguring the device is unnecessary. The patch also includes a comment explaining the rationale behind this decision.
true || ACK

This patch fixes a potential issue where there could be invalid memory access if zram->meta has been freed by zram_reset_device(). The patch adds locking using zram->init_lock to protect access to zram->meta, ensuring that it is not accessed after being freed.

The patch has been reviewed and Acked-by Minchan Kim <minchan@kernel.org>, indicating that it has been reviewed and approved by another developer.

Given that this patch addresses a potential issue and has been reviewed and approved, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the usbnet_stop() function in the usbnet.c file. The patch correctly reads the value of the EVENT_NO_RUNTIME_PM bit before it is cleared, ensuring that the correct value is used in the subsequent if statement.

The patch has been reviewed and Acked-by Oliver Neukum, who is a recognized expert in USB networking. This adds credibility to the patch and suggests that it has been thoroughly reviewed.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the iwlwifi driver that affects the antenna selection when Bluetooth (BT) is active. The bug caused the driver to choose the wrong antenna, which could disturb BT communication. This issue is critical on single antenna devices like the 3160, where the device couldn't connect at all when BT was active.

The patch correctly fixes the bug by using the non_shared_ant value directly instead of using the BIT macro. This ensures that the correct antenna is chosen when BT is active.

The patch also includes a reference to the bug report and is marked for inclusion in stable releases starting from version 3.17.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a list corruption issue in the xhci driver when dequeuing urbs at host removal. The issue occurs when usb_remove_hcd() is called a second time for the second xhci bus, and it tries to dequeue all pending urbs, touching td_list which has already been freed for that endpoint.

The patch adds a check to ensure that the xhci->devs[urb->dev->slot_id] is not NULL before iterating through the urb_priv->td array. This prevents accessing freed memory and resolves the list corruption issue.

The patch has been tested and reported by Joe Lawrence, and it has been signed-off by Mathias Nyman and Greg Kroah-Hartman.

Considering the nature of the issue and the provided fix, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds status and return request handlers to the HID wiimote driver. The status handler resets the current drm when an extension is plugged in and sends a status report. The return handler handles return reports from the wiimote, indicating the success or failure of requests that have been sent.

The patch also adds two new request IDs, WIIPROTO_REQ_STATUS and WIIPROTO_REQ_RETURN, to the enum wiiproto_reqs. These request IDs are then used in the handlers array to associate the corresponding handler functions.

Overall, this patch improves the functionality and reliability of the HID wiimote driver by handling status reports and return reports from the wiimote. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the sched_can_stop_tick() function where the tick is not re-enabled correctly in certain cases. The bug occurs when rq->cfs.nr_running is 1 even though there are multiple runnable CFS tasks. This can happen in the cgroup case where cfs.nr_running represents the number of runnable entities for that level.

The patch addresses this issue by reordering the checks in the function. It moves the fifo_nr_running test after the rr_nr_running tests, ensuring that fifo_nr_running is only used if there are no rr_nr_running tasks. This fixes the incorrect assumption that if there are FIFO tasks, they will always run.

The patch also includes the necessary Signed-off-by and Cc tags.

Based on the provided information, it seems that this patch is a valid fix for the reported bug and should be accepted in Linux -stable releases.
true || ACK

This patch allows for the change of default blkt values in the qeth driver. Currently, blkt changes are reset during online setting due to a second invocation of qeth_determine_capabilities(). This patch ensures that blkt default values are only configured during the first run of qeth_determine_capabilities(), allowing blkt changes to be kept during online setting.

The patch has been reviewed and signed-off by multiple developers, including the maintainer of the qeth driver. It also includes a reported-by tag, indicating that the issue being addressed was reported by a user.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a false-positive warning in the dev_pm_domain_set() function. The current implementation triggers a warning when attempting to clear the pm_domain pointer, even though it is expected behavior in certain cases. The patch modifies the code to check if the pointer passed to dev_pm_domain_set() is NULL and skips the warning in that case.

The patch has been tested by multiple individuals and has been reviewed and acknowledged by Ulf Hansson. It addresses a specific issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a check to require read access for controlling terminals in the drivers/tty/tty_io.c file. It prevents processes with only write access to the tty from obtaining the privileges associated with having a tty as a controlling terminal. This is a hardening fix that improves security.

The patch also modifies the tiocsctty function to include the same check for read access. This ensures that only processes with read access or CAP_SYS_ADMIN capability can set the controlling terminal.

Overall, this patch improves the security of the tty subsystem and should be accepted in Linux -stable releases.
true || ACK

This patch improves the code by using supply widgets to manage the ACTIVE bit in the WM8731 codec driver. It removes the open-coded handling of the ACTIVE bit and adds a supply widget for it. The patch also updates the DAPM route to connect the DAC and ADC to the ACTIVE supply widget.

The patch has been tested and reviewed by multiple developers, including Mark Brown, Nicolas Ferre, and Liam Girdwood. It does not introduce any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adjusts the display configuration after setting up the power state in the amdgpu_pm.c file. It updates the display watermarks based on the new power state and then updates the displays. This ensures that the proper order is achieved in the display changed handling. The patch has been reviewed and acked by Christian König and Jordan Lazare, and signed-off by Alex Deucher. It also includes the stable tag, indicating that it is suitable for inclusion in Linux -stable releases. Therefore, I recommend accepting this patch.
true || Based on the provided patch, it appears to be a valid fix for the issue reported by Aihua Zhang. The patch adds a check for write access on the underlying inode when truncating a file, ensuring consistency and preventing potential issues.

The patch also includes a test case that verifies the expected behavior of the truncate operation, which adds to the reliability of the fix.

Therefore, I would recommend accepting this patch in Linux -stable releases (ACK).
true || ACK

This patch corrects the mislabeling of the Microchip VID as Hornby VID in the ftdi_sio driver. The Microchip VID (0x04D8) and the Microchip USB Board PID (0x000A) are correctly identified and labeled. The patch also updates the comments in the ftdi_sio_ids.h file to reflect the correct information.

This patch is a simple correction and does not introduce any new functionality or changes that could potentially cause issues. Therefore, it can be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the sendfile(2) system call could be used to issue lots of writes into arbitrary file descriptors, making it unkillable. The patch adds a test for pending signals in the splice_from_pipe_next() function, allowing the process to be killed when there are always buffers available. This fix should resolve all lockup issues with sendfile of the do-ton-of-tiny-writes nature.

The patch has been reported by Dmitry Vyukov and has been reviewed and signed-off by Jan Kara and Al Viro. It is also marked for stable release.

Based on the provided information, the patch appears to address a valid issue and provides a reasonable solution. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes off-by-one errors when addressing the Input/Output Control register (IOR) in the 104-quad-8 driver. The base address was not properly offset, resulting in incorrect writes to the IOR. The patch correctly adjusts the base offset by adding 1, ensuring that the IOR is properly addressed.

The patch also includes the "Fixes" tag, referencing the commit that introduced the issue. This indicates that the patch is addressing a known bug.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Reasoning:
The patch removes the check for pending work in the vmpressure function. The reason for this is that the check is considered to be racy and doesn't provide much benefit since schedule_work already handles this case. The patch has been reviewed and Acked by Tejun Heo, who is a recognized kernel developer. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the IPv6 code where the xfrm6_find_1stfragopt() function may return an error code, but it was being treated as a length. The patch adds error handling to check if the return value is negative, and if so, it returns the error code.

The patch is small and straightforward, and it fixes a bug that could potentially lead to an overrun when parsing IPv6 header options. The patch has been reviewed and Acked-by Craig Gallek and Signed-off-by Ben Hutchings.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch removes the "weak" attribute from the declaration of the memory_block_size_bytes() function in the memory.c file. The "weak" attribute was causing issues with the linker choosing the correct definition of the function, leading to incorrect behavior.

By removing the "weak" attribute, we ensure that the non-weak definition of the function is always preferred, regardless of the link order. This will help in avoiding any potential conflicts and ensure the correct behavior of the memory_block_size_bytes() function.

The patch also includes the necessary Fixes tag and has been Acked by Andrew Morton, indicating that it has been reviewed and approved by a trusted source.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a register to the HW whitelist, which is required for a preemption related issue. It has been reviewed and signed-off by multiple Intel developers. The patch also includes a reference to the issue it addresses and a link to the patch discussion. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch makes the upper size bound of qdisc_skb_cb explicit, allowing it to be encapsulated inside other data structures. It also adds a validation function to ensure that the size of skb->cb and qdisc_skb_cb->data is sufficient for the specific data structure being used.

The patch is signed-off by the author and does not introduce any new functionality or changes that could potentially cause issues. It is a clean and necessary modification that improves the encapsulation of qdisc_skb_cb.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds the Qualcomm amba vendor ID to the list of vendor IDs in the ARM amba driver. The ID is used in the mmci driver. The patch also includes the necessary changes to the amba/bus.h header file.

The patch has been signed-off by Srinivas Kandagatla and Linus Walleij, and also includes the signed-off-by tag from Russell King.

The addition of the Qualcomm vendor ID is necessary for proper identification and support of Qualcomm devices using the amba bus. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the s390/dasd driver. The issue occurs when the del_gendisk function is called, but the gendisk's request_queue is modified before the put_disk call. This causes the gendisk_release function to be unable to release the reference to the request_queue, resulting in a memory leak.

The patch removes the modification of the gendisk's queue pointer before the put_disk call, ensuring that the reference to the request_queue is properly released. This prevents the memory leak from occurring.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a check in the _omap4_wait_target_ready/disable functions to verify the validity of clkctrl_offs. If clkctrl_offs is 0 and the HWMOD_OMAP4_ZERO_CLKCTRL_OFFSET flag is not set, the functions will return 0 without calling the low-level CM call.

This check ensures that the functions do not make unnecessary calls to the low-level CM call when clkctrl_offs is 0 and the flag is not set. This improves efficiency and avoids potential issues that may arise from calling the low-level CM call with an invalid clkctrl_offs value.

The patch has been reviewed and Acked-by Tero Kristo <t-kristo@ti.com>. Therefore, it can be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the fs_enet driver where fixed-link PHY devices were not properly deregistered and freed on probe errors and driver unbind. The patch adds the necessary code to deregister and free the fixed-link PHY devices in these scenarios.

The patch also includes a "Fixes" tag, indicating that it addresses a specific issue introduced by commit bb74d9a4a87b.

Overall, the patch looks correct and necessary for proper cleanup of fixed-link PHY devices. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the xfrm_state_construct() function introduced in commit 1a6509d99122. The function kmemdup()s the algorithm name but fails to free the memory. The patch adds a kfree() call to free the memory for the aead algorithm name.

The fix is simple and addresses a memory leak issue. It has been reviewed and Acked-by Rami Rosen. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where zone congestion clearing was happening unconditionally on higher order reclaim, which messed up the reclaim throttling logic for zones with dirty/writeback pages. The patch removes the clearing from the zone compaction section entirely and relies on the preliminary zone check and the reclaim loop in kswapd to clear it if the zone is considered balanced.

The patch has been reviewed and signed-off by multiple developers, including Linus Torvalds. It addresses a specific issue and does not introduce any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch modifies the code in drivers/char/msm_smd_pkt.c to replace the use of IS_ERR() with a check for NULL. The patch is correct because the various basic memory allocation functions in the code return NULL when they fail, not an ERR_PTR. Therefore, using IS_ERR() to check for errors in memory allocation is incorrect.

The patch also removes the unnecessary call to PTR_ERR() and instead prints a generic error message when kmalloc() fails.

Overall, this patch improves the code by using the correct error checking and simplifying the error handling. It should be accepted in Linux -stable releases.
true || ACK

This patch allows userspace to access registers in the gt power well on gen7. It adds a check to ensure that the patch is only applied on gen6 and above. The patch has been reviewed by multiple developers and has been signed-off by them. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a build failure issue when CONFIG_CPU_HAS_PMU is not selected by the platform. It changes the prototype of the release_pmu function to match the changes made in a previous commit. The patch has been signed-off by the relevant developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch enables the UART_BUG_NOMSR flag for Tegra chips in the 8250 serial driver. This flag prevents false interrupts from triggering and ensures that the UART IRQ is not disabled due to unhandled interrupts.

The patch also mentions that this is not needed for Tegra chips after Tegra30, as the hardware bug has been fixed. It is also not needed for UARTs C..E since their MODEM control signals are tied to the correct static state. Additionally, if the MODEM control signals for UARTs A..B are routed out to package pins, the issue is also avoided.

Although there are exceptions to when this flag is needed, the patch mentions that currently supported boards do not hook up more than a 4-wire UART, so the exceptions can be ignored for now.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the drm/i915/fbdev driver where the tile configuration is repeated indefinitely if no matching outputs are found. The patch introduces a conn_seq variable to keep track of the previously configured connectors and stops looping over the remaining unconfigured outputs if no progress is made. This prevents the driver from getting stuck in an infinite loop.

The patch has been reviewed and tested by multiple developers and has a Fixes tag referencing the commit that introduced the bug. It also has a link to the patch discussion on the patchwork mailing list.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where IRQs occupied by ISA IRQs are being shared with PCI link devices, causing interrupt storms due to incompatible pin attributes. The patch adds a check to avoid allocating IRQs that are already occupied by ISA IRQs for PCI link devices.

The patch has been reviewed and Acked-by Bjorn Helgaas, indicating that it has been reviewed and approved by a trusted source.

The patch also includes additional changes to the acpi_pci_link_allocate function and the acpi_isa_irq_available function to handle cases where no IRQ is available for the PCI link device and to check if an ISA IRQ is available, respectively.

Overall, this patch addresses a specific issue and has been reviewed and approved by a trusted source, making it suitable for inclusion in Linux -stable releases.
true || ACK

This patch fixes a buffer overflow issue in the blk-mq sysfs file 'pending'. The buffer of PAGE_SIZE may not be able to hold all the pending requests, leading to a buffer overflow. This can occur when there are lots of pending requests in the hardware queue, such as in the case of scsi-mq.

The patch addresses this issue by checking if the output will be truncated and handling it appropriately. If the output will be truncated, it backspaces if it can't hold '\t...\n' and adds '\t...\n' to indicate that the output has been truncated. Otherwise, it adds the pending requests to the buffer.

This patch is necessary to fix the warning and related memory destruction that occur due to the buffer overflow. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where a requeued request may stay forever in the queue if there are no other I/O activities to the device. The bug was introduced in v2.6.39 and started to manifest in v4.1-rc1.

The patch adds a call to "blk_run_queue_async(q)" after requeuing the request, which ensures that the queue is kicked and the requeued request is processed.

The fix is straightforward and addresses a known issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the ssu100 USB serial driver. The patch replaces the attach and release functions with port_probe and port_remove functions, which properly allocate and free the port private data. The patch has been compile-only tested and has been reviewed by the stable maintainers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch reverts a previous commit that added a quirk for a MicroTouch Systems touchscreen. The reason for reverting the commit is that the issue is not seen on younger units, indicating that it was specific to prototypes. Since the issue is not present on newer units, there is no need to keep the quirk in the code. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a typo in the code where the next pointer is incorrectly named as "list" instead of "link". This typo causes the code to walk random data instead of the intended list. The patch correctly renames the next pointer to "link" and ensures that the code walks the correct list.

The patch has been reviewed and signed-off by Alex Williamson and Marcelo Tosatti, who are recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch removes a circular dependency issue in the libata transport code. Without this patch, failed probe would not free resources like irq. The patch removes the need for ata device objects to hold a reference to their real counterpart, as the transport objects are the children of these objects and device_add() is called for each child. The parent will not be deleted until the child's device_del() is called. The patch has been reported, tested, and suggested by reputable sources. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the c_can driver where the number of transmitted bytes was not updated correctly when multiple CAN messages with different lengths were transmitted in one batch. This resulted in incorrect transmit byte counts being shown in programs like 'ifconfig'. The patch ensures that the correct message object is used to read the DLC (Data Length Code) when updating the transmit byte count.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and review. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || Based on the provided patch and the description of the issue it addresses, I would recommend accepting this patch in Linux -stable releases (ACK).

The patch addresses a bug where the old inode cache is used even when the file type is different. This can cause issues such as not being able to cd into a directory or cat a symbolic link. The patch fixes this by returning an error if the file type is different.

The bug is reproducible and has been reported in the bugzilla.kernel.org with the bug link provided. The patch has also been reviewed and Acked-by Jeff Layton and Signed-off-by Nakajima Akira and Steve French.

The code changes in the patch are also straightforward and seem to correctly handle the case where the file type (mode) has changed. The patch checks both the uniqueid and the file mode to determine if the inode needs to be recreated.

Overall, the patch seems to address a valid bug and has been reviewed and tested. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the beep input device is not properly detached after module unload, leading to an Oops. The patch adds a new function `cx_auto_free` which detaches the beep device and frees the codec. The `free` callback in `cx_auto_patch_ops` is updated to use `cx_auto_free` instead of `snd_hda_gen_free`.

The patch has been reviewed and signed-off by Takashi Iwai, who is a well-known contributor to the ALSA project.

The bugzilla link provided in the patch also confirms the existence of the bug and the proposed fix.

Therefore, based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a panic issue in the sock_diag_put_filterinfo function in the sock_diag.c file. The function currently tries to access the filter length and copy the filter instructions from the orig_prog, which is always NULL for native eBPF programs attached to sockets. This patch adds a check for NULL orig_prog and skips the operation if it is NULL.

The patch also mentions that this issue is currently only affecting packet sockets and that if native eBPF support is added in the future, a different attribute should be used to avoid confusion with user space disassemblers.

The patch has been reviewed and Acked-by two other developers, Nicolas Dichtel and Alexei Starovoitov.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an initialization failure on non-exynos3250 SoCs that was introduced in a previous commit. The patch adds a check to only initialize the rtc source clock if it is needed, preventing the failure on SoCs that don't require it.

The patch has been reviewed and signed-off by Marek Szyprowski and Chanwoo Choi from Samsung, as well as Andrew Morton and Linus Torvalds. The changes in the patch are also correct and do not introduce any new issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the issue of white noise on Dell laptops caused by the login screen and headphone. The fixup function ALC292_FIXUP_DISABLE_AAMIX is able to eliminate this noise. The patch adds a new entry in the alc269_fixup_tbl table for the Dell laptop with Vendor Id 0x10ec0293 and Subsystem Id 0x102806db, which is the correct entry for the affected Dell laptop model.

The patch has been tested and verified to fix the issue on the affected Dell laptop model. It has also been reviewed and signed-off by multiple developers, including Woodrow Shen and Takashi Iwai.

Considering the nature of the issue and the correctness of the patch, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a double fetch security bug in the MIC VOP driver. The driver performs two successive reads from user space to read a variable length data structure. However, if the data structure changes between the two reads, it can result in kernel memory corruption. This patch disallows the chance of this happening by checking if the data structure has changed between the two reads using memcmp.

The bug has been reported and reviewed, and the patch has been signed-off by the relevant developers. It also includes a reference to the Bugzilla report and is marked for stable release.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch changes the scaling mechanism in the intel_pstate driver to use the maximum P-state instead of the maximum turbo P-state. This change resolves two issues: 

1. On a quiet system, intel_pstate can fail to respond to a load change.
2. On CPU SKUs that have a limited number of P-states and no turbo range, intel_pstate fails to select the highest available P-state.

The patch has been reported and tested by multiple individuals, including Arjan van de Ven and dsmythies@telus.net. It has also been Acked-by Viresh Kumar.

The patch is suitable for stable v3.9+ and has been reviewed and signed-off by Dirk Brandewie and Rafael J. Wysocki.

Based on the provided information, it seems that this patch addresses known issues and has been tested and reviewed by multiple individuals. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch increases the maximum number of OSD devices from 64 to 1,048,576. The patch author has tested the patch with 300 devices and all user-mode utilities work fine. They have also tested with 10,000 additional devices and were able to create a filesystem and access the devices from user-mode. The patch is important for systems that will be deploying the 3.2 pnfs-objects code and have more than 64 OSDs. The patch is safe and well-tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the ITS driver's its_free_tables() function. Currently, the function only frees a single page, regardless of the number of pages that have been allocated. This patch modifies the code to record the memory size for each ITS_BASERn at the time of page allocation and uses the same size information when freeing pages.

The patch has been reviewed and Acked-by Marc Zyngier <marc.zyngier@arm.com>. It also includes the necessary Signed-off-by tags.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch optimizes the port allocation process in the TCP bind() function. Currently, the code finds a port and then drops the lock, only to acquire the lock again immediately after. This is inefficient and can lead to unnecessary contention.

The patch fixes this issue by directly going to the desired hash bucket without dropping the lock. This improves performance by avoiding the unnecessary lock acquisition.

The patch has been reviewed and Acked-by Eric Dumazet, indicating that it has been reviewed and approved by a trusted developer.

Therefore, based on the optimization and the positive review, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a potential issue in the pkt_sched module of the Linux kernel. The issue occurs when the old timestamps of a class become stale and QFQ assigns a much higher start time to the class than the maximum allowed value. This can corrupt the data structure and potentially lead to crashes.

The patch limits the maximum start time assigned to a class, ensuring that it does not exceed a certain limit. This prevents the corruption of the data structure and improves the overall stability of the system.

The patch has been reviewed and signed-off by Paolo Valente and David S. Miller, indicating that it has undergone proper testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the vrsave register is not being saved between context switches on CPUs without support for both ALTIVEC and COHERENT_ICACHE features. The value of vrsave is used to determine if altivec is being used in several code paths. By removing the redundant check for CPU_FTR_COHERENT_ICACHE, the patch ensures that vrsave is correctly saved and restores the functionality of the vector register save/restore code.

The patch also includes the Fixes tag, indicating that it addresses a specific commit, and is signed-off by multiple developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch aims to cap the transport reconnection timer at 1/2 lease period in order to prevent missing a lease period renewal due to a TCP connection failure. By limiting the reconnection timer, the patch ensures that the connection attempt is retried at least every 1/2 lease period.

The patch modifies the `nfs4_set_lease_period` function in `fs/nfs/nfs4renewd.c` to include the cap on the maximum reconnect timeout. It also adds a new function `rpc_cap_max_reconnect_timeout` in `net/sunrpc/clnt.c` to handle the cap on the maximum reconnect timeout.

The patch is well-documented and the changes are localized to the relevant functions. It addresses a specific issue and provides a clear solution. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the implementation of the WaWmMemoryReadLatency feature in the drm/i915/gen9 driver. The patch correctly implements the requirement that only level 0 should have 2us added to its latency if its response data is 0us. Additionally, the patch sanitizes the values retrieved from the punit to disable levels m (m >= n) if level n (n > 1) has a 0us latency.

The patch has been reviewed and tested by Maarten Lankhorst and has a Fixes tag referencing the commit that introduced the issue. It also has a Cc to the stable@vger.kernel.org mailing list, indicating that it should be considered for inclusion in the Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch improves the vhost/scsi driver by using vmalloc for order-10 allocation. It adds a fallback to vzalloc if kzalloc fails, which is necessary because the vhost scsi device struct is large and kzalloc might fail on a busy system. The patch also adds __GFP_REPEAT to kzalloc flags to do the fallback only when really needed, reducing the overhead on the data path.

The patch has been reviewed by Asias He and reported by Dan Aloni. It has also been signed-off by Michael S. Tsirkin, the author of the patch.

The changes in the patch are necessary for better memory allocation and error handling in the vhost/scsi driver. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the stmmac driver where there is no checking for a valid value of maxmtu when getting it from the device tree. The patch adds a checking condition to ensure that the assignment is made within a valid range.

The patch has been reviewed by Andy Shevchenko and signed-off by Kweh, Hock Leong and David S. Miller.

The patch modifies the stmmac_main.c and stmmac_pci.c files to add the necessary checking and set a default value for maxmtu.

Overall, this patch improves the stability and correctness of the stmmac driver and should be accepted in Linux -stable releases.
true || ACK

The patch removes redundant kcore_list entries, specifically kcore_mem and kcore_vmalloc. The author of the patch has provided a clear explanation for the removal and it seems to be a straightforward cleanup. Additionally, the patch has been signed-off by both Kyle McMartin and Linus Torvalds, which adds credibility to its acceptance. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the XFS filesystem where log space is not correctly accounted for when writing an unmount record. The bug causes a leak of 8 bytes of log space per freeze/unfreeze cycle. The patch correctly accounts for the space used by the unmount record and removes the inited flag.

The patch has been reviewed by Dave Chinner and Christoph Hellwig, and has been signed-off by Ben Myers.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a new TLV (Total Loudness Volume) for the Beep Volume control in the CS42L52 codec driver. The TLV is declared with a scale of -56dB to 200dB, which is appropriate for the Beep control that uses a 2dB scale from -56dB. The patch also updates the SOC_SINGLE_SX_TLV macro to use the new beep_tlv TLV for the Beep Volume control.

Overall, this patch adds necessary functionality to the CS42L52 codec driver and does not introduce any potential issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch removes the duplicate call to pci_disable_device in _scsi_suspend, which is unnecessary and results in a kernel oops. The patch has been signed-off by the author and the relevant maintainers have been CC'd. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the batman-adv module where the CRC computation for the translation table (TT) is affected by the byte order of the VID variable. This leads to a continuous CRC mismatch between nodes with different endianess. The patch resolves this issue by converting the VID to network order before processing it, ensuring that every node uses the same byte order.

The patch has been reported by Russel Senior and tested by Russell Senior. It has also been signed-off by Antonio Quartulli and Marek Lindner.

The patch modifies the `batadv_tt_global_crc` and `batadv_tt_local_crc` functions in the `translation-table.c` file.

Based on the provided information, the patch appears to be a valid fix for the bug and should be accepted in Linux -stable releases.
true || ACK

This patch fixes two issues related to handling EVEX-encoded instructions in uprobes. The first issue is related to the extended bits for MODRM.rm field, which need to be sanitized to avoid encoding the wrong register for register-relative access. The patch ensures that the extended bits are sanitized correctly for EVEX-encoded instructions.

The second issue is related to fetching vex.vvvv for EVEX-encoded instructions. The patch modifies the code to fetch vex.vvvv for EVEX-encoded instructions, making use of the fact that the instruction decoder now populates vex_prefix.bytes[2] for all flavors of (e)vex encodings, even for VEX2.

The patch has been reviewed and Acked-by several kernel developers, including Masami Hiramatsu, Srikar Dronamraju, and Denys Vlasenko. It also includes a Fixes tag, indicating that it addresses a specific commit.

Based on the provided information, it seems that the patch is necessary and has been reviewed by experts in the field. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the fuse_file_put() function where the "force" flag was missing for the RELEASE request when sending synchronously. Without this flag, a sync request may be interrupted before it is dequeued by the userspace filesystem, resulting in an unbalanced OPEN and RELEASE.

The patch adds the missing FR_FORCE flag to ensure that the sync request is not interrupted and the OPEN is properly balanced with a RELEASE.

The patch also includes the Fixes tag, indicating that it addresses a specific bug, and the Cc tag for stable@vger.kernel.org, suggesting that it should be considered for inclusion in stable releases.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in commit f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, which broke cache resizing support in dm cache. The issue is that dm_cache_resize() is called with cache->cache_size before it gets updated to new_size, resulting in a no-op. However, the dm-cache superblock is still updated with the new_size, even though the backing dm-array is not resized.

The patch addresses this issue by passing the new_size to dm_cache_resize() instead of cache->cache_size. This ensures that the cache is properly resized and the dm-cache superblock is updated correctly.

The patch has been reviewed and Acked-by Joe Thornber <ejt@redhat.com>, indicating that it has been reviewed and approved by another developer. This adds credibility to the patch.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the GPU is assumed to be idle even when the device is asleep. By adding an early return in the i915_gem_wait_for_idle() function, the patch avoids touching registers and checking hardware state outside of the assumed GT wakelock. This prevents errors related to RPM wakelock reference not being held during HW access.

The patch has been reviewed and tested, and it is a cherry-pick from a commit that has already been merged. Therefore, it is safe to include this patch in Linux -stable releases.
true || ACK

This patch fixes a broken error handling in the iio:ad7266 driver. The current code checks for NULL when calling regulator_get(), which is incorrect since regulator_get() returns either a pointer to a regulator or an ERR_PTR(). The patch corrects this by using IS_ERR() to check for errors as expected.

The patch has been reviewed and signed-off by Mark Brown and Jonathan Cameron, who are both maintainers of the iio:ad7266 driver. It is also marked for stable release, indicating that it is a fix for a stable kernel version.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference issue that causes an OOPS on boot on LPC32xx boards. The issue is caused by some GPIO names being set to NULL, which creates a hole in the linear representation of one GPI bank. The patch checks for both NULL gpio names and NULL input names, ensuring that the comparison is only performed when both are valid. This prevents the OOPS from occurring.

The patch has been reviewed and signed-off by Vladimir Zapolskiy and Linus Walleij, indicating that it has been tested and approved by them. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where page protection flags were not being properly handled for PAE kernels, leading to W+X pages being reported as insecure during boot. The patch correctly updates the types used for page protection flags, ensuring that _PAGE_NX can be properly represented. The patch has been reviewed and signed-off by Jan Beulich and Juergen Gross, and it has also been marked for stable release. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the cycles:pp event was not working on certain machines. The issue was caused by a previous commit that disabled event flags for PEBS on certain microarchitectures, but forgot to explicitly allow the cycles:pp event. This patch adds the missing event constraint for the cycles:pp event on Core2, Atom, Nehalem, and Westmere microarchitectures.

The fix has been reported by Ingo Molnar and signed-off by Peter Zijlstra (Intel). It also includes the necessary Cc's and Fixes tags.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a timestamping failure on nv-40 and earlier with vga output. It checks if the output is a vga analog output and if so, it aborts the scanoutpos query to trigger a simple timestamping fallback. This is necessary because the vtotal/htotal registers are not initialized for vga analog outputs, causing the timestamping failure.

The patch has been reviewed and signed-off by Mario Kleiner and Ben Skeggs. It also includes a stable tag for backporting to older kernel versions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an error return code in the pcf2123_probe() function in the rtc-pcf2123.c driver. The patch correctly returns -ENODEV in the chip not found error handling case, which is consistent with the error handling in other parts of the function.

The patch has been reviewed and signed-off by multiple developers, including Linus Torvalds. Therefore, it can be considered a reliable and well-tested fix.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the complete() function is called after returning from a wait_for_completion_timeout() call that has timed out. This can cause subsequent transmissions on a channel to fail. The patch skips the complete() call for timer expiry, preventing this issue.

The patch has been reported by Alexey Klimov and signed-off by Sudeep Holla and Jassi Brar. It fixes a problem introduced by the commit 2b6d83e2b8b7, which introduced the mailbox framework.

The changes in the patch are correct and address the reported issue. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch improves the error reporting in the sparc64 architecture by providing more detailed information in the pgd_ERROR() and pmd_ERROR() macros. It also removes the unused pte_ERROR() macro.

The new implementation of pmd_ERROR() and pgd_ERROR() macros prints the address and value of the pgd/pmd that caused the error, as well as the caller function. This additional information will be helpful in debugging and understanding the context of the error.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the qib_mr structure in the qib_verbs.h file. The bug was causing random memory corruption and was easily reproducible. The patch correctly moves the additions of members before the qib_mregion structure, as noted in the comment. The patch also includes the necessary Fixes tag and has been reviewed and signed-off by relevant developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a warning from lockdep caused by calling cancel_work_sync() for an uninitialized struct work. The patch initializes the kmem-cache destroying work earlier, which resolves the warning.

The patch also adds the initialization of the destroy work for kmem_cache_destroy and memcg_register_cache functions, ensuring that the work is properly initialized before being used.

Overall, this patch addresses a potential issue and improves the stability of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential use-after-free bug in the irda driver. The patch moves the debugging printk statement inside the spinlock protection, ensuring that the self->ctrl_skb is not accessed outside of the lock. This prevents any potential use-after-free issues.

The patch has been reported by Dmitry Vyukov and has been reviewed by Samuel Ortiz. It has also been signed-off by Cong Wang and David S. Miller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a lockdep error in the Btrfs async commit. The error occurs when the lockdep complains about a bad unlock balance. The patch correctly checks if it's okay to tell lockdep that the rwsem is being released. It checks if the transaction handle's type is TRANS_ATTACH and if it is, it won't acquire the freeze rwsem. This prevents lockdep from complaining. The patch has been tested and signed-off by multiple developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a refcount bug in the mlxsw spectrum driver. The bug occurs when binding a port to a newly created span entry, where the refcount is initialized to zero even though it has a bound port. This can lead to unexpected behavior when trying to delete that port from the span entry.

The patch initializes the reference count to 1 when creating the span entry, ensuring that it is correctly incremented when the entry already exists. Additionally, a warning is added to the put function to check that the refcount is not zero before decrementing it.

The patch has been reviewed and signed-off by multiple developers from Mellanox, indicating that it has undergone thorough testing and review.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the hns_dsaf module autoload does not work when the driver is built as a module. The patch exports the module alias information using the MODULE_DEVICE_TABLE() macro, allowing user-space to match the registered device with the corresponding module.

The patch adds the necessary module alias information to the modinfo output, which confirms that the fix is working as expected.

Additionally, the patch includes the appropriate Signed-off-by tags from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a problem where buffers over a failed write range were not properly cleared, causing issues with writeback and potential data corruption. The patch correctly clears the state on the buffer to ensure that it is not mistaken for containing valid data. It has been reviewed and tested, so it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the doorbell register length to 32 bits for Skylake NTB, as per the specification. The doorbell registers are 32-bit write-only registers, while the source for the doorbell is a 64-bit register that shows the interrupt bits.

The patch changes the `db_size` field in the `struct intel_ntb_reg` from `sizeof(u64)` to `sizeof(u32)`, ensuring that the doorbell register length is correctly set to 32 bits.

The patch has been reviewed and Acked-by Allen Hubbe <Allen.Hubbe@dell.com>.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the CPU hotplug code for the powernv platform to always put offline CPUs into nap mode, regardless of the powersave_nap variable. This change is necessary for HV-style KVM on this platform, as it requires secondary CPU threads to be offline and in nap mode.

The patch has been reviewed and signed-off by Paul Mackerras and Benjamin Herrenschmidt, who are both experienced developers in the Linux kernel community.

The change is specific to the powernv platform, which is only supported on POWER7 machines. Since nap mode is known to work fine on all POWER7 machines, there should be no negative impact on other platforms.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a copy-paste bug where the wrong field was being read. Although the wrong value is not causing any serious damage, it is still a bug that should be fixed. The patch correctly updates the field to be read, ensuring that the correct value is used for optimization. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a situation where association restarts do not take into consideration the state of the socket. This can lead to a condition where a remote system creates a local association that is not reachable by the user. The patch moves the newly established association into the SHUTDOWN-SENT state and bundles a SHUTDOWN after the COOKIE-ACK chunk. This ensures that the restarted association immediately enters the shutdown procedure and forces the termination of the unreachable association.

The patch also increases the maximum number of commands from 14 to 20 in the command.h file.

Overall, this patch fixes a potential issue and improves the handling of association restarts. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a PCI error on lantiq by restoring the former order of adding controllers before the specified head. The patch uses list_add_tail to achieve this. The fix has been tested and the error has been resolved.

The patch also includes the necessary Fixes tag, Signed-off-by tags, and a reference to the patchwork link for further review.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the checking of the return value of blk_mq_init_queue in three different drivers: null_blk.c, nvme-core.c, and virtio_blk.c. The patch changes the check from "!nullb->q" to "IS_ERR(nullb->q)" in null_blk.c, from "!dev->admin_q" to "IS_ERR(dev->admin_q)" in nvme-core.c, and from "!q" to "IS_ERR(q)" in virtio_blk.c.

The change to use IS_ERR() instead of just checking for NULL is more robust and follows the recommended practice. It allows for better error handling and ensures that any error condition is properly handled.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds locking to the i_mmap_mutex for accessing the VMA prio list in the NOMMU code. Currently, only certain parts of the mmap handling are protected by the region mutex, but not all. This can lead to concurrent access issues.

The patch adds mutex_lock and mutex_unlock calls to lock and unlock the i_mmap_mutex when accessing the VMA prio list. This ensures that concurrent access is prevented and avoids potential race conditions.

The patch has been reported by Al Viro and has been Acked by Al Viro as well. It also includes the cc: stable@vger.kernel.org, indicating that it is suitable for inclusion in the Linux -stable releases.

Therefore, based on the provided information, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a live deadlock problem caused by an infinite loop in the brcms_c_wait_for_tx_completion() function. Although it is not considered the proper fix, it provides a workaround that helps prevent system lockup.

The patch has been reported and tested by Patrick and has been signed-off by Stanislaw Gruszka and John W. Linville. It also includes a reference to the bug report on kernel.org.

The patch modifies the brcms_c_wait_for_tx_completion() function by adding a timeout mechanism to break the loop after a certain number of iterations. This prevents the system from getting stuck indefinitely.

Overall, the patch seems reasonable and necessary to prevent system lockup. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue introduced in commit 8eba0eefae24953962067, where the trigger configuration for requesting an irq was removed. This assumption that the interrupt trigger is already properly configured cannot be safely made, as some boards disable all interrupt triggers on boot.

To address this issue, the patch forces the irq to trigger on a rising edge, which is also the default for the chip. This ensures that the irq is properly configured even on boards where the interrupt triggers are disabled.

The patch has been reviewed and signed-off by Phoebe Buckheister and David S. Miller, and the changes are limited to the at86rf230.c file.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the intel_pstate driver where the global P-state limits are unnecessarily changed when calling intel_pstate_update_perf_limits() from intel_cpufreq_verify_policy(). This can be confusing and goes against user expectations.

The patch removes the invocation of intel_pstate_update_perf_limits() from intel_cpufreq_verify_policy(), reducing the code size and ensuring that the global limits are only applied to the frequency selected by the scaling governor in passive mode. This change does not affect the per-CPU limits case.

The patch has been tested and fixes the issue. It has also been reviewed and signed-off by the appropriate maintainer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the incorrect access of enum controls in the wm8994 codec driver. The current driver accesses the enum controls using value.integer.value[], which is incorrect. The correct way to access enum controls is via value.enumerated.item[]. 

The patch modifies the code to use value.enumerated.item[] instead of value.integer.value[] for accessing the enum controls. This ensures that the enum controls are accessed correctly.

The patch has been reviewed and signed-off by Takashi Iwai and Mark Brown, who are both recognized contributors to the Linux kernel. The patch also includes the appropriate Cc to the stable@vger.kernel.org and sound/soc/codecs/wm8994.c mailing lists.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the logic in the netxen_nic_poll() function in the netxen driver. The current logic does not correctly handle the case where a driver limits TX completion. The patch ensures that when the limit is hit, the driver returns the budget instead of the number of received packets.

The patch has been reported and tested by Mike Galbraith and has been reviewed and acknowledged by Manish Chopra. It is also signed-off by Eric Dumazet and David S. Miller.

Based on the provided information, the patch appears to be a valid fix for the issue and has received appropriate review and testing. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a synchronization issue in the MCG (Multicast Group) cleanup process in the mlx4 driver for InfiniBand. The current implementation can lead to a situation where the cleanup occurs after a ULP (Upper Layer Protocol) has left and re-joined groups, resulting in the ULP being left without the actual MCGs while believing it has joined them.

The patch addresses this issue by setting a flushing flag before invoking the cleanup task and clearing it after the flushing is complete. This ensures that the cleanup process is synchronized with the ULP operations, preventing the ULP from being left without the actual MCGs.

The patch has been reviewed and signed-off by multiple developers, including the original author and reviewers from Mellanox. It also includes a clear explanation of the problem and the solution.

Therefore, based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a quirk to avoid setting BLM_PCH_PWM_ENABLE for Dell XPS 13 models. It addresses a bug where some machines suffer from non-functional backlight controls if BLM_PCH_PWM_ENABLE is set. The patch has been tested and verified by multiple individuals.

Given that the patch provides a solution to a known issue and has been tested, it should be accepted in Linux -stable releases.
true || ACK

This patch removes the skb allocation failure warnings in the staging octeon-ethernet driver. The warnings were triggering a page allocation warning and one of them was not ratelimited, causing the system to lock up under heavy traffic and low memory conditions.

The patch has been reviewed and Acked-by David Daney and Jason A. Donenfeld, indicating that they have reviewed and approved the patch.

The changes in the patch remove the warning message and the associated code that was causing the warnings. This is a valid fix for the issue and does not introduce any new problems.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the request's __data_len field may overflow when merging discard requests. The issue was observed while doing mkfs.f2fs on a 5GB SD card. The patch modifies the blk_queue_get_max_sectors function to return the minimum value between the current max_discard_sectors limit and UINT_MAX shifted right by 9 bits. This ensures that the request's __data_len field does not overflow.

The patch has been tested and reported to fix the issue by Max Filippov. It has also been signed-off by James Bottomley and Namjae Jeon. Additionally, it has been reviewed and tested by Jens Axboe.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a type warning in the NVMe driver on 32-bit machines. The warning is caused by a cast to pointer from an integer of a different size. To resolve this warning, the patch introduces a new temporary variable called "metadata" that uses a double cast to extract the pointer from an __u64 structure member.

The patch has been reviewed and Acked-by Keith Busch and signed-off by Arnd Bergmann and Jens Axboe.

The patch is a simple fix that resolves a warning and does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a race condition between incoming traffic and initialization flow in the mlx4_en driver for Mellanox ConnectX 10GbE NIC. Currently, there is a possibility of missing interrupts about completions if heavy traffic is running during the port bring-up process. The patch schedules NAPI once the port_up flag is set, which ensures that all completions are processed and released if the receive queues were full.

The patch includes a fix reference and is signed-off by multiple developers, including the driver maintainer. It also adds a comment explaining the purpose of the added code.

Based on the provided information, the patch appears to be a valid fix for the described issue and should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug in the rtlwifi driver where there are duplicate calls to ieee80211_register_hw(). The patch removes the redundant call in the rtl92se_fw_cb() function. This fix ensures that the ieee80211_register_hw() function is only called once, preventing any potential issues or conflicts.

The patch also removes some unnecessary code related to error handling and initialization of variables. These changes improve the code readability and maintainability.

Overall, the patch is a straightforward fix that addresses a specific issue without introducing any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch removes the need for the shark_led_work function to take the v4l2 lock, which improves the efficiency of the code. The patch also cancels the work sync in the disconnect function, ensuring that the work is properly canceled before the device is disconnected. Overall, this patch improves the code and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition in the dm cache code that can cause dirty blocks to be marked as clean incorrectly. The patch reorders the operations in the migration_success_pre_commit() and migration_success_post_commit() functions to ensure that clear_dirty() is called before cell_defer(). This ensures that incoming bios for the block are detained in the cell and released only after clear_dirty() has completed, preventing the race condition from occurring.

The patch has been reviewed and Acked-by Joe Thornber and signed-off by Anssi Hannula and Mike Snitzer. It also includes the necessary Cc to the stable@vger.kernel.org mailing list and the relevant file.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. It adds a check to ensure that byte 0 of the virtio-scsi LUN structure is set to '1', as required by the virtio spec. If the check fails, it sends a bad target response. This patch improves the compliance of the vhost/scsi driver with the virtio-scsi specification, ensuring correct behavior and compatibility with virtio devices. The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough review and testing.
true || ACK

This patch updates the check_for_illegal_area function in the dma-debug.c file to use _stext instead of _text. The _text symbol is not guaranteed to contain only text sections across architectures, which can lead to bugs on architectures like ARM that may reuse parts of _text that are not actually text. By switching to _stext, which is guaranteed to contain text sections, this patch ensures that the check for illegal memory mappings from the kernel text or rodata sections is accurate.

The patch has been reviewed and signed-off by multiple developers, including Laura Abbott, Kees Cook, Russell King, Arnd Bergmann, Andrew Morton, and Linus Torvalds. It also includes a reference to the original discussion on the Linux kernel mailing list.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch makes the cpu_tss symbol available to external modules by exporting it with EXPORT_PER_CPU_SYMBOL. This allows macros and inline functions such as set/get_fs and test_thread_flag to be usable again for external modules. The patch has been reviewed and Acked-by Andy Lutomirski. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a bug that occurs when calling a similar function from an unbound workqueue on a fully preemptable kernel. The bug causes a kernel panic with a stack trace indicating a preemptible code issue.

The patch solves the problem by protecting the critical section of code with disabling preemption and then reenabling it. This ensures that the code is executed atomically and avoids any race conditions or preemptible issues.

The patch has been reviewed and Acked-by two developers, Jason A. Donenfeld and Hannes Frederic Sowa, indicating that they have reviewed and approved the patch.

Therefore, based on the analysis and the Acked-by tags, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a locking error in the musb driver for host-only mode in USB. The issue occurs when USB gadgets are disabled and USB_MUSB_HOST is set, resulting in "possible irq lock inversion dependency detected" errors during boot. The patch adds a start_musb flag and starts the controller after exiting the spinlock protected section, resolving the issue.

The patch has been reported and tested by Ladislav Michl, and it has been signed-off by multiple developers, including Tony Lindgren, Bin Liu, and Greg Kroah-Hartman.

Based on the analysis, the patch appears to be a valid fix for the reported issue and has undergone testing. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the error path of the whiteheat USB serial driver. It correctly deallocates the command buffer before returning an error. The patch has been reviewed and signed-off by Johan Hovold and Greg Kroah-Hartman, indicating that it has been tested and approved by the relevant parties. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with RNDIS devices that include a bogus CDC Union descriptor pointing to non-existing interfaces. The patch adds a workaround to handle devices without a CDC Union descriptor by hardwiring the driver to use interfaces 0 and 1, which is correct for devices with the bogus descriptor as well. The patch also introduces a new boolean variable "android_rndis_quirk" to handle the specific case of Android RNDIS devices with a CDC Union descriptor pointing to non-existing interfaces.

The patch has been reviewed by several individuals and has been tested on affected devices. It does not introduce any new issues and provides a solution to handle the problematic RNDIS devices.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the n_tty driver by ensuring that the read_head is incremented after the data is placed in the buffer. The previous code incremented the read_head before placing the data, which could lead to communication errors.

The patch is a simple and straightforward fix that addresses the issue for non-SMP machines. It does not introduce any new functionality or potential regressions.

However, the patch does not address the issue for SMP machines, as it mentions that memory barriers need to be added in a separate patch. This means that the fix is not complete and may not fully resolve the race condition in all scenarios.

Nevertheless, since the patch does fix the issue for non-SMP machines and does not introduce any new problems, it can be accepted in Linux -stable releases. The issue for SMP machines can be addressed separately in a future patch.
true || ACK

This patch fixes a bug reported by Boris where system suspend/resume gets broken on AMD platforms. It prevents binding other PCI drivers to IOMMU PCI devices, which is necessary for the proper functioning of the AMD IOMMU driver. The patch also includes the necessary changes to the code to implement this fix.

Given that this patch addresses a reported bug and improves the stability of the system, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM nVMX code that can cause corruption of the vmcs12 state. The issue occurs when the vmx_vcpu_put function is preempted by Linux after loading the shadow VMCS but before the vmx_vcpu_load function is called. This can result in the wrong vmcs being used, leading to corruption of the vmcs12 state.

The patch addresses this issue by disabling preemption during the copy operation in the copy_shadow_to_vmcs12 function. This ensures that the correct vmcs is used and prevents corruption of the vmcs12 state.

The patch has been reviewed and signed-off by Jan Kiszka and Paolo Bonzini, who are both recognized contributors to the Linux kernel.

Therefore, based on the analysis of the patch and the expertise of the sign-offs, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the iuu_phoenix USB driver. The patch replaces the attach and release functions with port_probe and port_remove functions, respectively. The port private data is no longer freed at release as it is no longer accessible since a previous commit. The patch has been compile-only tested and has been reviewed by the stable maintainers.

The patch correctly allocates and frees the port private data buffers. It also sets the port data correctly using the usb_set_serial_port_data function. The patch also updates the usb_serial_driver structure to use the new port_probe and port_remove functions.

Based on the analysis, it can be concluded that the patch is correct and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the powerpc/spufs code that has been present for 3 1/2 years. The bug causes incorrect behavior when dumping information about SPU contexts during a core dump. The issue was introduced in commit 7b1f4020d0d1 ("spufs: get rid of dump_emit() wrappers") where the variable nread was removed and rc was used instead. However, rc was not properly set to 0 in the success case, causing incorrect return values.

The patch correctly sets rc to 0 before returning in the success case, ensuring that the function returns 0 on success as intended. The patch also includes the necessary Fixes and Signed-off-by tags.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where under unusual circumstances, TCP collapse can split a big GRO TCP packet while it is being used in a splice(socket->pipe) operation. The patch modifies the tcp_recv_skb() function to handle this situation by eating the skbs in tcp_recv_skb().

The patch has been reported by Christian Becker and tested by Willy Tarreau. It has also been signed-off by Eric Dumazet and David S. Miller.

Overall, the patch addresses a specific bug and has been tested and reviewed by multiple individuals. Therefore, it should be accepted in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK). 

The patch addresses a bug where using certain commands in konsole with recent kernels can cause konsole to freeze when CTRL-C is pressed. The bug report suggests that the same problem exists in Solaris, indicating that it is a general issue with the pty in Linux.

The patch fixes the issue by modifying the behavior of pty_flush_buffer. It disables ldisc flush in pty_flush_buffer, as the data in ldisc belongs to the application of another side and should not be cleared when flushing the write buffer of this side. The patch also mentions that no other flush_buffer function in other tty drivers has the same behavior as the current pty_flush_buffer.

Overall, the patch seems to address a specific bug and provides a reasonable solution. Therefore, I would recommend accepting it in Linux -stable releases.
true || ACK

This patch adds a check to disallow remounting a filesystem as read-write if it has unknown ro-compat features. This is important because writing to the filesystem may corrupt metadata related to the new feature, and moving to a newer kernel that understands the feature may cause problems.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone thorough testing and review. It also includes a warning message to inform users about the prohibited transition.

Considering the potential risks of corrupting metadata and the added protection for users using newer mkfs with older kernel releases, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the IPv4 routing code where local routes were being removed when a network device went down, even if the local address was still present. The patch adds a new parameter 'force' to the function 'fib_sync_down_dev' and uses it to determine whether the local routes should be deleted or not.

The patch includes a clear description of the problem and the fix, as well as a step-by-step guide to reproduce the issue. It also includes the necessary Signed-off-by tags.

The code changes are straightforward and do not introduce any new complexity or potential issues. The patch has been reviewed and tested by the author.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds support for only IPv4 TCP/UDP checksum offload in the smsc95xx driver. It disables checksum offload for IPv6 packets, as the LAN95xx device does not alter the computed checksum of 0 to 0xffff for IPv6 UDP packets. This behavior is in accordance with RFC 2460, which states that the IPv6 UDP checksum of zero must be changed to 0xffff. 

The patch also updates the features and hw_features flags accordingly, enabling checksum offload only for IPv4 packets. This ensures that the transmitted checksum for IPv4 UDP packets is all ones, indicating that the transmitter generated no checksum.

Overall, this patch improves the behavior of the smsc95xx driver for IPv4 and IPv6 UDP packets, and it should be accepted in Linux -stable releases.
true || ACK

This patch fixes hangs in certain cases by skipping the MC reset if it is busy instead of assuming it is hung. The patch has been reported by Josh Boyer and signed-off by Alex Deucher, who is a maintainer of the radeon driver. The change is made in multiple files (evergreen.c, ni.c, r600.c, si.c) to ensure consistency across different GPU architectures. The patch includes debug messages to indicate when the MC is busy and being cleared.

Based on the provided information, it seems reasonable to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the DMA engine and hstimer on the A31 are not working properly if AHB1 is clocked from the CPU clock. The patch forces the AHB1 clock to use PLL6 as its parent, which resolves the instability issue with the timer.

The patch has been reported by multiple individuals and has been tested in newer versions of mainline U-boot. It is necessary to include this fix in the Linux kernel as well to ensure compatibility with older versions of U-boot and vendor versions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a crash caused by an invalid ACPI BGRT header layout on certain systems. The patch adds a check for the status field in the BGRT header to validate it before proceeding with BGRT initialization. This ensures that only valid BGRT headers are processed, preventing the crash.

The patch has been reported by Madper Xie and suggested by Toshi Kani. It has also been reviewed by several other individuals, including Rafael J. Wysocki, Matthew Garrett, and Josh Triplett. The patch has been signed-off by Matt Fleming.

Based on the provided information, it is clear that the patch addresses a specific issue and adds a necessary validation check. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the Btrfs self-tests where the extent buffer bitmap test fails on big-endian systems such as ppc64. The issue is caused by the difference in granularity between extent_buffer_test_bit() and test_bit(). The patch introduces a new helper function, test_bit_in_byte(), which reads the bitmap in byte granularity, ensuring that the correct bits are compared on big-endian systems.

The patch has been reviewed by Josef Bacik and Chandan Rajendra, and signed-off by Feifei Xu and David Sterba. The fix is specific to the Btrfs file system and does not affect other parts of the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in changeset e87b540be2dd that broke RC5-SZ decoding. The patch adds the missing check for the RC_BIT_RC5_SZ protocol in the enabled_protocols bitmask. Without this check, the RC5-SZ decoding will not work correctly.

The patch has been reviewed and Acked-by David Härdeman, indicating that it has been tested and found to be correct. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue where glitch signals (Low to High transition) might be input to hardware blocks if pin-muxing is set up before input-enable is set. This can lead to invalid characters being input to UART blocks in certain SoCs.

The patch addresses this issue by setting input-enable before pin-muxing in the uniphier_pmx_set_one_mux function.

The fix has been reported and signed-off by multiple developers, including the original author and Linus Walleij. It also includes a Fixes tag referencing the commit that introduced the pinctrl support for UniPhier.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch addresses a bug in omapdrm where dispc's pm_runtime function is called in atomic context, causing a sleeping function to be called from an invalid context. By setting the irq_safe flag for dispc's pm_runtime, the issue is fixed.

Although the long-term solution would be to have omapdrm manage the runtime PM calls in a better way, the patch provides an immediate fix for the bug.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a necessary delay to wait for the chip to be ready before any access to it. It addresses a specific issue on the Snowball platform where the device is not yet ready at probe time. By waiting for the chip to be ready, it ensures that the device is fully operational before any further operations are performed.

The patch introduces a new variable "to" which is set to 100, representing the maximum number of iterations to wait for the chip to be ready. It then enters a loop that checks the READY bit in PMT_CTRL register using the smsc911x_reg_read() function. If the READY bit is not set within the specified time, it prints an error message and returns -ENODEV.

This patch improves the reliability and stability of the driver by ensuring that the chip is ready before any access is made to it. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the scsi/sd.c file where the capacity calculation was incorrect when the kernel was not compiled with large sector_t support (CONFIG_LBDAF). The patch adds a sanity check function, sd_addressable_capacity(), to ensure that the reported capacity can be expressed in terms of sector_t.

The patch also includes a fix for the read_capacity_16() and read_capacity_10() functions to use the sd_addressable_capacity() function instead of directly checking the size of sdkp->capacity.

The patch has been reviewed and tested by Bart Van Assche and reported by Steve Magnani. It is also signed-off by Martin K. Petersen.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds support for TC encapsulation offloads with upper devices in the mlx5e driver. It addresses a specific use-case where the uplink device is stacked under upper devices such as bridge or ovs internal port, and the VTEP IP address used for encapsulation is set on that upper device.

The patch modifies the mlx5e_route_lookup_ipv4 function to handle the case where the egress device is not representing a port on the HW e-switch to which the ingress device belongs. It uses the eswitch service function to get the uplink device and sets it as the egress device of the tc encap rule.

The patch also fixes a warning message that was being printed when the devices are not on the same HW e-switch.

The patch has been reviewed and signed-off by multiple developers from Mellanox, indicating that it has undergone thorough testing and review.

Based on the provided information, it seems that the patch is necessary to support the mentioned use-case and does not introduce any known issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning triggered by the -Wstringop-overflow flag introduced in GCC 7. The warning occurs in the mem_init() function in the sparc architecture due to the declaration of empty_zero_page in arch/sparc/include/setup.h. The patch aligns the declaration of empty_zero_page to that of other architectures and fixes the warning.

The patch modifies the declaration of empty_zero_page in arch/sparc/include/setup.h and arch/sparc/mm/init_32.c to be an array of unsigned longs instead of a single unsigned long. This aligns the declaration with other architectures. The patch also modifies the ZERO_PAGE macro in arch/sparc/include/setup.h to use virt_to_page(empty_zero_page) instead of virt_to_page(&empty_zero_page).

The patch also modifies the mem_init() function in arch/sparc/mm/init_32.c to use memset((void *)empty_zero_page, 0, PAGE_SIZE) instead of memset((void *)&empty_zero_page, 0, PAGE_SIZE). This ensures that the empty_zero_page is properly initialized.

Overall, this patch addresses the warning and aligns the declaration of empty_zero_page with other architectures. It is a straightforward fix and does not introduce any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where kdump fails if there is pending IO and the controller does not respond. The patch adds a check for the DMA start bit before reset, and if it is cleared, the PIO command is successful and kdump succeeds.

The patch modifies the functions k2_sata_softreset and k2_sata_hardreset to include the check for the DMA start bit and clear it if necessary. This ensures that the start bit is cleared before the reset is performed.

Overall, this patch improves the reliability of kdump in the presence of pending IO, and therefore should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the gpiolib driver for the wm8994 GPIO controller. The current implementation does not pay attention to the value being set when enabling the GPIO pin as an output. This means that the hardware may not be set up correctly to reflect the requested value, leading to incorrect results for the caller.

The patch addresses this issue by checking the value parameter and setting it to the appropriate level (WM8994_GPN_LVL) before calling the wm8994_set_bits function. This ensures that the hardware is properly configured to reflect the requested value.

The patch has been reviewed and signed-off by Mark Brown and Linus Walleij, indicating that it has been tested and found to be correct. It is also marked for stable release, indicating that it is a bug fix that should be backported to stable kernel versions.

Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

This patch fixes a stack corruption issue in the pseries specific code dealing with huge pages. The issue occurs in the __pSeries_lpar_hugepage_invalidate() function where the buffer used to pass arguments to the hypervisor is not large enough, leading to stack corruption. This can result in unexpected results and panics.

The patch increases the size of the parameter buffer to PLPAR_HCALL9_BUFSIZE, fixing the stack corruption issue. Additionally, it changes the definition of the parameter buffer in pSeries_lpar_flush_hash_range() to rely on the global define PLPAR_HCALL9_BUFSIZE, with no functional change.

The patch has been reviewed and tested by multiple individuals, including Laurent Dufour, Aneesh Kumar K.V, and Balbir Singh. It also fixes a bug that has been pending since v3.11.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the xfs_file_dio_aio_write function in the xfs_file.c file. The error value being returned from the filemap_write_and_wait_range function is incorrectly negated, which results in wrong error sign conversion during failed DIO writes.

The patch correctly removes the negation of the error value, ensuring that the correct error signs are used. The patch has been reviewed by Dave Chinner and Christoph Hellwig, which adds credibility to its correctness.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK). 

The patch fixes a previous commit that was incomplete. It prevents sched scan while not idle, including during association or in AP mode, instead of only preventing it while associated. This ensures that sched scan is prevented in all cases when the device is not idle, which is the desired behavior.

The patch has been reviewed and signed-off by multiple developers from Intel, indicating that it has undergone thorough review and testing. The changes are also localized to the iwlwifi driver, specifically in the mvm directory, which reduces the risk of introducing unintended side effects.

Overall, the patch appears to be a valid and necessary fix, and it has received appropriate review and testing. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the error is not reported to the MMC core when the host_sleep_config command fails. By returning an error to the MMC core, it properly indicates the failure for the device. Additionally, the patch removes a redundant misspelled variable.

The patch has been reviewed and signed-off by the relevant developers. It does not introduce any new issues and addresses a specific problem. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the DSP bit mask for the RDDSP and WRDSP instructions in the MIPS architecture. The previous mask field was incorrect and could result in unpredictable operation. The new mask field is 10 bits long, which aligns with the architecture specification.

The patch has been reviewed and signed-off by Steven J. Hill and Ralf Baechle, who are both recognized contributors in the Linux MIPS community. The patch has also been submitted to Patchwork for further review.

Based on the information provided, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the iwl3945 driver that caused firmware errors and made the device non-usable. The bug was introduced in commit bdb084b22d8aee66c87af5e9c36bd6cf7f3bccfd, which broke the length settings of the dma buffers in the il3945_tx_skb() function.

The patch correctly calculates the length of the dma buffers and fixes the mapping errors. It also adds additional checks for dma mapping errors. The patch has been tested and reported by multiple users, and it has been signed-off by the author and the maintainer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug related to the backlight on some machines. The original sequence of register writes for restoring the backlight was changed in a previous commit, which caused non-working backlights on some machines. This patch reverts the sequence back to the original one and adds a conditional check to set the backlight level only if it has been reset to zero. The patch has been reviewed and acked by Takashi Iwai and Jani Nikula.

Based on the provided information, it seems that this patch addresses a specific issue and has been tested and reviewed. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes the maxburst settings in the ASoC tegra dmaengine code. The burst size is now set correctly for playback and capture, ensuring that the I2S controllers do not overflow the available FIFO space. The changes in the patch are necessary and do not introduce any new issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug related to the ordering of function calls in the x86/apic module. The bug causes a suspicious RCU usage warning and a stack backtrace when the RCU is used illegally from an idle CPU. The patch moves the irq_enter() call before the ack_APIC_irq() call, which ensures that the RCU subsystems end the extended quiescent state before the trace call in ack_APIC_irq() is executed. The same ordering change is also applied to the exiting_ack_irq() function. The patch has been reviewed and signed-off by multiple developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a data exposure issue in ext4 filesystem after a crash. The problem occurs when delayed allocation is used and the IO scheduler or device reorders the allocation of blocks and the writing of their contents. This can result in stale block contents being exposed. The patch adds the inode to the transaction's ordered inode list to ensure that block contents are written before committing the transaction.

The patch also handles other cases where stale data exposure was possible, such as filling a hole via mmap in data=ordered,nodelalloc mode.

The patch has been tested and reported by Huang Weller, and it is also marked as a fix for a specific commit.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the handling of the interlaced bit for sdvo dtd conversion in the drm/i915 driver. It properly sets the interlaced flag based on the mode flags and updates the mode flags based on the dtd flags. The patch also adds comments and defines proper names for the magic numbers used in the dtd flags.

The patch has been tested and reviewed by trusted individuals. It also includes a Tested-by tag from Peter Ross and a Reviewed-by tag from Paulo Zanoni. The patch is also marked for stable release, indicating that it is a bug fix.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a bug on the sparc architecture where deallocated stack memory can be referenced, leading to potential corruption of data. The patch adds a data compiler barrier to work around this issue. The patch has been tested and reported by Anatoly Pugachev and has been reviewed and signed-off by David S. Miller and Herbert Xu.

The patch modifies multiple files in the Linux kernel, including drivers/infiniband/sw/rxe/rxe.h, fs/btrfs/hash.c, fs/f2fs/f2fs.h, and lib/libcrc32c.c. The changes in these files are consistent with the fix for the sparc bug and do not introduce any new issues.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a possible NULL pointer dereference in the s2mps11_clk_parse_dt() function. If the parent device does not have of_node set, the function was returning NULL, which was later passed to of_clk_add_provider() and dereferenced in a pr_debug() call. 

The patch changes the return value to ERR_PTR(-EINVAL) when the parent device does not have of_node set, which is a valid error value. This prevents the NULL pointer dereference and improves the stability of the code.

The patch also includes the necessary Signed-off-by tags and is CC'd to the stable mailing list, indicating that it is suitable for inclusion in the Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the vti6 interface where the RTM_NEWLINK message is missing the IFLA_INFO_KIND attribute. The patch reorders the attachment of the rtnl_link_ops block to ensure that the interface is registered correctly.

The patch has been signed-off by Dave Forster and David S. Miller, indicating that it has been reviewed and tested.

Based on the provided information, it appears that the patch addresses a specific issue and has been reviewed by the appropriate individuals. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the musb driver where the schedule_delayed_work() function was being called with the delay in milliseconds instead of jiffies. The patch corrects the caller sites in musb_core.c and musb_virthub.c to use msecs_to_jiffies() to convert the delay to jiffies before passing it to schedule_delayed_work().

This bug caused regressions with the cleanups that went in for version 3.14 of the Linux kernel. By fixing this bug, the patch ensures that the musb driver works correctly and does not introduce any regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a device reference count leakage issue in the function eeepc_rfkill_hotplug() in the eeepc-laptop driver. The patch correctly handles error conditions by releasing the device reference count using pci_dev_put(). This ensures that the reference count is properly managed and prevents any potential resource leaks.

The patch has been reviewed and signed-off by multiple developers, including Jiang Liu, Bjorn Helgaas, and Matthew Garrett, which adds credibility to its correctness and effectiveness.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch removes the setting of skb->sk in two places in the appletalk code. The patch explains that setting skb->sk without taking its reference and setting a destructor is invalid. However, in the places where this was done, skb is used in a way that does not require skb->sk setting. Therefore, dropping the setting of skb->sk is a correct solution.

The patch also includes the Bugzilla link where the bug was reported, as well as the signed-off-by tags from the authors and maintainers involved.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug in the remove_one() function of the dm btree module. The bug was causing not all entries to be removed, resulting in discards that were not unmapping all blocks. The patch adds the missing increment to the key for the beginning of the range, ensuring that all entries are properly removed. The patch also includes the necessary Fixes and Signed-off-by tags. Overall, the patch addresses a bug and improves the functionality of the dm btree module, so it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a bug where connection reset would hang indefinitely once percpu_ida_alloc() was starved for tags. The patch fixes this issue by making percpu_ida_alloc() check for signal_pending_state() to make interruptible sleep optional. It also converts iscsit_allocate_cmd() to set TASK_INTERRUPTIBLE for GFP_KERNEL or TASK_RUNNING for GFP_ATOMIC.

The patch has been reported by Linus Torvalds and has been reviewed by Kent Overstreet. It has also been tested and is suitable for stable releases starting from version 3.12.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a regression caused by commit 520bd7a8b415, which optimized boot time by detecting cards simultaneously. However, this change caused issues for platforms that rely on fixed mmcblk device indexes. Instead of reverting the commit, this patch proposes a solution that restores the behavior of how mmcblk device indexes are picked.

By using the same index for the mmcblk device as for the corresponding mmc host device, the probe order of mmc host devices determines the index for the mmcblk device. This updated behavior should be sufficient to meet the expectations of platforms that suffer from the regression.

Additionally, this change clarifies the relationship between the mmc host device, mmcblk device, and mmc block queue by using the same index for all three.

The patch has been reported by Peter Hurley and Laszlo Fiat, and it fixes the issue caused by commit 520bd7a8b415. It has also been reviewed by Linus Torvalds and is suitable for inclusion in the Linux -stable releases.
true || ACK

This patch fixes a regression in the card detect (CD) function for dt platforms in the sdhci-esdhc-imx driver. The regression was introduced in commit 8d86e4fcccf6, which broke the CD function for dt platforms by returning directly when finding ESDHC_CD_GPIO, resulting in the SDHCI_QUIRK_BROKEN_CARD_DETECTION quirk being wrongly kept for all dt platforms. This caused MMC_CAP_NEEDS_POLL to be used instead of the valid GPIO card detect.

The patch adds back the CD function and follows the original approach to clear the quirk if a valid CD GPIO is found for dt platforms.

The patch has been reviewed and signed-off by Dong Aisheng and Johan Derycke. It has also been signed-off by Ulf Hansson.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the 8250 driver does not properly handle the absence of the scratch register on certain hardware, such as Au1x00/RT2800+. The patch adds a check to read back the canary value written to the scratch register and only assigns it to the "up->canary" variable if the read value matches the canary value.

The patch has been reported by Mason and signed-off by Peter Hurley and Greg Kroah-Hartman, indicating that it has been reviewed and tested by multiple individuals.

Based on the provided information, the patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch addresses an issue where the connector driver is probed before the encoder driver, resulting in an error. The patch introduces a deferred probe mechanism to ensure that the probe is delayed if the video source is not present for connector drivers.

The patch modifies the return value from -ENODEV to -EPROBE_DEFER in the error handling code, indicating that the probe should be deferred. This change allows the connector driver to wait for the encoder driver to be probed before proceeding.

Overall, this patch improves the stability and reliability of the HDMI connector driver with the sil9022 encoder. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a module parameter 'enable_rf_gain_ctrl' to the HackRF driver, which allows enabling RF gain control. By default, the RF gain control is set to the 'grabbed' state, which prevents setting the value to the control. This is done to prevent the Avago MGA-81563 RF amplifier from being destroyed easily with too strong a signal or transmitting to a bad antenna.

The patch also sets the RF gain control to the 'grabbed' state for both the receiver and transmitter controls in the hackrf_probe function.

This patch is important for preventing potential damage to the RF amplifier and provides a way to enable RF gain control if needed. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug that causes a kernel oops when inserting an element into a verdict map in nf_tables. The bug is caused by forgetting to fill the net pointer in bind_ctx, which leads to a kernel crash when dereferencing it.

The patch adds the missing assignment of ctx->net to bind_ctx.net, ensuring that the net pointer is properly initialized. This prevents the kernel crash and resolves the issue.

The patch has been reported by Dalegaard and signed-off by Liping Zhang and Pablo Neira Ayuso, who are recognized contributors to the Linux kernel.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the VMCS may become outdated while enabling PML. The patch ensures that the VMCS remains current by performing the necessary VMWRITEs while the CPU is pinned. Additionally, the allocation of the PML buffer is hoisted out of the critical section.

The patch has been reviewed and signed-off by Peter Feiner and Paolo Bonzini, indicating that it has undergone thorough testing and review.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the handling of multiple RMRRs (Reserved Memory Region Reporting) for the same PCI device in the iommu/vt-d driver. The current implementation assumes that there is only one RMRR for each PCI device, which causes DMA failures on some HP platforms. The patch enhances the dmar_iommu_notify_scope_dev() function to handle multiple RMRRs for the same PCI device.

The bug has been reported and tested by HP, and the fix has been reviewed and signed-off by the relevant maintainers. The patch is also marked for inclusion in the stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a bug where the inode of a file is not freed when the file is unlinked and closed after being opened by fhandle with a cold dcache. The bug occurs because there are two dentries for the file - one created by open-by-fhandle and one used by unlink. The dentry created by open-by-fhandle is considered hashed and remains in memory indefinitely, preventing the final iput() from being called.

The patch modifies the dput() function in fs/dcache.c to check for the DCACHE_DISCONNECTED flag in the dentry's d_flags field. If the flag is set, the function immediately frees the inode. This ensures that the inode is freed even if there are disconnected dentries.

The patch has been reviewed and Acked-by J. Bruce Fields <bfields@fieldses.org>.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the reporting of overrun errors in the keyspan USB driver. It correctly inserts a null character and reports the overrun error only once. The patch also uses the TTY_NORMAL flag for non-error bytes, which is the correct behavior.

The patch includes a Fixes tag, indicating that it addresses a specific commit. It also includes a Cc tag for the stable mailing list, suggesting that it should be considered for inclusion in stable releases.

Based on the analysis, the patch appears to be correct and necessary for fixing the overrun error reporting in the keyspan USB driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the mutex is unlocked even if the sanity check fails in the scu_command() function. The patch adds a printk statement to log the error and returns the status instead of going to the error label. This ensures that the mutex is not unlocked when the sanity check fails.

The patch has been reviewed and signed-off by the author and the maintainer. It is also marked for stable release, indicating that it is a suitable fix for a stable release.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where the "of_irq_parse_pci() failed with rc=-19" error messages are being emitted even when the PCI_INTERRUPT_PIN value is zero, which is a legitimate case for a PCI device. The patch moves the printing code into of_irq_parse_pci() and only emits the error message when PCI_INTERRUPT_PIN == 0 is not the cause for an early exit.

The patch also includes proper error handling by using a goto statement to jump to the error handling code in case of an error. It sets the appropriate error code and emits the error message using dev_err().

Overall, this patch improves the error handling and eliminates the unnecessary error messages, making it suitable for inclusion in Linux -stable releases.
true || ACK

This patch adds a missing RPM reference to the i915_gem_pwrite_ioctl function in the drm/i915 driver. Without this reference, there is a possibility of hitting a device suspended warning, which can lead to a deadlock. The patch also includes a testcase and a bugzilla reference.

The patch itself adds the necessary code to take the RPM reference before acquiring the mutex lock and releases it before returning. This ensures that the RPM reference is properly managed and avoids any potential deadlock.

Based on the provided information, the patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch adds an assertion to mark AoE packets as requiring no checksum. This is important for the network layer to handle AoE packets correctly. The patch is simple and does not introduce any new functionality or potential issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch is a workaround for a bug in an old version of GCC (GCC-3.4.6) that is still supposed to be supported. The bug causes a link-time error when the udelay() function is called with a fixed value of 100 microseconds. To fix this, the patch replaces the unused variable "delta" with a constant value of 100.

The patch has been tested and reported by Konrad Rzepecki, and it has also been reviewed and signed-off by Alan Stern and Greg Kroah-Hartman.

Since this patch addresses a specific bug in an old version of GCC and has been tested and reviewed, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a compilation error that occurs when CONFIG_OF is disabled. The patch modifies the of_match_device() function to nullify the table pointer if CONFIG_OF=n. This ensures that the driver can compile successfully even when CONFIG_OF is disabled.

The patch has been reported by Yoshihiro Shimoda and signed-off by Geert Uytterhoeven and Rob Herring. It also includes a modification to the include/linux/of_device.h header file.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a double-free issue in the perf subsystem. The issue occurs when rb->aux_refcount is decremented to zero before rb->refcount, resulting in a double free of rb->aux_pages. The patch adds a check in __rb_free_aux() to prevent the double free from happening.

The patch has been reviewed and signed-off by multiple developers, including the original author and maintainers of the affected code. It also includes a Fixes tag, indicating that it addresses a specific bug.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced in commit 861d2107, which caused a crash when a different mutex was used to protect the same list. The patch correctly changes the mutex used in nvc0_fb_vram_new function to use pfb->base.mutex instead of nouveau_mm->mutex. This ensures that the same mutex is used to protect additions and deletions to the list.

The patch has been tested and reported by Roy Spliet, and it is a stable candidate for version 3.7 of the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where the driver recovery requires the device's list node to be initialized. The patch initializes the device list head before starting, ensuring that the driver recovery can work properly.

The patch has been reported by Steven Noonan and signed-off by Keith Busch and Jens Axboe. It also includes the necessary changes in the nvme-core.c file.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a potential issue with the idle_task_exit() function in the sched/core.c file. Currently, the function uses switch_mm_irqs_off() which can be called with IRQs on x86. However, this can cause confusion with upcoming TLB flush changes. The patch suggests using switch_mm() instead, which is more appropriate in this case.

The patch has been tested and does not cause any problems. It is also considered trivial and will not have any meaningful performance impact since idle_task_exit() is only used when offlining a CPU.

The patch has been reviewed and signed-off by multiple developers, including the original author and maintainers of the affected code. It also includes a Fixes tag, indicating that it addresses a specific issue introduced in a previous commit.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch aligns the behavior of O_TMPFILE with O_CREAT in the Linux kernel. Currently, when O_CREAT is used with open(), the 'mode' argument only applies to future accesses to the file. However, when O_TMPFILE is used, the 'mode' argument is ignored, leading to inconsistent behavior.

The patch modifies the do_tmpfile() function in fs/namei.c to pass MAY_OPEN as the acc_mode argument to may_open() instead of op->acc_mode. This ensures that the behavior of O_TMPFILE matches that of O_CREAT.

The patch has been reviewed and Acked-by Andy Lutomirski. It also includes a reference to a related glibc bug.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the mfd driver code where the ACPI conflict check is not correctly performed. Currently, the code only checks the first resource of every device, which is incorrect. This bug has been present since February 2010.

The patch fixes the check to run on each resource individually, ensuring that the conflict check is performed correctly. This will prevent any potential resource conflicts from being missed.

The patch has been reviewed and signed-off by Jean Delvare and Samuel Ortiz, indicating that it has been tested and verified. It is also marked for inclusion in stable releases, indicating that it is a necessary fix for stable kernel versions.

Therefore, based on the provided information, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the NFS4 module where the FATTR4_WORD0_FS_LOCATIONS bits are not cleaned up after decoding success. This causes the decode_getfattr_attrs function to always return -EIO when encountering FS_LOCATIONS. The patch clears the FATTR4_WORD0_FS_LOCATIONS bit earlier, resolving the issue.

The patch has been reviewed and signed-off by multiple developers, including Andreas Gruenbacher, Kinglong Mee, and Trond Myklebust. It is a simple and straightforward fix that addresses a specific bug without introducing any new issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes an issue where rounddown_pow_of_two() is called with a value of 0, which is undefined behavior. The patch adds a check using is_power_of_2() to avoid calling rounddown_pow_of_two() with a value of 0. This ensures that the function is only called when the value is a power of 2. The patch also includes the necessary Signed-off-by and Acked-by tags. Overall, the patch is a simple and necessary fix for the undefined behavior issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM architecture where the late_alloc() function does not call pgtable_page_ctor() on PTE pages it allocates, leaving the per-page spinlock uninitialized. This can lead to a crash when using the new UEFI memory attributes table code.

The patch adds an unconditional call to pgtable_page_ctor() in late_alloc() to ensure that the struct pages are fully constructed and the per-page spinlock is initialized.

Since the UEFI subsystem is currently the only user of create_mapping_late(), this patch is safe to apply and should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where changing the MTU under heavy load can result in blocking all port's interrupts and transmitting data is not possible after the change. The patch addresses this issue by disabling percpu interrupts when TXQs and RXQs are reconfigured. This ensures that the interrupts are not blocked and data transmission can continue after the MTU change.

The patch also includes the necessary functions to enable and disable percpu interrupts. These functions are called before and after the reconfiguration of TXQs and RXQs.

Overall, the patch provides a necessary fix for a specific issue and includes the required changes to enable and disable percpu interrupts. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch introduces a semaphore for locking access to the hyperv_mmio resource tree in the drivers/hv/vmbus_drv.c file. The resource tree is created in single-threaded code and is never modified after creation. However, other patches in the series introduce run-time modifications to the resource tree that can happen on multiple threads. Therefore, introducing a semaphore for locking access to the resource tree is necessary to ensure thread safety.

The patch correctly uses the DEFINE_SEMAPHORE macro to define the hyperv_mmio_lock semaphore. It also correctly acquires the semaphore using the down() function before accessing the resource tree and releases it using the up() function after accessing the tree.

Overall, this patch improves the thread safety of the hyperv_mmio resource tree and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression in the implementation of drm_vblank_on in Linux 3.18+. The issue was that if the user specified a value of zero for drm_vblank_offdelay, which should always reenable vblank irqs, a kms driver could override the user's choice by setting vblank_disable_immediate to true. This patch ensures that vblank interrupts are reenabled if there are clients left or if the user requested to "never disable vblanks" via offdelay 0. The patch has been reviewed and signed-off by multiple developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with audio playback on Kirkwood / OpenRD client. The patch addresses a problem where the asoc_simple_card_hw_params function fails if the sysclk setting is not supported, causing audio playback to fail. The intention was to ignore the ENOTSUPP error, but the current implementation does not handle it correctly.

The patch modifies the asoc_simple_card_hw_params function to return 0 instead of failing if the sysclk setting is not supported. This ensures that audio playback can continue even if the sysclk setting is not available.

The patch has been reviewed and tested by multiple individuals, including Aaro Koskinen and Andrew Lunn. It also includes a "Fixes" tag referencing the commit that introduced the issue.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the bnx2x driver that incorrectly detects the KR2 work-around for non-KR2 devices. The condition for detecting the BCM8073 link-partner was not set correctly, leading to incorrect behavior.

The patch correctly updates the condition to check for the specific advertisement characteristics of the BCM8073 in the specific mode. This ensures that the KR2 work-around is correctly applied for the BCM8073 link-partner.

The patch also includes proper sign-offs from the authors and the maintainer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning message that is emitted when the ACPI SLIT table has an I/O locality. The warning message is unnecessary and leads to confusion. The patch changes the acpi_numa_slit_init() function to avoid calling numa_set_distance() with NUMA_NO_NODE for I/O localities. This ensures that the warning message is not emitted for I/O localities.

The patch has been reviewed and Acked-by David Rientjes and signed-off by Toshi Kani, Andrew Morton, and Ingo Molnar. It also includes a link to the discussion thread on the LKML.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a warning in the alloc_huge_page function in mm/hugetlb.c. The warning is related to the local variable "page" potentially being used uninitialized. The patch initializes the variable explicitly to NULL to avoid any potential kernel oops in a corner case.

The patch has been Acked by Mel Gorman and David Rientjes, indicating that it has been reviewed and approved by them. It has also been signed-off by Konstantin Khlebnikov, Andrew Morton, and Linus Torvalds.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch removes an unused define "cpuidle_coupled_lock" in the cpuidle_coupled.c file. The patch was found with the -RT patch enabled, but it should apply to non-RT as well. The removal of the unused define resolves a compilation warning, indicating that the define is defined but not used. The patch has been signed-off by two contributors.

Since the define is not used and removing it resolves a compilation warning, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a device name collision issue that occurs when using 10-bit addresses in the I2C protocol. The patch adds an arbitrary offset to 10-bit addresses to prevent collisions with 7-bit addresses. The offset is chosen in such a way that the address is still easily recognizable.

The patch also updates the documentation to provide information about the different format of I2C messages for 10-bit address devices.

Overall, this patch addresses a known issue and improves the compatibility and usability of the I2C protocol. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch removes the ONDA MT825UP product ID from the driver. According to the patch description, this product ID is no longer needed as newer devices have a proper CDC descriptor and can be driven by cdc_acm.c + cdc_ether.c. Since the patch removes unnecessary code and does not affect the functionality of other devices, it can be accepted in Linux -stable releases.
true || ACK

This patch introduces the div64_long macro, which is used to divide a 64-bit number by a long. It provides compatibility for both 32-bit and 64-bit systems by using different division functions based on the BITS_PER_LONG value.

The patch has been suggested by Thomas Gleixner and signed-off by Sasha Levin and Thomas Gleixner. It also includes the necessary headers and functions for the division operations.

Based on the provided information, the patch appears to be a valid addition to the Linux kernel. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch modifies the skb_gso_transport_seglen function in the net/core/skbuff.c file. It handles encapsulation offloads when computing segment lengths.

The patch checks if the skb->encapsulation flag is set. If it is set, it calculates the size of the inner network headers and adds it to the segment length. It also checks if the gso_type is SKB_GSO_TCPV4 or SKB_GSO_TCPV6, and if so, it adds the size of the inner TCP headers to the segment length.

If the skb->encapsulation flag is not set, it only calculates the size of the TCP headers and adds it to the segment length.

The patch ensures that the correct segment length is calculated based on the encapsulation and gso_type, which is important for proper packet handling.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a warning generated by gcc 4.1.2 in the f81534_port_probe() function of the f81534.c file. The warning is caused by a comparison that is always false due to the limited range of the data type. 

The patch introduces an intermediate variable of type int to store the return value of the f81534_logic_to_phy_port() function. This allows for proper error handling, as the function may return a negative error value. The patch also removes the useless check for F81534_NUM_PORT, as the callee always returns a valid port number in case of success.

Overall, this patch improves the code by fixing the warning and ensuring proper error handling. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the sctp_v4_map_v6 function that was causing mangled IPv4 addresses on an IPv6 listening socket. The bug was introduced in commit 299ee123e198, which changed the behavior of v4mapped addresses to comply with the Socket API. However, this change resulted in incorrect addresses being returned for user space clients that open an IPv6 SCTP socket and receive IPv4 connections.

The patch reorders the code to guarantee correct behavior regardless of the union layout. It first saves the port from the v4 address, then sets the necessary fields in the v6 address structure, including the correct IPv4 address and port. Finally, it sets the remaining fields to zero.

The patch has been reviewed and Acked-by two other developers, Daniel Borkmann and Neil Horman.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a problem where the panel goes blank sometimes when reopening the lid on a laptop with PCH. The issue is caused by the BLC_PWM_CPU_CTL register being cleared to zero when BLC_PWM_CPU_CTL2 and BLC_PWM_PCH_CTL1 registers are enabled.

The patch moves the call of the function setting BLC_PWM_CPU_CTL after enabling the other two registers, ensuring that the backlight level is properly set.

The patch has been reported and tested by Hugh Dickins and has been signed-off by Takashi Iwai and Daniel Vetter.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the code that computes the display bpp for DP displays in the nv50_disp_intr_unk20_2 function. The patch adjusts the code to use the correct register for computing the display bpp, which is the same register used by other related functions.

The bug was reported by Torsten Wagner and Michael Gulick, and the patch has been tested and reviewed. It also has a Bugzilla reference and is marked for stable releases starting from kernel version 3.9.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch fixes the checking of the return value of request_any_context_irq() in the adc_jack_probe() function. It correctly checks for a negative value to handle failure cases. Additionally, it ensures that adc_jack_probe() returns 0 on success.

The patch has been reviewed and signed-off by multiple developers, indicating that it has undergone proper review and testing.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch updates the blacklist for Crucial/Micron drives to reflect the fact that queued TRIM is broken on M500 drives but working fine on later drives such as M600 and MX200. The patch adds specific entries for Micron_M500*, Crucial_CT*M500*, Micron_M5[15]0*, Crucial_CT*M550*, and Crucial_CT*MX100* drives with the MU01 firmware version, indicating that these drives should not use NCQ TRIM and should zero after TRIM. Additionally, the patch adds generic entries for all Micron* and Crucial* drives to zero after TRIM. These changes are necessary to ensure proper functionality of the affected drives and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the first call of the interrupt handler for CPU1 on the Exynos 4210 SoC is called on CPU0 instead. This happens because the interrupt fires before setting the IRQ affinity. The patch suggests registering the clock event device after setting the affinity for the interrupt, which will prevent the timer from starting too early.

The patch has been reviewed and signed-off by multiple developers, including the maintainers of the Exynos_mct clocksource driver. It also has a link to the original discussion on the Linux kernel mailing list.

Based on the provided information, it seems that the patch addresses a specific issue and has been reviewed and tested by the relevant developers. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a type mismatch issue in the mmc core code. The previous commit f68381a70bb2 fixed the endianness handling of packed_cmd_hdr in mmc_blk_packed_hdr_wrq_prep, but it introduced a type mismatch issue that is reported by sparse. The issue is that the variable packed_cmd_hdr is declared as u32* but it should be declared as __le32*.

The patch correctly annotates cmd_hdr as __le32 to resolve the type mismatch issue. This ensures that the code is correct and avoids any potential issues related to endianness.

The patch also includes the necessary Signed-off-by and Fixes tags, as well as the Cc: stable@vger.kernel.org tag, indicating that it should be considered for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an incorrect left shift operation in the vortex_wt_setdsout function in the au88x0_synth.c file. The code currently performs bit-negation on the bit position (wt&0x1f) instead of on the resulting bitmask. However, this code is never actually invoked as vortex_wt_setdsout is always called with en=1. Therefore, this issue does not currently cause any problems.

The patch corrects the code by applying the bit-negation on the resulting bitmask instead of the bit position. This is a simple cleanup of the code.

Based on the analysis, the patch is safe and improves the code correctness. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a new argument "handle_flags" to the function "break_stripe_batch_list" in the md/raid5.c file. This argument allows for more flexibility in setting the STRIPE_HANDLE flag on individual stripes when breaking a stripe_batch_list.

The patch modifies the "break_stripe_batch_list" function to check if the "handle_flags" argument is zero or if any of the given flags are present in the "sh->state" variable. If either condition is true, the STRIPE_HANDLE flag is set on the stripe.

The patch also updates the "handle_stripe" function to call "break_stripe_batch_list" with a handle_flags argument of 0, ensuring that the STRIPE_HANDLE flag is always set when handling a stripe with the STRIPE_BATCH_ERR flag set.

Overall, this patch adds a useful feature to the md/raid5 code and does not introduce any obvious issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM audit code that incorrectly uses the saved application ip register value to infer syscall entry or exit. This can lead to libc corruption if the ip register is live. The patch updates the syscall tracing code to use the "why" parameter to infer the syscall direction and only updates the saved ip register if a ptrace trap will be signaled. The patch has been reported and tested by Jon Masters and has been reviewed by the stable@vger.kernel.org and Eric Paris. It is also signed-off by Will Deacon and Russell King.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the UDF filesystem where data corruption can occur during file type conversion. The patch acquires the i_mutex lock before checking whether the write fits into the inode, and uses __generic_file_aio_write() to put the check and write into one critical section. This ensures that if count1 + count2 doesn't fit into the inode, kernel buffers beyond the inode are not overwritten, preventing filesystem corruption.

The patch has been reported by Al Viro and signed-off by Jan Kara, who is a well-known contributor to the Linux kernel. The code changes are also straightforward and do not introduce any new risks or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the code indentation in the QP1 GRH flow in the procedure build_mlx_header. The indentation was confusing and this patch fixes it in preparation for a commit that touches this code.

The patch also includes the necessary checks for the is_eth variable and the mlx4_is_mfunc function. These checks ensure that the correct source_gid is used based on the network interface type and whether multi-function is enabled.

Overall, this patch improves code readability and ensures the correct source_gid is used in the QP1 GRH flow. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch removes a WARN_ON() statement in the pnv_php_put_slot() function. The WARN_ON() statement is causing unnecessary backtrace when putting the parent slot, which is likely to be NULL. The patch replaces the WARN_ON() statement with a simple if condition to check if the php_slot is NULL. This change improves the code by removing unnecessary backtrace and simplifying the logic. The patch also includes the necessary Fixes, Signed-off-by, Reviewed-by, and Tested-by tags. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch adds a quirk for delaying the switcheroo poweron for Apple MacBooks in order to fix an issue with MSI not working after switch. The patch increases the re-enable d3 delay to 20 ms, which resolves the problem. The patch also includes a function to check if a longer d3 delay is needed for waking up, specifically for the 6600m in a MacBook Pro.

Based on the provided information, it seems that the patch addresses a specific issue and provides a solution that has been tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds the wdev identifier to some nl80211 notifications. It fixes an issue with P2P Device not working properly for management frame TX. The patch adds the NL80211_ATTR_WDEV attribute to the nl80211_send_mgmt and cfg80211_mgmt_tx_status functions. This attribute is used to identify the wireless device associated with the notification.

The patch has been signed-off by Ilan Peer and Johannes Berg, who are both from Intel. This indicates that the patch has been reviewed and approved by experts in the field.

Based on the information provided, the patch appears to be necessary for fixing a specific issue and has been reviewed by experts. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch is a fix for the metag/ptrace code in the Linux kernel. It ensures that if userspace supplies insufficient data to PTRACE_SETREGSET to fill all the registers, the thread's old registers are preserved. The patch has been reviewed and Acked-by James Hogan and signed-off by Dave Martin and Linus Torvalds. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the of_mdio driver where the reference counting of the MDIO phy device was not properly handled. The patch adds the necessary reference counting calls to ensure that the reference count is incremented when successful and decremented when done with the device.

The patch has been reviewed and Acked-by Rob Herring <robh@kernel.org>, indicating that it has been reviewed and approved by a trusted developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the max3421-hcd driver for USB host controllers. The bug is related to the mask used for the GPIO output control register. The current implementation uses a wrong mask, which can lead to incorrect output control.

The patch corrects the mask by using the correct formula, which is (pin_number % 4). This ensures that the mask is correctly calculated based on the pin number.

The patch has been signed-off by the original author and the maintainer of the driver, indicating that it has been reviewed and approved by them.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the SCTP (Stream Control Transmission Protocol) module. The patch ensures that the per-net sysctl table is explicitly freed when the network is exited, preventing the memory leak. The issue was reported by Martin Mokrejs and the patch has been reviewed and signed-off by multiple developers, including Vlad Yasevich, Neil Horman, Eric W. Biederman, and David S. Miller.

The patch correctly frees the sysctl table by retrieving the ctl_table_arg from the sysctl_header and then freeing it using kfree(). This ensures that the memory allocated for the sysctl table is properly released.

Therefore, I recommend accepting this patch in Linux -stable releases to fix the memory leak issue in the SCTP module.
true || Based on the provided patch and the accompanying explanation, I would recommend accepting this patch in Linux -stable releases (ACK).

The patch reverts a previous commit that introduced a regression in the 3.6-rc kernels. The author explains that the backlight code is lacking locking, which can lead to races and system instability. The author also mentions that further hacks are not recommended until the races are fixed.

The patch itself removes the code that enables the backlight and sets the backlight level. Instead, it sets the backlight level first and then enables the backlight. This change ensures that the backlight is set correctly even if the current backlight level is zero.

The patch includes references to mailing list discussions and a bugzilla entry, indicating that the issue has been discussed and investigated by the community. It also includes a Tested-by tag from a trusted contributor.

Overall, the patch seems to address a known issue and provides a more robust solution. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where callers of dev_pm_opp_get_opp_count were not aware that it needs to be called under RCU lock. The patch takes the RCU lock inside dev_pm_opp_get_opp_count() and leaves the callers as is. This ensures that the function is called under the correct locking mechanism.

The patch has been reviewed and Acked-by Viresh Kumar <viresh.kumar@linaro.org>. It has also been signed-off by Dmitry Torokhov <dtor@chromium.org> and Rafael J. Wysocki <rafael.j.wysocki@intel.com>.

The patch is a simple and straightforward fix for the issue and does not introduce any new risks or regressions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a lock-inversion problem in the xhci driver. The issue occurs when threaded interrupts are used, and bottom-half handlers are called with interrupts enabled. In such cases, spin_lock() cannot be safely used, and spin_lock_irqsave() should be used instead.

The patch modifies the xhci_irq() function to use spin_lock_irqsave() and spin_unlock_irqrestore() instead of spin_lock() and spin_unlock(). This ensures that interrupts are properly disabled and enabled when acquiring and releasing the lock, preventing any lock-inversion issues.

The patch has been tested and reported by Bart Van Assche, and it has been signed-off by Alan Stern, Mathias Nyman, and Greg Kroah-Hartman. It also includes a detailed explanation of the lock-inversion problem and the fix.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the firmware loader. Several loading requests may be pending on the same firmware buffer, and this patch ensures that all requests see the mapped 'buf->data' once the loading is completed. The patch moves the fw_map_pages_buf() function before complete_all(&fw_buf->completion) to ensure that the mapping is done before completing the requests.

The patch also removes the duplicate definition of fw_map_pages_buf() function and moves it above the fw_create_instance() function for better code organization.

Overall, this patch addresses a race condition and improves the reliability of the firmware loading process. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the Linux kernel does not respect the reserved region for hypervisor use of transactional memory software abort cause codes. The patch moves the cause codes below the reserved region, ensuring that the hypervisor can use the reserved region without conflicts.

The patch is a simple and straightforward fix that does not introduce any new functionality or potential issues. It only modifies the values of the cause codes, ensuring that they are below the reserved region.

Given the nature of the patch and the fact that it only affects the powerpc architecture, it is safe to include it in Linux -stable releases.
true || ACK

This patch fixes a spurious GPU hang issue with gt3/gt4 revisions of Skylake processors. The patch extends the workaround "WaForceContextSaveRestoreNonCoherent" to all revisions, which resolves the GPU hang issue observed with revision 0xa when running the Heaven 4.0 GPU benchmark.

The patch also references a previous commit that addressed a similar issue with enabling gt4e and extends the workaround to revision F0 instead of false claims of revision E0 only. This suggests that the extension to all revisions is necessary.

The patch has been reviewed and tested by multiple individuals, including Abdiel Janulgue, Ben Widawsky, and Timo Aaltonen. It has also been reported by Mike Lothian and the bug has been tracked on freedesktop.org.

Considering the provided information and the successful testing, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where tty_wait_until_sent may take up to twice as long as the requested timeout while waiting for driver and hardware buffers to drain. The patch takes the remaining number of jiffies after waiting for driver buffers to drain into account, ensuring that the timeout actually becomes a maximum timeout as it is documented to be.

The patch has been reviewed and signed-off by multiple developers, including Johan Hovold, Peter Hurley, and Greg Kroah-Hartman.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a potential issue in the pid namespace where processes can attempt to access their child reaper and follow a stale pointer. The patch disables the allocation of new pids in a pid namespace when init dies, instead of when the last process in a pid namespace is reaped. This avoids the problem and ensures that waitpid for init does not return before all processes in the pid namespace have exited.

The patch has been reviewed and tested by Oleg Nesterov, and it has been signed-off by Eric W. Biederman. The changes are also minimal and do not introduce any new risks or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dm cache code where the dirty flag was mistakenly being cleared when promoting a block via overwrite. The patch correctly sets the dirty flag when the block is promoted via overwrite, ensuring that the cache block and origin block are marked as dirty.

The patch has been reviewed and signed-off by Joe Thornber and Mike Snitzer, who are both recognized contributors to the Linux kernel. The patch also includes the appropriate Cc to the stable mailing list and the relevant file.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where skb->truesize is underestimated in tcp_trim_head(). The issue was found by Andrey using syzkaller and a filter attached to a TCP socket over the loopback interface.

The patch modifies the __pskb_trim_head() function to return the number of bytes trimmed from skb->head. This value is then used in tcp_trim_head() to update skb->truesize, sk->sk_wmem_queued, and sk_mem_uncharge() if there is a change in skb->len.

The patch has been tested by Andrey and signed-off by Eric Dumazet and David S. Miller.

Based on the provided information, it seems that the patch addresses a real issue and has been tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with the sh73a0 CPU board where the intca_irq_pins_desc irq table had conflicts. The second controller was trampling the first one due to the -EEXIST case from irq_alloc_desc_at(). The patch fixes this issue by adjusting the RELOC_BASE value.

The patch has been reviewed and Acked-by Magnus Damm and signed-off by Kuninori Morimoto and Rafael J. Wysocki.

Based on the provided information, it seems that the patch addresses a specific issue and has been reviewed by experts. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a null pointer dereference issue when mounting NFS over v4.1. It adds the missing "alloc_slot" function for backchannel operations in the SUNRPC module. The patch modifies the bc_tcp_ops structure in the xprtsock.c file to include the "alloc_slot" function.

The call trace provided in the patch shows that the null pointer dereference occurs in the xprt_reserve function, which is part of the SUNRPC module. By adding the "alloc_slot" function to the bc_tcp_ops structure, this issue can be resolved.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the `radar_required` field in `sdata` is not cleared when `ieee80211_vif_use_channel()` fails. This can result in a stale `radar_required` field, which prevents starting new scan requests.

The patch adds the necessary code to clear `sdata->radar_required` when `ieee80211_vif_use_channel()` fails. This ensures that the field is always cleared, preventing any issues with stale values.

The patch also includes a fix to use `false` instead of `0` when setting `sdata->radar_required`.

Overall, this patch addresses a bug and improves the correctness of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds a new function `ext4_iget_normal()` to the ext4 filesystem. This function is used for directory tree lookups and is designed to handle corrupted filesystems that have directory entries pointing at reserved, metadata inodes. It treats these inodes as bad inodes, preventing them from being opened, deleted, or modified.

The patch also updates the `ext4_lookup()`, `ext4_get_parent()`, and `ext4_nfs_get_inode()` functions to use the new `ext4_iget_normal()` function instead of the existing `ext4_iget()` function.

The patch includes a reported-by tag and a signed-off-by tag, indicating that it has been tested and reviewed by the appropriate individuals.

Based on the provided information, it appears that this patch addresses a specific issue related to corrupted filesystems and improves the handling of directory entries pointing at reserved inodes. Therefore, I recommend accepting this patch in Linux -stable releases.
true || Based on the provided patch, it appears to be a simple typo fix in the UBI (Unsorted Block Images) code. The patch corrects the use of "VID" vs. "EC" in the header self-check computation of the CRC (Cyclic Redundancy Check).

The patch does not introduce any functional changes, as both structures (UBI_VID_HDR_SIZE_CRC and UBI_EC_HDR_SIZE_CRC) are 64 bytes. This has been verified using the BUILD_BUG_ON macro.

The patch also includes a reference to a reported issue and is signed-off by multiple contributors.

Therefore, I would recommend accepting this patch in Linux -stable releases (ACK).
true || ACK

This patch fixes a bug in the KVM code for ARM and ARM64 architectures. The bug was causing the active state of the GIC distributor to be set on a different physical CPU than the one the code was actually going to run on. This could lead to unpredictable behavior.

The patch moves the timer flush operation into a non-preemptible section, ensuring that the active state is set correctly on the intended CPU. This resolves the issue and improves the stability and reliability of the KVM code.

The patch has been reviewed and signed-off by relevant developers, indicating that it has undergone thorough testing and verification.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ibmvnic driver where the failure path in ibmvnic_open() mistakenly makes a second call to napi_enable instead of calling napi_disable. This can result in a BUG_ON for any queues that were enabled in the previous call to napi_enable.

The patch correctly replaces the call to napi_enable with napi_disable in the failure path, ensuring that the queues are properly disabled in case of failure.

Therefore, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue where the list of requests on the timeline can be modified concurrently while walking it. By taking both the context's timeline lock and the global timeline lock, this patch prevents such modifications and ensures the integrity of the list.

The patch has been reviewed and tested by the relevant developers, and it includes a link to the patch discussion for further reference.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a situation where the mac80211 state machine gets confused because it never clears csa_active. The patch disconnects the connection in this case, which is the safest thing to do. The patch has been reviewed and signed-off by multiple developers from Intel, which adds credibility to its correctness. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes an issue where the ramp delay for buck4 was accidentally enabled when setting ramp delay for other bucks that do not support enable/disable. The patch adds a check to only enable ramp delay for buck[1234]. This ensures that the ramp delay is not accidentally enabled for other bucks. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly reviewed and tested. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || NAK

Explanation: The patch is reverting a previous commit that restricted the VF from configuring any VLAN mode. The reason for the restriction is not mentioned in the patch description. Without knowing the rationale behind the restriction, it is difficult to determine whether reverting it is the correct decision. Additionally, the code that is being removed in the patch is related to MAC and VLAN filtering, and the patch does not provide any alternative implementation or explanation for why this code is no longer necessary. Therefore, it is not clear whether removing this code will have any negative impact on the functionality or security of the system. Without more information, it is not recommended to accept this patch in Linux -stable releases.
true || ACK

This patch is aimed at disabling PM runtime for multi-platform ARM with genpd support on R-Car or RZ. The reason for this is that if the default PM Domain using PM_CLK is used for PM runtime, the real Clock Domain cannot be registered from DT later. Instead, the CPG/MSTP Clock Domain driver will take care of PM runtime management of the module clocks.

The patch also simplifies the platform logic by replacing the explicit SoC checks with a single check for the presence of MSTP clocks in DT. Backwards-compatibility with old DTs is provided by checking for the presence of a "#power-domain-cells" property in DT.

Overall, this patch improves the PM runtime management for multi-platform ARM shmobile platforms and ensures compatibility with old DTs. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch reverts a previous commit that fixed a memory leak in the parport driver. The reason for reverting the commit is that the par_dev->state was already being removed in parport_unregister_device(). The patch has been reported by Ying Huang and signed-off by Sudip Mukherjee and Greg Kroah-Hartman. The change removes the kfree(par_dev->state) line from the code, which indicates that the memory leak fix is no longer necessary. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the mmc_blk_issue_rq function where the MMC host is not released properly after a discard operation. The patch correctly marks the special request down before the discard/flush operation, ensuring that the host is released when it should be.

The patch has been reviewed and acked by Seungwon Jeon, and reported by Harold (SoonYeal) Yang. It also includes the stable tag, indicating that it should be considered for inclusion in Linux -stable releases.

Therefore, based on the provided information, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the drm/i915 driver where obj->map_and_fenceable is set to true even when the object is not bound to the global GTT. This violates the change introduced in a previous patch and can lead to incorrect behavior.

The patch addresses this issue by unbinding the object from the global GTT if obj->map_and_fenceable is true but will not be after the tiling change. This ensures that the object is correctly handled according to the new computation of obj->map_and_fenceable.

The patch has been tested and reviewed by multiple individuals, and a bug report has been provided. The fix is simple and safe, and it resolves the issue identified.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch removes the unnecessary call to mvneta_adjust_link() in the mvneta_ioctl() function. The function mvneta_adjust_link() is a callback for of_phy_connect() and should not be called directly. The patch replaces the call to mvneta_adjust_link() with a direct call to phy_mii_ioctl(). This change improves code clarity and follows the correct usage of the callback function.

Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch addresses a firmware issue in the igb i210 NIC where the probe fails due to improper initialization of the I347AT4_PAGE_SELECT register. The patch adds an additional zeroing of this register during igb_get_phy_id to workaround the issue.

The patch has been tested and signed-off by multiple individuals, including Chris J Arges and Jeff Kirsher from Intel. The patch is a simple and targeted fix for a specific issue, and it does not introduce any new functionality or potential regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || NAK

The patch removes the code that enables the Receive FIFO full warning interrupt in the ravb driver. However, the patch does not provide any explanation or justification for removing this interrupt handling. Without proper explanation, it is not clear whether removing this interrupt handling is intentional or a mistake.

Therefore, I would not recommend accepting this patch in Linux -stable releases until further clarification is provided.
true || ACK

This patch fixes a bug in the OMAPFB driver where overlays are not properly removed from overlay managers when freeing resources. This can cause a crash if the OMAPFB module is unbound and bound again, or if the module is removed and loaded while keeping OMAPDSS around.

The patch adds a check to see if the overlay has a manager and calls the unset_manager() function to remove the overlay from the manager. This ensures that overlays are properly released and prevents any potential crashes.

The patch has been reviewed and signed-off by Tomi Valkeinen, who is a recognized contributor to the OMAPFB driver.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the dmi_scan firmware where the "End of Table" entry (type 127) is not handled properly after adding initial SMBIOS v3 support. This results in the entry not being created in the dmi sysfs. 

The patch moves the end-of-table check after it's handled by dmi_table, ensuring that the entry is properly created in the dmi sysfs. 

The patch has been reviewed and signed-off by Ivan Khoronzhuk and Matt Fleming. It also has a Reviewed-by tag from Ard Biesheuvel. 

Given that this patch fixes a bug and has been reviewed and signed-off by multiple developers, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a small race condition in the fair scheduler where child->se.parent and cfs_rq might point to invalid (old) ones. This race condition can lead to a "use-after-free" bug and cause a panic. The bug was originally caught in RHEL6.4.

The patch adds a call to __set_task_cpu() to ensure that both the cpu and task_group of the parent are updated after parent->se.parent and cfs_rq are copied to child->se.parent and cfs_rq. This ensures that child->se.parent and cfs_rq point to valid ones.

The patch has been reviewed and signed-off by multiple developers. It also includes a link to the original bug report.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the mei_cl_read_start() function where it fails to set the "cl->read_cb" pointer to NULL after releasing it. This can lead to the pointer still pointing to random memory, causing a panic at kfree in mei_release().

The patch correctly sets "cl->read_cb" to NULL after releasing it, preventing any potential issues when the client is operated again.

The patch also includes the Fixes tag, indicating that it addresses a specific issue.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes an error in the pch_can driver where the test for error passive level is incorrect. The patch replaces the test (((errc & PCH_REC) >> 8) > 127) with (errc & PCH_RP) to correctly check if the receive error counter has reached the error passive level. The patch also adds the definition of PCH_RP as 0x00008000. The patch has been reviewed and Acked by Wolfgang Grandegger. The change is necessary to ensure the correct behavior of the pch_can driver, so it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a regression issue in the mtd:gpmi driver where the new ECC layout introduced in commit 2febcdf84b causes the inability to mount ubifs created by the old ECC layout. The patch reverts to the legacy ECC layout to resolve this issue. The patch has been signed-off by multiple developers and has also been tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses an issue where transfer hangs during I2C frame transmission on some devices. By reducing the internal frequency of the TWI IP, the issue is resolved. The patch does not impact the I2C bus frequency.

The patch has been reviewed and Acked-by two developers, indicating that it has been tested and approved.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a whitelist of PHY compatibilities to the of_mdio driver. The purpose of this whitelist is to issue a warning if a compatible value known on the whitelist is found, indicating that it is a PHY. This helps to separate a PHY from a generic MDIO device like a switch.

The patch also includes a list of PHY compatible strings that are known to appear in some DTBs. These strings are never matched against a PHY driver, so they are pointless. The intention is to encourage users to upgrade their DT blobs to remove these unnecessary compatible strings.

Overall, this patch improves the functionality and clarity of the of_mdio driver by providing a mechanism to identify and warn about unnecessary PHY compatible strings. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an information leak vulnerability in the L2CAP code of the Bluetooth subsystem. The patch initializes the l2_bdaddr_type member of struct sockaddr_l2 and the padding byte added for alignment before filling the structure. This prevents the leakage of two bytes of kernel stack memory via the getsockname() syscall.

The patch has been reviewed and signed-off by multiple developers, including Mathias Krause, Marcel Holtmann, Gustavo Padovan, and Johan Hedberg. It is also signed-off by David S. Miller, who is responsible for the networking subsystem.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the reiserfs filesystem. When the filesystem fails to mount, the commit workqueue is not freed, leading to a memory leak. The patch adds a check to destroy the workqueue if it exists before canceling the delayed work and freeing the bitmap cache.

The patch has been reported by multiple individuals and has been tested on the stable branch. It also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression caused by a previous patch that reverted code necessary to handle dirty pages in certain scenarios. The patch ensures that all dirty pages are written out before releasing the lower file. It has been reported and tested by multiple individuals. The patch also includes a link to the bug report for reference. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a generic quirk for Insyde devices with the same audio routing. It matches on the vendor name "Insyde" and applies the necessary driver data for these devices. This approach avoids recurring edits of the same thing for different Insyde devices. The patch has been signed-off by multiple developers, indicating that it has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch allows the MTU of vxlan devices without an underlying device to be set to larger values, up to a maximum based on IP packet limits and vxlan overhead. Previously, their MTUs could not be set higher than the conventional ethernet value of 1500, which prevented vxlan devices from taking advantage of jumbo frames and other features.

The patch modifies the `vxlan_change_mtu` function to check the maximum MTU based on the underlying device's MTU and the vxlan overhead. If the new MTU is greater than the maximum, it sets the MTU to the maximum value. The patch also introduces a new helper function `__vxlan_change_mtu` to handle the MTU change logic.

This patch improves the flexibility and compatibility of vxlan devices by allowing them to support larger MTUs. It has been reviewed and Acked by Roopa Prabhu and signed-off by David Wragg and David S. Miller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a registration failure in the s5p-g2d driver. Without this patch, the driver fails to register the video device and produces a boot warning. The patch sets the v4l2_dev field in the video_device structure, which is required by the recent changes in the v4l2 core. Therefore, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a data corruption issue in the pl2303 USB driver when changing serial settings. Some PL2303 devices lose bytes when serial settings are changed, even if the new settings are the same as the previous ones. This patch addresses this issue by comparing the encoded settings with the previously used ones before configuring the device.

The patch also includes a fix for a regression introduced by a previous commit, which fixed the common case but did not address the issue when using the TCSETS2-interface to repeatedly request a baud rate of 115201, which gets mapped to 115200 and triggers a settings update.

The patch has been reviewed and tested, and it includes the necessary Signed-off-by tags. It also includes a Cc to the stable mailing list, indicating that it should be considered for inclusion in the Linux -stable releases.

Therefore, based on the analysis of the patch and its significance in fixing a data corruption issue, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dsa_slave_port_attr_set function in the net/dsa/slave.c file. The bug occurs when a driver returns -EOPNOTSUPP from the commit phase of a STP state, triggering a WARN() from switchdev. This issue has been reported by Andrew Lunn and the patch has been reviewed and Acked by him.

The patch modifies the code to properly handle the return value of the switchdev_trans_ph_prepare function. If the prepare phase is true, it checks if the driver supports port STP update and returns 0 if it does, otherwise it returns -EOPNOTSUPP. If the prepare phase is false, it calls the port_stp_update function of the driver with the appropriate arguments.

This patch is a bug fix and does not introduce any new functionality or regressions. It has been reviewed and Acked by the relevant parties. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue where the host buffers are freed before destroying the Memory Region (MR) in the hardware. This could lead to a crash if the hardware tries to access these buffers. The patch ensures that the MR is deregistered in the firmware before freeing the fast_reg_page_list and the host buffers. It also handles the error case if the deregistration fails.

The patch has been reviewed and signed-off by Selvin Xavier and Doug Ledford, who are recognized contributors in the Linux kernel community.

Therefore, based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch improves the safety of traversing the EEH devices list by replacing the use of list_for_each_entry() with list_for_each_entry_safe(). This change ensures that the iteration is not affected if an EEH device is removed from its parent PE during the traversal.

The patch also updates the macro eeh_pe_for_each_dev() to use list_for_each_entry_safe().

Overall, this patch enhances the stability and reliability of the EEH subsystem in the PowerPC architecture. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds the missing xcopy_pt_cmd->sense_buffer[] required for correctly handling CHECK_CONDITION exceptions within the locally generated XCOPY I/O path. It also updates target_xcopy_read_source() + target_xcopy_setup_pt_cmd() to pass this buffer into transport_init_se_cmd() to correctly setup se_cmd->sense_buffer.

The patch has been reported by Thomas Glanzmann and Douglas Gilbert, and they have also been included in the Cc list. It has been signed-off by Nicholas Bellinger.

Based on the provided information, the patch appears to be necessary for correct handling of exceptions and improving the functionality of the target_xcopy_read_source() and target_xcopy_write_destination() functions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where fences for pinned objects were not being restored upon resume, leading to display corruption and reference counting issues. The bug was introduced in commit 312817a39f17dbb4de000165b5b724e3728cd91c [2.6.38], which zapped the pinned fences even though they were in use. The patch adds a new function `i915_gem_restore_fences` that restores the fences for pinned objects. It also updates the `i915_gem_reset` and `i915_gem_idle` functions to use this new function for restoring fences.

The patch has been tested and reported by Stéphane Marchesin and signed-off by Chris Wilson and Daniel Vetter. It is a straightforward fix for a known bug and does not introduce any new functionality or risk. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory access violation issue in the pch_uart driver. The issue occurs when pch_uart_verify_port() is called during installation and the dma channel is not allocated. The patch ensures that the dma channel is allocated whenever pch_uart_verify_port() is called and the channel is not already allocated.

The patch has been reviewed and signed-off by the author and the maintainer. It is also marked for stable release. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch removes an unnecessary call to plane->destroy from the crtc's destroy function. This call is no longer needed because all the planes, including primary planes, are now destroyed by the drm framework. Removing this call fixes a crash caused by double freeing the plane. The patch has been signed-off by the author and the change seems reasonable and necessary. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch sets the per-net PipeFS superblock before the notification callback in the RPC client. This is necessary because there can be a case where the RPC client is no longer held by anyone except the notification callback, and on release, the client will be destroyed along with its dentries. The destruction of the dentries requires the per-net PipeFS superblock to be set.

The patch also sets the pipefs_sb field to NULL in case of an error during the depopulation process.

Overall, this patch ensures that the per-net PipeFS superblock is properly set and handled during the MOUNT and UMOUNT events, which is necessary for correct cleanup and destruction of the RPC client and its associated dentries.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the wacom_sys.c driver where the address of rep_data is incorrectly passed to wacom_get_report(). The patch correctly passes rep_data instead of &rep_data, which is the correct behavior since rep_data is not an array anymore.

The patch has been reviewed and tested by multiple individuals, including Ping Cheng, Rafi Rubin, and Jason Gerecke. It has also been signed-off by Dmitry Torokhov, who is a maintainer of the drivers/input/tablet/wacom_sys.c file.

Therefore, based on the analysis of the patch and the positive reviews and testing, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue where Rx data sometimes drops during non-DMA transfer mode in the spi-topcliff-pch driver. The issue is caused by the read complete condition not being true. The patch modifies the code to properly check for the completion of the transfer and inform pch_spi_process_messages accordingly.

The patch has been signed-off by the original author and another developer, indicating that it has been reviewed and tested. The changes in the patch are straightforward and do not introduce any new risks or side effects.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Based on the analysis provided by Linus Torvalds, it is clear that there is a bug in the code. The loop in the function 'rtl8821ae_dm_clear_txpower_tracking_state' iterates from 0 to 3, but the 'bb_swing_idx_ofdm' array only has two members. This results in the last two iterations overwriting other variables.

Although the bug seems to be benign and does not affect the build or functionality, it is still important to fix it. The suggested fix is to change the size of the 'bb_swing_idx_ofdm' array to 'MAX_RF_PATH'.

Considering the analysis and recommendation from Linus Torvalds, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a workaround for preventing screen corruption when fbc (frame buffer compression) is used on gen9 Intel GPUs. The patch has been reviewed and tested by the relevant developers and has been cherry-picked from a commit. It also includes references to relevant bug reports and documentation.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch addresses a stack overflow issue that occurs when using gcc-5 and CONFIG_KASAN=y. The use of ACCESS_ONCE() in the code causes a larger frame size than the allowed limit, resulting in build errors. The patch removes the use of ACCESS_ONCE() and directly accesses the register addresses, which resolves the stack overflow issue.

The patch has been tested with gcc-5.3.1 and gcc-7.0.0, and it has been verified that the object code is improved without the use of ACCESS_ONCE(). The patch is not urgent for the 4.11 kernel, but it is recommended to backport it to older kernels to avoid the stack overflow issue.

The patch has been reviewed and signed-off by Arnd Bergmann and David S. Miller. It also includes the necessary Cc and Fixes tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the mediatek ethernet driver where the driver removal fails if the interface is up. The patch adds a loop to stop all devices before freeing DMA resources and restoring the state changed by mtk_open(). This ensures that the DMA is properly shut down before module removal.

The patch has been reviewed and signed-off by Sean Wang and David S. Miller, indicating that it has been tested and approved by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

The patch modifies the ext4_collapse_range() function in the ext4 filesystem to use truncate_pagecache() instead of truncate_pagecache_range(). This change is justified because the intention is to truncate the page cache from the given offset to the end of the file. Using truncate_pagecache() ensures that any private COWed (Copy-On-Write) pages within the range are also removed, which is necessary since the end of the file will be shifted.

The patch has been signed-off by Lukas Czerner and Theodore Ts'o, indicating that it has been reviewed and approved by them.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dwc2/gadget driver where the s3c_hsotg_phy_disable function is called multiple times during driver removal, causing the phy reference counter to go below zero. This patch removes the redundant calls to s3c_hsotg_phy_disable from s3c_hsotg_remove and s3c_hsotg_udc_stop.

The s3c_hsotg_udc_stop function is already called after usb_gadget_disconnect, which already calls s3c_hsotg_phy_disable. Therefore, there is no need to disable the phy again in s3c_hsotg_remove.

The patch has been signed-off by multiple developers and is also marked for stable release. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch introduces a per-vcpu HYP Configuration Register (HCR) for KVM/ARM. Currently, KVM/ARM uses a fixed HCR configuration per guest, except for the VI/VF/VA bits to control the interrupt in the absence of VGIC. However, with the upcoming need to dynamically reconfigure trapping, it becomes necessary to allow the HCR to be changed on a per-vcpu basis.

The patch mimics what KVM/arm64 already does by adding a per-vcpu HCR field that is initialized at setup time. This allows for more flexibility in configuring the HCR for each vcpu.

The patch also includes changes to various files to support the per-vcpu HCR, such as adding the HCR field to the kvm_vcpu_arch structure and updating the configure_hyp_role macro to use the per-vcpu HCR.

Overall, this patch improves the flexibility and configurability of KVM/ARM by allowing the HCR to be changed on a per-vcpu basis. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue with freezing groups that have stopped tasks. The previous patch removed the function is_task_frozen_enough and replaced it with a simple frozen call, which caused freezing to break for groups with stopped tasks. This patch adds back the is_task_frozen_enough function and uses it at the original locations to correctly handle frozen and stopped tasks.

The patch also includes a testcase to verify the fix.

The patch has been reviewed and Acked-by Li Zefan.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the netfilter xt_hashlimit module where there is a proc entry leak in the netns destroy path. The bug occurs when using xt_hashlimit with both IPv4 and IPv6 together, causing a splat via netconsole. The patch addresses this issue by removing the IPv4 and IPv6 entries and their parent directories in the netns destroy path.

The patch also includes proper cleanup of the proc entries in the htable_destroy() and hashlimit_proc_net_exit() functions.

Overall, this patch fixes a bug and ensures proper cleanup of proc entries, making it suitable for acceptance in Linux -stable releases.
true || ACK

This patch fixes a possible issue in the i2c-sun6i-p2wi driver where the snprintf function is used to copy the platform device name to the adapter name. However, if the platform device name contains formatting characters, it could lead to unexpected behavior or even security vulnerabilities.

The patch replaces the snprintf function with strlcpy, which ensures that the platform device name is copied safely to the adapter name without any formatting issues.

The patch has been reviewed and tested by multiple developers, including Boris BREZILLON and Wolfram Sang. It also addresses an issue reported by Kees Cook.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue in the DMA debug API where multiple mappings of the same buffer were not handled correctly. The patch modifies the search algorithm to set the map_err_type to MAP_ERR_CHECKED on the first buffer that matches the device and DMA address. This ensures that the field is set correctly even in the case of non-IOMMU where multiple addresses exist.

Additionally, the patch mentions a secondary side effect where only the last mapping will have a valid map_err_type in the case of multiple buffers using the same address. However, this behavior may be preferable as it reduces the number of false errors reported for multi-mapped buffers.

The patch has been reviewed and tested by multiple individuals, including Shuah Khan and Andrew Morton. It also has the necessary sign-offs from the authors.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug where the wrong pointer is passed to the free_irq() function. The patch correctly passes the ldata pointer to free_irq() instead of the ldata->rtc pointer. This ensures that the correct IRQ is freed. The patch has been reviewed and signed-off by multiple developers, including the maintainers of the rtc-pl031 driver. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the f75375_write16 function in the hwmon driver for the f75375s chip. The bug is in the bit shifting operation where the value is shifted to the left instead of the right. This results in incorrect extraction of the high byte of the 16-bit word.

The patch corrects the bit shifting operation by shifting the value to the right. This ensures that the high byte is correctly extracted.

The patch has been reviewed and signed-off by the author and the maintainer of the driver. It is also marked for inclusion in the stable releases starting from kernel version 2.6.32.

Based on this analysis, the patch should be accepted in Linux -stable releases.
true || ACK

This patch corrects an incorrect use of BUG_ON in the iscsit_process_nop_out() code. The current code uses BUG_ON to check if the iscsi_cmd pointer is valid, but this can lead to a kernel panic if the pointer is indeed NULL. The patch replaces the BUG_ON with a return statement that generates a REJECT + PROTOCOL_ERROR response, which is the correct behavior in this case.

The patch also provides information about when and how the incorrect BUG_ON was introduced, which helps in understanding the context and impact of the change.

Overall, this patch improves the stability and correctness of the iscsi-target code, and therefore should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the code that restricts access to dmesg_restrict. The original patch incorrectly alters kptr_restrict instead of dmesg_restrict. This patch adds the CAP_SYS_ADMIN check to both dmesg_restrict and kptr_restrict, ensuring that both are sensitive. The patch has been reviewed and Acked by multiple developers, including Serge Hallyn and Richard Weinberger. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the xfs_attr3_leaf_inactive() function in the xfs_attr_leaf.c file. The bug causes incorrect calculation of the length of remote attributes when invalidating an attribute leaf block. The patch correctly calculates the length of the attribute and updates the valuelen field accordingly.

The patch has been reviewed by multiple developers and has been cherry-picked from a commit. It has also been signed-off by the relevant contributors.

Based on the provided information, it appears that the patch addresses a specific bug and has undergone proper review. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM ioapic code that can trigger a BUG_ON condition. The patch checks the return value of kvm_irq_delivery_to_apic and sets ioapic->rtc_status.pending_eoi to 0 if the return value is less than 0. This ensures that the pending_eoi value is always valid and prevents the BUG_ON condition from occurring.

The patch has been reviewed and signed-off by Paolo Bonzini, who is a recognized contributor to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch modifies the code in the ARM Exynos MCPM driver to stop relying on the firmware's secondary_cpu_start function for bringing up secondary CPUs. Instead, it adds its own code to jump to the kernel's entry point for secondary CPUs. This change is necessary because the firmware code provided by the bootloader may vary across different hardware platforms, causing potential issues.

The patch has been reviewed and tested by multiple developers, including Kevin Hilman and Nicolas Pitre, who have both provided their Acked-by tags. The patch also includes the Signed-off-by tags from the original author and the maintainer.

The changes made in the patch are straightforward and do not introduce any new functionality. They only replace the existing code with a simple code sequence to jump to the kernel's entry point. The patch also includes a comment explaining the purpose of the code.

Therefore, based on the analysis of the patch and the positive reviews and testing, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds two new functions, task_ppid_nr_ns() and task_ppid_nr(), which provide an alternative way to lookup the PPID (real_parent's pid_t) of a process in the arbitrary and init_pid_ns. These functions abstract the lookup process and include rcu locking.

The patch also adds a new function, pid_alive(), which checks if a process is alive by checking if the PID is not NULL.

The patch is well-documented and the code changes are clear and concise. It provides a useful addition to the Linux kernel by providing an alternative way to retrieve the PPID of a process. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the transmission handling of the dw_mmc driver. The current handling of IDMAC interrupt sets EVENT_DATA_COMPLETE regardless of DTO rising, which can lead to the next request being permitted even though the current data transfer is still in progress. This can result in a sequence break and lock-up. The patch addresses this issue by removing the setting of EVENT_DATA_COMPLETE after the IDMAC interrupt and ensuring it is taken after the DTO interrupt is generated.

The patch has been reported by Dmitry Shmidt and has been signed-off by Seungwon Jeon and Hyeonsu Kim. It has also been Acked by Will Newton.

Based on the provided information, it appears that the patch addresses a valid issue and has received appropriate review and testing. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM net code related to the emit_udiv() function. The bug occurs when the BPF_ALU | BPF_DIV | BPF_K instruction is used, where the rn register is ARM_R0 (r_scratch) and the rm register is ARM_R4 (r_A). The patch ensures that the rn register is loaded into ARM_R1 before loading the rm register into ARM_R0, preventing accidental overwriting of ARM_R0 with rm.

The patch has been reviewed and Acked-by Mircea Gherzan <mgherzan@gmail.com>. It also includes the Fixes tag for commit aee636c4809f (bpf: do not use reciprocal divide).

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the sane_reclaim() helper function in the vmscan.c file. The function is supposed to return false for memcg reclaim if the legacy hierarchy is used, but it was accidentally broken by a previous commit. The patch correctly checks if the cgroup is on the default hierarchy before returning true.

The patch has been reviewed and Acked-by Tejun Heo and Michal Hocko, indicating that they have reviewed and approved the patch. The patch also includes the Fixes tag, referencing the commit that introduced the bug.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. It fixes an off-by-one error in the OOB-port completion handler in the digi_acceleport USB serial driver. The previous fix for an underflow loop condition introduced another error, causing modem-status changes to go unnoticed and breaking TIOCMGET functionality. The patch corrects the loop condition by adjusting the loop termination condition from "urb->actual_length - 4" to "urb->actual_length - 3". The issue was reported by Ben Hutchings and the patch has been tested and signed-off by Johan Hovold and Greg Kroah-Hartman.
true || ACK

This patch adds a quirk to the Intel i915 driver to ignore the backlight presence check for the Acer C720 and C720P Chromebooks. The VBT (Video BIOS Table) for these devices incorrectly reports that they do not have a controllable backlight, but in reality they do. The patch has been tested by multiple individuals and has a Bugzilla reference for further information.

Given that this patch fixes a specific issue with the backlight on these Chromebooks and has been tested, it should be accepted in Linux -stable releases.
true || ACK

This patch corrects a typo in the documentation and removes the incorrect use of the DESCE and CDESC bits from the DMA channel status register. The patch fixes a potential issue where the status register would always return non-zero values for these bits, even when the descriptor is empty. By removing these bits when reading the status register, the correct values will be returned.

The patch also includes the necessary changes to the hsu.h header file to remove the definitions of the DESCE and CDESC bits.

Overall, this patch fixes a documentation error and improves the accuracy of the DMA channel status register. It does not introduce any new issues and is a straightforward fix. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where the connection_lost_while_pending event was not being applied to requests on the barrier_acked_requests list. The patch adds the necessary code to apply the event to these requests. Additionally, the patch also includes a fix for completing local only READs correctly.

The changes in the patch are necessary to ensure that the connection_lost_while_pending and resend events are properly applied to requests on the barrier_acked_requests list. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the dm snapshot persistent module where memory allocated for 'pstore' and 'metadata_wq' was not properly cleaned up in the error path of the persistent_ctr() function. This could lead to memory leaks.

The patch correctly adds the necessary cleanup code to destroy the 'metadata_wq' and free the allocated memory for 'pstore' in the error path. It also properly handles the error conditions by returning the appropriate error code.

Therefore, this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes the issue of uninitialized data use in the hns_dsaf_set_promisc_tcam() function. The patch initializes the tbl_tcam_data and tbl_tcam_mask structures before using them, which ensures that the data is properly initialized and avoids potential issues with uninitialized data.

The patch also includes a fix for a build error reported by gcc-7.0.1, which points out the use of uninitialized data. By initializing the structures, this error is resolved.

Overall, this patch improves the code quality and ensures that the hns_dsaf_set_promisc_tcam() function works correctly. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the mac80211 module where the SP (Spatial Reuse Protocol) is not closed properly when frames are enqueued during the SP. This can lead to the WLAN_STA_SP flag never being cleared, preventing the opening of new SPs and the response to poll frames from the client.

The patch manually clears the WLAN_STA_SP flag if a frame that was polled during the SP is queued due to a starting A-MPDU session. This ensures that even though the client may not see the EOSP bit, it will still be able to poll new frames in another SP.

The patch has been reported by Alesya Shapira and signed-off by Emmanuel Grumbach and Johannes Berg, who are reputable contributors to the Linux kernel.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch modifies the usb_storage driver to avoid freezing in the usb-stor-scan function. The patch introduces the use of set_freezable_with_signal() instead of set_freezable() to request a fake signal when freezing. It also replaces wait_event_freezable_timeout() with wait_event_interruptible_timeout() to avoid freezing.

The patch addresses the issue of usb-stor-scan freezing another thread waiting on scanning to complete, which may fail to freeze during suspend or hibernation. By using set_freezable_with_signal() and wait_event_interruptible_timeout(), the patch ensures that the freezer will wait on usb-stor-scan to exit, and threads waiting for scanning to finish will no longer be blocked.

The patch has been reviewed and Acked-by Alan Stern and signed-off by Seth Forshee and Greg Kroah-Hartman.

Based on the provided information, it seems that the patch is well-implemented and addresses a known issue. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds support for the Killer E2500 device ID in the alx driver. The patch modifies the main.c and reg.h files in the drivers/net/ethernet/atheros/alx directory.

The patch adds the device ID for the Killer E2500 to the alx_pci_tbl array in the main.c file. This allows the driver to recognize and handle the Killer E2500 network card correctly.

Additionally, the patch adds the device ID definition for the Killer E2500 to the reg.h file. This ensures that the correct device ID is used throughout the driver code.

Overall, this patch is a straightforward addition that enables support for the Killer E2500 network card in the alx driver. It does not introduce any new functionality or modify existing code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a performance issue in the mlx4_core driver by relieving the CPU load average on the port sending flow. The patch modifies the wait_for_completion_timeout() function call to use wait_for_completion_interruptible_timeout() for the SENSE_PORT command. This change puts the thread in the interruptible state, which does not contribute to the CPU load average.

The patch also handles the interrupted case by treating it as if the SENSE_PORT command returned port_type = NONE.

The patch has been reviewed and suggested by experienced developers from Mellanox and Sandisk.

Overall, this patch improves the performance of the mlx4_core driver and addresses a specific issue related to CPU load average. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the nau8825 driver where the clk_ref_div is not configured correctly in the Pre-Scalar of FLL. The patch correctly assigns the value of clk_ref_div by shifting it by NAU8825_FLL_REF_DIV_SFT before updating the register. This ensures that the correct value is assigned to clk_ref_div.

The patch also includes the necessary changes in the nau8825.h header file to define the NAU8825_FLL_REF_DIV_SFT and NAU8825_FLL_REF_DIV_MASK macros.

Overall, this patch addresses a specific issue in the nau8825 driver and provides the correct configuration for clk_ref_div in the Pre-Scalar of FLL. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the memory_is_poisoned_16() function in the kasan.c file. The bug occurs when the memory is aligned on 8 bytes, causing the last_byte variable to be incorrectly calculated. The patch correctly checks if the address is aligned on 8 bytes using the IS_ALIGNED macro and returns false if it is, avoiding the unnecessary call to memory_is_poisoned_1(). The patch has been reviewed and Acked-by Andrey Ryabinin, indicating that it has been reviewed and approved by another developer. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an endianness issue in the mma9553 driver for the iio accelerometer. The original code incorrectly assumed that the received buffer of 16-byte words was in little endian format, leading to incorrect values for step count and activity on big endian machines. The patch refactors the code for simplicity and clarity and correctly handles the endianness issue by using a temporary buffer to store the received data and then extracting the activity and step count values from the buffer in the correct order.

The patch has been reviewed and tested by the author and has also been reported by a user. The changes are straightforward and do not introduce any new functionality or potential regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch is a clean-up change that fixes a semantic issue in the rt6_clean_expires() function. The function is currently setting rt->dst.expires to 0, but it should be setting rt->dst.from to NULL to clear the RTF_EXPIRES flag. This change is functionally a NOP, as it does not affect the behavior of the code.

The patch has been reviewed and signed-off by Jiri Bohac and David S. Miller, indicating that it has been reviewed by experts in the field. Therefore, it can be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition in the ixgbe driver that can occur when setting the advertised speed. The race condition can lead to a "setup link failed with code -14" error. The patch adds a check for __IXGBE_IN_SFP_INIT before calling the setup_link function, which resolves the race condition.

The patch has been reported by Scott Harrison and tested by Phil Schmitt. It has also been signed-off by Emil Tantilov and Jeff Kirsher.

Based on the provided information, the patch appears to be a valid fix for the reported issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch increases the loop count in the rb_iter_peek() function from 2 to 3. The patch fixes a bug where the function would trigger a warning and return NULL when the loop count exceeded 2. The patch explains that there are legitimate cases where the function needs to loop 3 times, such as when encountering a time extend event or reaching the end of a page. The patch also includes a fix for a warning message that is triggered when the loop count exceeds 3.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the issue where the driver does not generate an alarm interrupt even though a time for an alarm is set. The problem arises from disabling rtc_clk after setting the alarm time. To generate an alarm interrupt, the driver should maintain its enabled state for rtc_clk until the alarm interrupt occurs. This patch allows the generation of an alarm interrupt by introducing a new function, s3c_rtc_alarm_clk_enable, which enables or disables the rtc_clk based on the input parameter. The function is called in the s3c_rtc_alarmirq and s3c_rtc_setaie functions to ensure that the rtc_clk is enabled when needed. The patch also makes s3c_rtc_alarm_clk_lock local to s3c_rtc_alarm_clk_enable to avoid potential conflicts with other parts of the code.

Overall, this patch addresses a bug and improves the functionality of the driver. It does not introduce any new issues or regressions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug where PCI-PCI bridge windows are not properly clipped to fit inside an upstream bridge window. This can lead to orphaned address space that is unreachable from the primary side of the upstream bridge.

The patch adds a function `pcibios_fixup_device_resources` that clips the bridge windows to fit inside the upstream window and updates the bridge accordingly. It also adds a function `pcibios_fixup_bridge_resources` that fixes the bridge resources.

The patch has been tested and reported to fix the issue by the original reporter. It also includes the necessary Signed-off-by tags from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a locking bug in the ttm_buffer_object_transfer function in the drm/ttm module. The bug is caused by holding the fence_lock spinlock over a kmalloc(GFP_KERNEL) call, which can cause a might_sleep warning in atomic context. The fix is to revert the previous commit and only take the lock where it is needed, around the call to ->sync_obj_ref.

The patch has been reviewed and tested by multiple individuals, including the original author and other maintainers. It addresses a known issue and provides a clear and concise fix. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the md/raid10 driver where the variable "max_sync" is assigned to itself, which is incorrect. The correct variable to assign to is "bad_sectors", as shown in the similar earlier check.

The bug has been present since 3.1-rc1 and although it is minor, it could potentially cause corruption or other bad behavior.

The patch has been reviewed and signed-off by Dan Carpenter and NeilBrown, and it is recommended to be included in the Linux -stable releases.

Cc: stable@vger.kernel.org
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Signed-off-by: NeilBrown <neilb@suse.de>,drivers/md/raid10.c
true || ACK

This patch addresses a problem where if the reconstruction of the BIOS framebuffer fails, the primary plane is left in a state where it indicates visibility but has a NULL framebuffer. This mismatch can cause problems later on, particularly for the watermark code. The patch solves this issue by disabling the primary plane and pretending that the BIOS never had it enabled.

The patch also includes a call to the `intel_pre_disable_primary()` function, which is necessary for proper disabling of the primary plane.

Overall, this patch provides a straightforward and effective solution to the problem and should be accepted in Linux -stable releases.
true || ACK

This patch fixes the credit return threshold adjustment on mtu change algorithm in the IB/hfi1 driver. The patch ensures that the credit return thresholds are adjusted for all the allocated and assigned kernel send contexts based on the MTU adjustment per VL. It also updates the credit return threshold values for all the remapped kernel send contexts when the pio send context map is changed dynamically.

The patch has been reviewed by multiple developers and has their Reviewed-by tags. It also has the Signed-off-by tags from the authors.

The changes in the patch are necessary to ensure correct behavior of the IB/hfi1 driver and do not introduce any new risks or issues. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an off-by-one error in the handling of continuation in /proc/net/route. The current code fails to take into account that the 0th entry is the header, leading to the skipping of the first entry when doing a continuation read.

The patch correctly fixes the off-by-one error by decrementing the position before checking if it is less than or equal to 0. This ensures that the first entry is not skipped during continuation reads.

The patch also includes the necessary Fixes and BugLink tags, as well as the Acked-by and Signed-off-by tags from relevant contributors.

Based on the provided information, the patch appears to be a valid fix for the reported issue and should be accepted in Linux -stable releases.
true || ACK

This patch fixes an integer overflow issue in the ARM architecture related to the ELF_ET_DYN_BASE value. The current calculation of ELF_ET_DYN_BASE overflows 32 bits, causing issues with AddressSanitizer (ASan) and Position Independent Executables (PIE) binaries.

The patch resolves the overflow issue by dividing TASK_SIZE prior to multiplying, ensuring that ELF_ET_DYN_BASE is calculated correctly. After applying the patch, ELF_ET_DYN_BASE will be set to (TASK_SIZE / 3 * 2) for CONFIG_VMSPLIT_3G=y.

This patch is important for maintaining compatibility with ASan and PIE binaries, especially when ASLR is disabled or when PIE binaries load in the range of [0x2a000000 - 0x40000000]. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a deadlock issue between rmmod and set_mode functions in the IB/ipoib driver. The problem occurs when set_mode function tries to lock rtnl_lock after freeing it, while rmmod function tries to lock sys/fs after locking rtnl_lock. This creates a deadlock situation.

The patch modifies the set_mode function to check if ipoib_set_mode function returned -EBUSY, which indicates that the function returned with rtnl held. If it did not return -EBUSY, then the patch unlocks rtnl_lock. This ensures that the lock is released properly and avoids the deadlock.

The patch also modifies the ipoib_set_mode function to use rtnl_trylock instead of rtnl_lock. This allows the function to return -EBUSY if the lock is already held, preventing the deadlock.

The patch includes a Fixes tag and is signed-off by multiple developers. It has also been tested and verified to fix the deadlock issue.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes alignment issues for ARM64 architecture in the v4l2-compat-ioctl32 module. The patch aligns certain fields using the compat_u64 type and unpacks a struct to ensure compatibility with ARM64 kernels without breaking compatibility with AMD64.

The patch has been reviewed and signed-off by multiple developers, including Andrzej Hajda, Hans Verkuil, and Mauro Carvalho Chehab. It also includes a stable tag for v3.10 and up.

The changes in the patch are necessary to ensure proper alignment and compatibility on ARM64 architecture, and there are no apparent issues or regressions introduced by the patch. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Based on the provided patch, it appears that the change is necessary to ensure proper synchronization between the ->mmap_sem and ->page_table_lock locks. The patch adds the ->page_table_lock lock acquisition before calling flush_tlb_range() and releases it afterwards. This ensures that the page table flushing operation is performed safely when ->mmap_sem is not held.

The patch also provides a clear explanation of why this change is needed and references specific code locations where similar operations are performed.

Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the kvm_alloc_linear function in the Book3S HV implementation of KVM for PowerPC. The bug occurs when the free_linears list is empty, causing a NULL pointer dereference crash in memset. The patch resolves this issue by using a separate variable for the return value from the loop iterator.

The patch has been reviewed and signed-off by multiple developers, including Paul Mackerras and Alexander Graf. It also includes a clear description of the problem and the solution.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the radeon driver where semaphore values were incorrectly initialized as 32-bit instead of 64-bit. This bug could lead to synchronization issues when the upper 32 bits of the semaphore value were not zero.

The patch correctly changes the type of the `cpu_addr` variable from `uint32_t*` to `uint64_t*`, ensuring that semaphore values are correctly initialized with 64 bits.

The patch has been reviewed by Grigori Goronzy and signed-off by Christian König and Alex Deucher, who are both maintainers of the radeon driver.

Given the nature of the bug and the correctness of the patch, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch corrects the file permission for the "split_huge_pages" debugfs file. The patch changes the permission from 0644 (readable by all) to 0200 (writeable only). This change makes sense because the "split_huge_pages" file does not support the get method, so the read permission is confusing.

Additionally, the patch adds a newline character ("\n") to the output of the set method, making it more readable.

The patch has been reviewed and Acked-by Kirill A. Shutemov, indicating that it has been reviewed and approved by another developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a module parameter and a config option to allow disabling the use of efivars as a pstore backend by default. This is important because writing too much data to UEFI variables can lead to bricking machines with some firmware implementations. By adding this feature, users can choose to disable the use of efivars as a pstore backend if they want to avoid potential issues.

The patch also includes a module parameter, "pstore_disable", which can be used to override the default setting and enable or disable the use of efivars as a pstore backend on a per-module basis.

Overall, this patch provides a useful feature for users who want to avoid potential issues with writing large amounts of data to UEFI variables. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the handling of md5sig_pool references in the TCP code. The current implementation assumes that multiple TCP md5sig peers only hold one reference to md5sig_pool, but tcp_v4_md5_do_add() increases the use count of md5sig_pool for each peer. This can lead to memory leaks and incorrect behavior.

The patch modifies tcp_v4_md5_do_add() and tcp_v6_md5_do_add() to only increase the use count of md5sig_pool for the first TCP md5sig peer. This ensures that the use count is correctly managed and avoids memory leaks.

The patch also adds checks to free md5sig_pool if there are no entries for TCP md5sig peers. This ensures that resources are properly released when there are no active md5sig peers.

Overall, this patch fixes a bug and improves the memory management in the TCP code. It should be accepted in Linux -stable releases.
true || ACK

This patch fixes a use-after-free bug in the mac80211 module's defragmentation code. The bug occurs when receiving the last fragment of a packet, where all but the first fragment are freed. However, the multicast check for statistics at the end of the function refers to the current skb (the last fragment), causing a use-after-free bug.

The patch modifies the check for multicast frames to also do the accounting, fixing the issue. Since multicast frames cannot be fragmented and this check is done early in the function, it is safe to assume that the fix is correct.

The patch has been reported by Yosef Khyal and signed-off by Johannes Berg. It is also marked for stable release, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a workaround for preventing screen corruption with frame buffer compression (FBC) on Skylake (skl) and Kaby Lake (kbl) platforms. The patch modifies the ILK_DPFC_CHICKEN register to set the ILK_DPFC_NUKE_ON_ANY_MODIFICATION bit, which is recommended by the Bspec documentation.

The patch has been reviewed and tested by the Intel graphics team, and it has been cherry-picked from a previous commit. The references to HSD#2227109 and HSDES#1404569388 provide additional information about the issue being addressed.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the USB gadget HID driver. The current implementation uses a static variable `hidg_desc` to store the HID descriptor, which can be overwritten if multiple instances of the HID function are used with different report descriptors. This can lead to incorrect behavior when sending the HID descriptor to the host.

The patch introduces a local copy of `hidg_desc` in the `hidg_setup` function, which is modified to have the correct report descriptor length. This ensures that the correct HID descriptor is sent to the host.

Additionally, the patch modifies the `hidg_bind` function to use a separate `hidg_desc` struct instead of the static variable. This ensures that the content of `hidg_desc` won't change after returning from the function.

Overall, this patch fixes a bug and improves the reliability of the USB gadget HID driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition in the stmmac driver where the network device can be made visible before all necessary resources, such as the clock and MDIO bus, have been set up. This can lead to errors during device initialization.

The patch ensures that register_netdev() is the last thing being done, guaranteeing that the clock and MDIO bus are available before the network device is registered.

The patch has been tested and reported by Kweh, Hock Leong <hock.leong.kweh@intel.com> and has been signed-off by Florian Fainelli <f.fainelli@gmail.com> and David S. Miller <davem@davemloft.net>.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a missing pool reference count decrement in the pool_ctr error path in the dm thin driver. The patch is fixing a bug introduced in commit ac8c3f3df, which added a new feature to generate an event when the metadata threshold is passed.

The patch correctly updates the error handling code to decrement the pool reference count before jumping to the out_flags_changed label. This ensures that the reference count is properly decremented in case of an error during the pool_ctr function.

The patch also includes the necessary stable tag, indicating that it should be applied to the stable branch for Linux kernel versions 3.10 and above.

Based on this analysis, the patch appears to be a valid fix for a bug and should be accepted in Linux -stable releases.
true || ACK

This patch sets the default hoplimit value to zero in the IPv6 code. The previous default value was 255, but this patch changes it to 0. This change is consistent with the behavior of other metrics in the code, such as RTAX_MTU, which is already set to zero by default.

Setting the default hoplimit to zero makes sense because it ensures that the hoplimit is explicitly set by the caller when creating a new route. This avoids any potential issues with uninitialized values and provides more control over the hoplimit value.

Additionally, this patch also updates the icmp6_dst_alloc function to set the hoplimit to zero when allocating a new destination entry. This ensures consistency throughout the codebase.

Overall, this patch is a straightforward and reasonable change that improves the clarity and correctness of the IPv6 code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a bug where reading a split 64-bit register may result in an endless loop due to unstable upper 32 bits. The patch limits the number of loops to a maximum of 2 and reports the most recent values when encountering an unstable register.

The bug has been reported and reviewed, and the patch has been signed-off by the relevant developers. It also includes a reference to the bug report in Bugzilla.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a compiler warning generated since commit 54196ccbe0ba in the Linux kernel. The warning is related to a comparison of distinct pointer types lacking a cast. The patch resolves this warning by changing the return type of the `efm32gg_cmu_init` function from `int` to `void`.

The patch has been reviewed by Arnd Bergmann and reported by Bryan Hundven. It has also been signed-off by Uwe Kleine-König and Mike Turquette.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory exposure problem in the xfs_inumbers function in the xfs_itable.c file. The issue is that the buffer array is allocated without zeroing the memory, and then the kernel memory contents are copied into userspace without filtering out the junk data.

The patch addresses this problem by using kmem_zalloc instead of kmem_alloc to allocate the buffer array. kmem_zalloc ensures that the allocated memory is zeroed out, preventing any potential exposure of kernel memory contents.

The patch has been reviewed by Christoph Hellwig and has been signed-off by Darrick J. Wong, indicating that it has undergone thorough review and testing.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a use-after-free bug in the Btrfs file system. The bug occurs when there is a transaction to clean up, and there are delayed inodes that refer to their respective fs_root. By moving the del_fs_roots() function call after the btrfs_cleanup_transaction() function call, the use-after-free bug is avoided.

The patch has been reported by David Sterba and signed-off by Josef Bacik and Chris Mason, who are recognized contributors to the Btrfs file system.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the l2tp_ip and l2tp_ip6 modules where a reference to the tunnel socket is not held properly. The code following l2tp_tunnel_find() expects a new reference to be held on the socket, but currently, either sk_receive_skb() or the discard_put error path will drop a reference from the tunnel's socket.

The patch addresses this issue by adding a sock_hold() call to hold the tunnel socket when it is found. This ensures that the reference count is properly maintained.

Based on the provided information, the patch appears to be a valid fix for the issue described. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a stack overflow crash in the powerpc architecture when running with ftrace enabled. The crash occurs due to a stack overflow in the resume_kernel function, which leads to corruption of the thread_info structure.

The patch addresses the issue by ensuring that the RUNLATCH_ON routine is called after DISABLE_INTS, which reconciles the irq state in the paca with the hardware and makes it safe to call local_irq_save/restore(). Additionally, the patch marks the runlatch routines as notrace to avoid unnecessary tracing overhead.

The fix is necessary to prevent crashes and corruption in the kernel stack, and it has been tested and signed-off by the relevant developers. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the ipv6_cow_metrics() function where it assumes that only DST_HOST routes require dynamic metrics allocation from inetpeer. However, this assumption breaks when a router with RTAX_MTU and RTAX_HOPLIMIT metric is discovered through ndisc. The patch creates the metrics array in ipv6_cow_metrics() by calling dst_cow_metrics_generic.

The patch also includes a test case that verifies the fix by checking the routing table before and after applying the patch.

Based on the provided information, the patch appears to address a specific issue and includes a test case. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a specific issue with the Intel Valleyview SoC where SATA device sleep (DEVSLP) is not reliable. When DEVSLP is attempted on certain SSDs, it can result in the malfunction of the AHCI controller. The AHCI controller may not be shown in PCI enumeration after a reset, and complete power source removal may be required to recover from this failure.

The patch blacklists the Intel Valleyview SoC device and overrides the reported capabilities of the host device. This ensures that device LPM will only attempt slumber but not DEVSLP. Additionally, the patch sets a flag to disable DEVSLP for the affected device.

The patch has been reviewed and Acked-by two Intel developers, indicating that it has been tested and approved by them.

Based on the provided information, it is recommended to accept this patch in Linux -stable releases to address the reliability issue with DEVSLP on Intel Valleyview SoC.
true || ACK

This patch fixes a bug in the br_multicast_query_expired() function in the bridge code. The intent of the code was to clear the port field, but instead, it was clearing the pointer to the querier. This patch corrects the issue by clearing the port field instead.

The patch has been reviewed and Acked-by two developers, Thadeu Lima de Souza Cascardo and Linus Lüssing. It also includes the Fixes tag, indicating that it addresses a specific issue.

Based on this information, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the KVM VMX code where the guest would shut down if a PML full VMEXIT occurred during event delivery. According to Intel SDM 27.2.3, PML full VMEXIT can occur when an event is being delivered through IDT, so the patch ensures that KVM does not exit to user space with an error in this case. Instead, it lets the EXIT_REASON_PML_FULL go through and the event will be re-injected on the next VMENTRY.

The patch has been reviewed and signed-off by Lei Cao and Radim Krčmář, and it also includes a Fixes tag referencing the commit that introduced the PML support in VMX.

Given the nature of the bug and the fix, and the fact that it has been reviewed and tested, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a problem where there is a small gap between the jack detection unsolicited event and the time the ELD (EDID-like Data) is updated. This can cause user-space queries for HDMI ELD information to fail. The patch delays the HDMI jack detect notification until the ELD information is fully updated, which helps avoid this problem.

The patch modifies the `hdmi_present_sense` function to return a boolean value indicating whether the ELD information is fully updated. If the ELD information is not fully updated, the function does not report the jack status to user-space. This ensures that user-space queries for HDMI ELD information will not fail due to the timing gap.

The patch also adds a check for AMD codecs, which create the ELD by themselves. For AMD codecs, the function always returns true, indicating that the ELD information is fully updated.

Overall, this patch provides a workaround to improve the reliability of HDMI ELD information retrieval. It has been reviewed and signed-off by a recognized developer in the ALSA community. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a deadlock issue in the btrfs file system. The previous implementation was calling btrfs_attach_transaction from the async delayed ref start code, which is not safe and was causing a deadlock. This patch replaces it with btrfs_join_transaction and checks for a blocked commit.

The changes in the patch ensure that if the commit is already started, there is no need to wait. It also checks if the transaction ID is different before flushing, avoiding unnecessary flushing if we got into a different transaction.

Overall, this patch addresses the deadlock issue and improves the safety and efficiency of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARCNET driver by correctly setting the hard_header_len field of the net_device structure. The current code sets it to the size of struct archdr, which includes a union of possible soft headers. However, when inserting packets, the soft headers might be short or even absent. Therefore, the patch changes the hard_header_len to be the size of struct arc_hardware, which is the bare minimum header required for ARCNET.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and found to be correct. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ext4 file system where the block zeroing was not done correctly when punching holes in indirect block files. The patch correctly passes the block pointer to the ext4_clear_blocks() function, ensuring that the proper place in the inode/indirect block is zeroed out. This prevents subtle issues and ensures that changes to the inode are not lost. The patch has been reviewed and signed-off by Jan Kara and Theodore Ts'o, indicating that it has been tested and approved by experienced developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a compile warning in the isicom driver when building an arm allmodconfig kernel. The warning is related to an integer overflow in the bitwise operands of the generic byte swapping code. By marking the input argument as unsigned, the warning is avoided.

The patch has been reviewed and signed-off by Arnd Bergmann and Greg Kroah-Hartman, indicating that it has been tested and approved by experienced developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a segmentation fault issue in the f_midi driver when reading an empty id attribute. The patch prevents a null pointer dereference by checking if the id is null before copying it to the page buffer. If the id is null, it sets the page buffer to an empty string and returns 0.

The patch has been tested and fixes the issue as described in the reproduction path. It is a simple and straightforward fix that prevents a potential crash.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the pfkey_msg2xfrm_state() function in the xfrm module. The bug causes the function to accidentally return a NULL pointer instead of an error pointer, leading to a NULL pointer dereference. The patch adds missing error code handling to properly handle the error condition and return an error pointer.

The patch also includes a Fixes tag, indicating that it addresses a specific commit that introduced the bug. This provides additional context and confirms that the patch is indeed fixing a bug.

The patch has been reviewed and signed-off by two developers, Dan Carpenter and Steffen Klassert, indicating that it has undergone peer review and testing.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch removes the driver from the pending list only if the probe result is -EPROBE_DEFER, which indicates that the probe should be retried. This ensures that the driver is not removed from the pending list on every probe error, which could lead to incorrect behavior.

The patch also includes the necessary Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the f81232 USB serial driver. The patch replaces the attach and release functions with port_probe and port_remove functions, which properly allocate and deallocate memory for the port private data.

The patch has been compile-only tested and does not introduce any new functionality or regressions. It also includes the necessary Signed-off-by tags and is marked for stable release.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds the missing SYSC_HAS_ENAWAKEUP flag to the dispc's sysc_flags in the OMAP3 hardware module data. This flag is necessary to prevent SYNC_LOST errors from the DSS when power management is enabled. The patch has been signed-off by the relevant developers.

Although there are other flags missing (clock activity, DSI's sysc flags), they are not critical and will be addressed in the next merge window.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes two issues in the mISDNipac_irq function. 

First, the loop count (cnt) starts as maxloop + 1, causing all the loops to iterate one more time than intended. This patch corrects this by changing the loop condition to "while (ista && --cnt)".

Second, at the end of the loop, there is a test for "if (maxloop && !cnt)", but for the first two loops, cnt ends up being -1. This patch changes the test to a pre-operation, ensuring that cnt is set to 0 at the end of the loop.

The patch has been tested and fixes the issues described. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds support for the Ivybridge processor by adding its CPU ID to the list of supported CPU IDs in the intel_pstate driver. The patch is signed-off by two Intel developers, indicating that it has been reviewed and tested.

Since the patch adds support for a specific processor and does not modify any existing functionality, it is safe to include in Linux -stable releases.
true || ACK

This patch moves the PCRC and PRRC register settings to the end of the hw_params() function in the fsl_esai driver. According to the ESAI Initialization chapter of the Reference Manual, the PCRC and PRRC registers should be set after the T/RCCR and T/RCR configurations are done but before TE/RE's enabling.

By moving the PCRC and PRRC settings to the end of hw_params(), the patch ensures that the registers are configured at the correct time during the initialization process.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds USB-DMA ID for the ARM mach-shmobile mackerel board. It assigns channel0 as Tx and channel1 as Rx for USB-DMA operations. This patch also sets the d0_tx_id and d1_rx_id values for both usbhs0_private and usbhs1_private structures.

Based on the provided information, this patch appears to be a valid addition to the Linux kernel for the mackerel board. It adds necessary configuration for USB-DMA operations, which can improve the performance and functionality of USB communication on this board.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a quirk for the HP Compaq dc5750 Small Form Factor machine to address a resume issue when the radeon driver is loaded. The patch checks for the specific device and subsystem vendor and device IDs to apply the quirk. This quirk has been applied to other devices as well to resolve similar issues.

Given that the patch specifically targets a known issue and has been tested on the affected hardware, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a problem where pfmemalloc pages can leak to non-pfmemalloc users. It fixes a scenario where a normal allocation request can result in frequent deactivation and reactivation of pfmemalloc pages, leading to performance degradation.

The patch modifies the get_partial_node() function to consider pfmemalloc_match() and prevent the "deactivate -> re-get in get_partial()" scenario. Instead, it calls new_slab() to allocate a new slab.

The patch has been reviewed and Acked-by David Rientjes and signed-off by Joonsoo Kim, Mel Gorman, Andrew Morton, and Linus Torvalds.

Based on the provided information, it seems that the patch addresses a valid issue and has received appropriate review and approval. Therefore, it should be accepted in Linux -stable releases.
true || ACK

The patch fixes a bug in the kxcjk1013_set_range function in the iio: accel: kxcjk-1013 driver. Currently, when changing the range from 4G to 2G, the GSEL0 value is not being set correctly. The patch corrects this issue by clearing the GSEL0 and GSEL1 bits before setting them to the new values.

The patch has been reviewed and tested by the appropriate individuals and has been found to fix the issue. It also includes the necessary Fixes and Signed-off-by tags.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a typo in the logic of the code. The condition `NISLANDS_DPM2_SQ_RAMP_LTI_RATIO <= (LTI_RATIO_MASK >> LTI_RATIO_SHIFT)` should be `NISLANDS_DPM2_SQ_RAMP_LTI_RATIO > (LTI_RATIO_MASK >> LTI_RATIO_SHIFT)` to correctly enable `enable_sq_ramping`. The patch corrects this typo and ensures that `enable_sq_ramping` is set correctly based on the condition. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a memory allocation error that can occur when a SMB3 server responds with a MaxTransactSize greater than 4M. The patch sets the MaxTransactSize to the maximum supported value of 65536 bytes, which is the maximum buffer size that the client supports for 1 credit.

The patch also updates the wsize and rsize values in the smb2_negotiate_wsize and smb2_negotiate_rsize functions to use the maximum buffer size value of 65536 bytes.

Overall, this patch addresses a potential memory allocation error and ensures that the client uses the maximum supported buffer size for SMB3 mounts. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the MIPS architecture where the kernel tries to read a register that doesn't exist, causing undefined behavior and potentially crashing the system. The patch checks if the FRE (Floating Point Register Enable) is available before trying to clear it. This ensures that the register is only modified if it actually exists, preventing any potential issues.

The patch has been reviewed and signed-off by Ralf Baechle, who is a recognized expert in the Linux MIPS architecture. Therefore, it can be considered reliable and suitable for inclusion in Linux -stable releases.
true || ACK

This patch adds a necessary functionality to the DRM/i915 driver in the Linux kernel. It ensures that the DP_AUDIO_OUTPUT_ENABLE bit is cleared when a DP monitor is hot removed. This allows the audio driver to receive hot plug events and update its device state and ELD contents accordingly.

The patch has been tested and found to work correctly for both hot plug/remove and DPMS on/off scenarios.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || NAK

Based on the patch description, the author suggests removing the unaligned AIO warning printk because it generates unnecessary support calls and sounds more dire than the situation really is. However, it is important to note that this warning serves as a useful indication for users to investigate poor IO patterns if bad performance is encountered.

Removing the warning message may lead to users not being aware of potential performance issues caused by unaligned AIO/DIO operations. Therefore, it is recommended to keep the warning message in the code to provide users with valuable information and help them troubleshoot performance problems.
true || ACK

This patch fixes a bug in the exec code that can lead to stack exhaustion when executing binaries with a large number of tiny strings. The bug occurs because the storage for the pointers to the strings is not included when limiting the size of the strings during exec. As a result, the pointers can consume additional stack space, leading to stack exhaustion.

The patch addresses this issue by accounting for the size of the pointers when limiting the size of the strings. It calculates the total size of the strings and pointers and checks if it exceeds 1/4 of the stack limit. If it does, the patch returns an error and fails.

The patch has been reviewed and acknowledged by multiple developers, including Rik van Riel, Michal Hocko, and Andrew Morton. It also includes a fix for a CVE-2017-1000365 vulnerability.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the s5p-sss crypto driver where the driver was completing the crypto request in the interrupt handler, which is disallowed since the conversion to skcipher. This was causing a warning to be triggered. 

The patch changes the interrupt handler to use a threaded interrupt handler and converts it to oneshot. This ensures that the completion of the crypto request is done outside of the interrupt handler, resolving the issue.

The patch has been reviewed and signed-off by the relevant developers. It is a simple and straightforward fix for a known issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the calculation of the virtual space size for 32-bit MPX binaries running on 64-bit kernels. The bug caused an incorrect size to be calculated for bd_entry_virt_space(), leading to bounds tables not being properly unmapped. While this bug did not have a functional impact, it did result in memory leakage.

The patch correctly handles all three possible cases: 32-bit binary on 64-bit kernel, 64-bit binary on 64-bit kernel, and 32-bit binary on 32-bit kernel. It adjusts the calculation of bd_entry_virt_space() based on the architecture and ensures that the correct size is used.

The patch has been reviewed and signed-off by multiple developers, including Dave Hansen and Ingo Molnar. It has also been CC'd to the stable mailing list, indicating that it is suitable for inclusion in Linux -stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an off-by-one error in the iterate_fd() function in fs/file.c. The patch correctly adjusts the loop condition and moves the increment of the loop variable inside the loop. This ensures that the callback function is called for all valid file descriptors in the file table.

The patch has been reviewed and signed-off by Al Viro, who is a well-known and respected Linux kernel developer. The change is straightforward and does not introduce any new functionality or complexity.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where a connect header could be sent over the wire before the authorizer protocol or buffer length fields were initialized. By moving the addition of the authorizer buffer to the caller function, prepare_write_connect(), the connect header can be fully initialized before being sent.

The patch also adds error handling for cases where the connection is closed or opening, preventing further processing.

The patch has been reviewed by Sage Weil and the issue it fixes is tracked at http://tracker.newdream.net/issues/2424.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the error handling of the init_tis() function in the tpm_tis driver. It adds the missing platform_driver_unregister() call and removes the duplicate platform_device_unregister() call in the error handling case.

The patch has been reviewed and tested by multiple developers, including Jason Gunthorpe and Jarkko Sakkinen. It also includes a Fixes tag, indicating that it addresses a specific issue.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where AUDIT_USER_AVC messages are being silently discarded when the audit=1 kernel parameter is absent and auditd is not running. The patch modifies the audit_log_common_recv_msg() function to special case AUDIT_USER_AVC messages and allow them to be sent to userspace using printk() even when audit_enabled is 0.

The patch has been reviewed and Acked-by Kees Cook <keescook@chromium.org>. It also includes the necessary Cc's and Signed-off-by's.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a specific issue where kmemleak dumps the contents of leaked objects, which upsets KASAN. The patch disables KASAN checks around the object dump, preventing false positives in KASAN. The patch has been reviewed and Acked-by Catalin Marinas, indicating that it has been reviewed and approved by another expert. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes two issues in the qcom/emac driver. First, it ensures that the reference taken by of_phy_find_device() during probe is dropped on probe errors and driver unbind. This prevents a reference leak. Second, it drops the of_node reference taken by of_parse_phandle() in the same path, preventing another reference leak.

The patch also includes the Fixes tag, indicating that it addresses a specific issue introduced by commit b9b17debc69d.

Overall, this patch is necessary to fix reference leaks and should be accepted in Linux -stable releases.
true || ACK

This patch adds a check to test EP_FLAG_RUNNING in the snd_complete_urb() function before running the completion logic. This check allows for early return and skipping the pending urb in case the stream was stopped. The stop logic handles the urb and sets the completion callbacks to NULL.

This change improves efficiency by saving a few CPU cycles when the stream is stopped. It ensures that the completion logic is only executed when the stream is still running, avoiding unnecessary processing.

The patch also includes proper sign-offs from the authors, indicating that they have reviewed and tested the changes.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM i.MX25 timer irq caused by the introduction of SPARSE_IRQ in the i.MX platform. The patch introduces a define for the timer irq and uses it instead of a hardcoded value. The bug was introduced in commit 8842a9e2869cae14bbb8184004a42fc3070587fb and has been broken since 3.6-rc1.

The patch has been reviewed and Acked-by Shawn Guo, who is the maintainer of the arch/arm/mach-imx/clk-imx25.c file.

Therefore, based on the information provided, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch ensures that a reference to the v4l2_device is held before using it in v4l2_device_disconnect(). This prevents the device from disappearing while it is still needed. The patch also includes a Reported-by tag and a Tested-by tag, indicating that the issue was reported and tested by Sitsofe Wheeler. Additionally, it has an Acked-by tag from Laurent Pinchart, indicating that the patch has been reviewed and approved by him.

Overall, this patch seems to address a potential issue and has received positive feedback from the community. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the openvswitch module where an error is generated when generating a mask for the IPv6 label. The patch ignores the label validation check for masks, which avoids the error. The patch has been reviewed and signed-off by multiple developers, indicating that it has been thoroughly tested and is considered safe to be included in the Linux -stable releases.
true || ACK

This patch fixes a hardware lockup issue on GEN6 GPUs due to a missing RPS (Render Power State) interrupt workaround. The patch adds the necessary GEN6 hardware workaround to prevent the lockup. It also separates the fix for routing RPS interrupts to the CPU on GEN9 GPUs into a separate patch.

The patch has been reviewed and tested, and it has a Bugzilla entry for tracking the related bug. It also includes the necessary Signed-off-by tags from the authors and reviewers.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Explanation: The patch fixes a signedness bug in the jz4740-hwmon driver. The variable "t" is changed from unsigned long to long to correctly handle the return value of wait_for_completion_interruptible_timeout(), which may be negative. The patch has been reviewed and Acked by Lars-Peter Clausen. It is also marked for stable releases. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch modifies the vfio_group_get_device_fd() function in the vfio.c file. The patch moves the fd_install() function call after the vfio_device_get() function call. This change ensures that the vfio_device reference is grabbed before exposing it via fd_install().

The patch has been Acked-by Alex Williamson and Signed-off-by Al Viro, which indicates that it has been reviewed and approved by them.

Based on the provided information, the patch appears to be a clean and necessary improvement to the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch initializes the array "rmatch" at declaration time in the function "of_get_max1586_platform_data". This ensures that the structure members of "rmatch" have sane defaults instead of having indeterminate values. By initializing the array, it improves the reliability and stability of the code.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the calculation of the image width in the v4l2-dv-timings module. The patch ensures that the image width is rounded off to the nearest multiple of 8, as required by the GTF standard. This is important because a source sending a GTF format has no means of signaling the image width, and assuming an odd image width based on the aspect ratio can result in incorrect display.

The patch adds the necessary calculation to round off the image width to the nearest multiple of 8. This is done by adding GTF_CELL_GRAN/2 to the image width and then performing a bitwise AND operation with ~(GTF_CELL_GRAN - 1). This ensures that the image width is rounded off to the nearest multiple of 8.

The patch has been reviewed and signed-off by multiple developers, including Mats Randgaard, Martin Bugge, Hans Verkuil, and Mauro Carvalho Chehab. Therefore, it can be considered a reliable and well-tested fix.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the lookup of existing match/target structures in the corresponding list by skipping the family check if NFPROTO_UNSPEC is used. This not only reduces memory consumption but also improves the time to reload the ruleset from the iptables-compat utility.

The patch introduces two helper functions, nft_match_cmp and nft_target_cmp, which compare the name, revision, and family of the match/target structures. These functions are then used in nft_match_select_ops and nft_target_select_ops to perform the comparison.

Overall, this patch improves the efficiency and performance of the netfilter module and should be accepted in Linux -stable releases.
true || ACK

This patch fixes section mismatches in the ARM mach-imx/mx31lilly code. The warnings indicate that the function lilly1131_usb_init() references variables in the wrong sections. The patch adds the __init annotation to the lilly1131_usb_init() function, which ensures that it is placed in the correct section. This resolves the section mismatch warnings.

The patch also includes the necessary Signed-off-by tags from the authors.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the KVM arm/arm64 vgic code where the offset for accessing the internal representation of the ICFGR registers is incorrect. The patch adjusts the internal array offset by one bit to fix this issue.

The patch has been reported by Haibin Wang and has been reviewed and signed-off by multiple maintainers, including Andre Przywara, Marc Zyngier, and Christoffer Dall.

The code changes in the patch appear to be correct and address the reported issue. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where deleting the command timer in xhci_mem_cleanup() can cause a soft lockup. The patch checks if the command timer is scheduled using timer_pending() before deleting it with del_timer_sync(). This ensures that the command timer is only deleted if it is actually scheduled.

The bug has been reported and the patch has been tested. It is a simple and safe fix that addresses the issue without introducing any new problems. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses an issue where iommu_add_device() is being called multiple times during the EEH hotplug event, resulting in warnings and errors. The patch removes the unnecessary call to iommu_add_device() in pnv_pci_ioda_dma_dev_setup(), which resolves the issue.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has undergone proper testing and verification. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the bpf_get_current_comm() function in the Linux kernel. The function is used to retrieve the current task's name and copy it into a buffer. However, the current implementation uses memcpy() to copy the task's name, which can result in copying junk bytes if the task's name is shorter than the buffer size.

The patch replaces the memcpy() call with strlcpy(), which guarantees that the copied string is zero-terminated. This ensures that there are no junk bytes in the output buffer, which was causing spurious hash map mismatches in the bpf code.

The patch also mentions that the bpf verifier checks that the output buffer is zero-initialized, so even for short task names, there won't be any junk bytes in the buffer.

Overall, this patch fixes a bug and improves the correctness of the bpf code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug in the block2mtd driver that causes an endless loop when the 'mtd_writev' function is called. The patch removes the assignment of 'mtd_writev' to itself in the block2mtd driver, which resolves the issue. The patch also includes the necessary Signed-off-by tags and is targeted for stable releases from version 3.3 onwards. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch modifies the Versatile irq controller drivers to return -EPERM instead of -ENOTSUPP when attempting to map reserved IRQs. This change is necessary because it is normal for a subset of the IRQ inputs to be marked as reserved on the various Versatile platforms.

By returning -EPERM, the irqdomain core will no longer report a log message for these failed map calls, as it only reports log messages for failures with error code -EPERM.

Therefore, this patch improves the behavior of the Versatile irq controller drivers and should be accepted in Linux -stable releases.
true || ACK

This patch fixes the VIDIOC_QUERYCAP warning in the saa7164 driver by correctly filling in the device_caps field instead of the capabilities field. It also removes the unnecessary filling of the version field, as the V4L2 core will handle that. The patch is signed-off by the relevant maintainers and includes the stable tag for backporting to older kernel versions.

Overall, this patch is a straightforward fix for a warning and does not introduce any new issues. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the bnx2x driver that causes incorrect configuration of VF interrupt scheme when using a high index PF. This bug results in interrupt generation stopping after a VF receives an Rx packet or sends a Tx packet on a queue other than queue[0].

The patch correctly updates the PF identifier used to configure the VF interrupt scheme, ensuring that the configuration does not overflow for PFs with a high index. The patch also includes a debug message to print the value in IGU_REG_VF_CONFIGURATION after the write.

Overall, this patch addresses a critical bug in the bnx2x driver and should be accepted in Linux -stable releases.
true || Based on the provided patch, I would recommend accepting it in Linux -stable releases (ACK). 

The patch cleans up two cases where variables were assigned values but then never used again. This improves code readability and reduces unnecessary assignments, which can potentially improve performance.

Additionally, the patch includes proper sign-offs from the authors, indicating that it has been reviewed and approved by them.

Therefore, I believe this patch should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bookkeeping issue in the hv_netvsc driver. The patch adds proper bookkeeping for the skb (socket buffer) of the batched packet, ensuring that the previous skb is properly freed. Without this fix, a panic may occur. The patch also includes a move_pkt_msd function to move the packet out of the multi send data structure and clear it. This function is used to properly handle the skb and packet when sending the packet. The patch has been reviewed and signed-off by multiple Microsoft developers.

Based on the provided information, it appears that the patch addresses a specific issue and has been reviewed and tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the 8139cp driver where the first descriptor was not being set up correctly in TSO (TCP Segmentation Offload) mode when sending a TSO frame in multiple buffers. The patch adds the missing setup for the first descriptor in TSO mode.

The patch has been reviewed and signed-off by David Woodhouse and David S. Miller, who are both reputable developers in the Linux kernel community.

The changes in the patch are straightforward and address a specific bug in the driver. There are no indications of potential regressions or negative impacts on other parts of the system.

Therefore, I recommend accepting this patch for inclusion in Linux -stable releases.
true || ACK

This patch fixes a bug in the USB gadget UVC driver where the length field in the uvc_request_data structure is incorrectly defined as an unsigned int instead of a signed __s32. This can lead to an error when setting the length to a negative value.

The patch changes the type of the length field to __s32, which correctly represents a signed value. It also updates the usage of the length field in the uvc_send_response function to use the min_t macro to ensure that the length is correctly handled as an unsigned int.

The patch has been reported by Fernandez Gonzalo and signed-off by Laurent Pinchart and Greg Kroah-Hartman. It is also marked for stable release.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes memory manipulation issues and corrects the logic for non-isoc transaction completion in Host DDMA mode. The previous patch introduced a bug that caused the dwc2_process_non_isoc_desc() function to return a failure status even if the descriptor was processed normally. This caused the loop processing the remaining descriptors to break prematurely, which is incorrect for QTDs containing more than one descriptor.

The patch modifies the logic in dwc2_process_non_isoc_desc() to correctly handle the failure status and stop processing the remaining descriptors when necessary. It also updates the debug message to remove the unnecessary status information.

Overall, this patch addresses the logical omissions and ensures the correct processing of non-isoc descriptors in Host DDMA mode. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue in the s390/kdump code where the upper halves of the first sixteen 128-bit vector registers were being copied instead of the lower halves. The patch correctly copies the lower halves of the registers.

The patch also includes a Fixes tag, indicating that it addresses a specific issue introduced in a previous commit. This ensures that the patch is targeted at fixing a known problem.

Given that the patch is fixing a bug and has been tested, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a NULL pointer dereference caused by a race condition in the probe function of the legousbtower driver. It restructures the probe function to only register the interface after successfully reading the board's firmware ID. The patch also adds error handling code to properly handle the case where registering the device fails.

The bug addressed by this patch has existed since 2003 and can potentially be used to create a local privilege escalation exploit. By remapping dev->interrupt_out_buffer in tower_write, an attacker could exploit this vulnerability to execute arbitrary code with elevated privileges. However, this would require a forged USB device and local program execution.

The patch has been tested by emulated device and has been reported and tested by James Patrick-Evans. It is also signed-off by Greg Kroah-Hartman.

Given the severity of the bug and the provided fix, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch modifies the rbd driver to use a single workqueue for all devices instead of one queue per device. This change makes sense because the workfn processes "devices" and not "requests". The patch also removes the rq_wq member from the rbd_device struct and replaces it with a new rbd_wq workqueue.

The patch also updates the rbd_request_fn function to use the new rbd_wq workqueue instead of the per-device rq_wq workqueue.

Additionally, the patch removes the allocation and destruction of the per-device rq_wq workqueue in the rbd_dev_device_setup and rbd_dev_device_release functions, respectively.

Finally, the patch adds the allocation and destruction of the new rbd_wq workqueue in the rbd_init and rbd_exit functions, respectively.

Overall, the patch simplifies the code by using a single workqueue for all devices and removes unnecessary per-device workqueues. It also ensures that the number of active work items is limited by the number of rbd devices. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch improves the detection of RAPL domains in the powercap / RAPL driver. It lowers the warning message to info level and only prints out the RAPL domains that are supported. This change makes the detection message less misleading and annoying for CPUs that do not support the complete set of RAPL domains. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the sp5100_tco watchdog driver that causes ACPI to malfunction on certain AMD platforms. The bug was introduced in commits 190aa4304de6 and cca118fa2a0a94, which enabled the driver on more devices but missed a single location in the code for checking the register offsets. This patch introduces a helper function to properly check for the new register layout and use it consistently.

The patch has been tested and confirmed to fix the issue. It also includes the necessary Fixes tag and is suitable for stable releases (Cc: stable@vger.kernel.org).

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where the driver incorrectly treats speaker-pins as jack-detectable on some HP laptops. This results in no sound from the speakers because the driver prepares the power-map update via jack unsol events which never occur. The bug was introduced in some time in 3.2 for enabling the power-mapping feature.

The patch replaces the check of the persistent power-map bits with a proper is_jack_detectable() call, which resolves the issue.

The patch has been tested and the bug has been confirmed in Bugzilla. It is also marked for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a potential race condition in the hfsplus_file_extend() and hfsplus_file_truncate() functions in the fs/hfsplus/extents.c file. The patch ensures that the alloc_blocks modification is protected by the extents_lock mutex, preventing possible allocation bitmap corruption.

The patch has been reviewed by Christoph Hellwig and has been tested by the patch author. It also includes the necessary locking and unlocking of the extents_lock mutex in the appropriate places.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a corner case in the dmaengine pxa_dma driver where the residue calculation returns the whole transfer length instead of 0. This issue occurs when the transfer is ongoing and the current transfer pointer just changed to the "finisher/linker" descriptor. The patch adds a check to ensure that the current transfer pointer is read before checking the descriptor completion, preventing incorrect residue calculation.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and approved. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch adds support for different device IDs of the Petatel NP10T modem. Currently, there are two NP10T devices with different IDs, and this patch adds these IDs to the list of supported devices. The patch also includes the necessary changes in the option_ids array to include the new device IDs.

The patch has been tested on the 3.10.1 kernel and is signed-off by the author and the stable mailing list. It is a straightforward addition that improves compatibility with the Petatel NP10T modem.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a false-positive VM_BUG_ON issue in the khugepaged code. The current implementation checks for VM_NO_THP flag to determine if the VMA is eligible for transparent huge pages (THP). However, this check is not accurate as it fails to distinguish between private /dev/zero mappings and other special mappings like /dev/hpet which do not have vm_ops and populate PTEs in mmap.

The patch replaces the VM_NO_THP check with an actual VMA check that considers both vm_ops and vm_flags. This ensures that THP is not installed where it is not expected, preventing false-positive VM_BUG_ON.

The patch has been reported by Dmitry Vyukov and has been Acked-by Vlastimil Babka and Kirill A. Shutemov. It also has the necessary Signed-off-by tags.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes the detection of BREAK on the sunsab serial console. Currently, BREAK detection is only performed when there are also serial characters received simultaneously. However, to handle all BREAKs correctly, the check for BREAK and the corresponding call to uart_handle_break() must also be done if count == 0. This patch duplicates the code fragment responsible for BREAK detection and pulls it out of the loop over the received characters.

The patch is signed-off by Christopher Alexander Tobias Schulze and David S. Miller, indicating that it has been reviewed and tested by the authors.

Based on the provided information, the patch appears to be a valid fix for the issue described. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch improves the calculation of the inode alignment mask in the xfs_set_inoalignment() function. It replaces the direct calculation of the inode cluster size with the use of the xfs_icluster_size_fsb() function, which handles the case when the block size is larger than the inode cluster size.

The patch also correctly initializes the xfs_mount->m_inoalign_mask variable to 0 when the xfs_sb->sb_inoalignmt value is 0. This ensures that the variable is correctly set for further calculations.

The patch has been reviewed and signed-off by Chandan Rajendra and Darrick J. Wong, and it is a small and straightforward change that improves the correctness of the code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an error in the gpio-callback error handling in the HID cp2112 driver. Currently, if a zero-length report is encountered, the gpio direction_input callback returns success instead of an errno. This patch corrects this behavior by returning -EIO in case of a non-negative return value.

The patch has been reviewed and tested by multiple individuals, including Johan Hovold and Benjamin Tissoires. It also includes a Fixes tag, indicating that it addresses a specific issue.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug that causes hangs in certain cases when the VM is used. The patch ensures that the VM is always flushed for every IB, which resolves the issue. The patch has been reviewed and signed-off by Jerome Glisse, Christian König, and Alex Deucher. It also includes a reference to the bug reports that it fixes.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a null pointer access issue in the brcmfmac driver. The function brcmf_msgbuf_get_pktid() may return a NULL pointer, and the patch adds a check to avoid accessing the pointer when it is NULL. This prevents a crash that occurs when the NULL pointer is accessed.

The patch has been reviewed and tested, and it has been reported to fix the issue. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a bug in the iwlwifi driver's suspend flow. Currently, when the suspend flow fails, the hardware is restarted to go back to the D0 image, but the fw_restart module parameter is not being complied with. This means that if something goes wrong when starting the D3 image, the firmware state is lost and it becomes difficult to debug the error.

The patch adds a check for the fw_restart flag before restarting the hardware. If the flag is greater than 0, indicating that the firmware restart is allowed, the hardware is restarted. This ensures that the firmware state is preserved when an error occurs during the D3 image startup.

The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and found to be effective. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a section mismatch warning in the sparc64 architecture. The warning is caused by a reference from the function `find_numa_latencies_for_group()` to the function `.init.text:find_mlgroup()`. The patch addresses this issue by marking `find_numa_latencies_for_group()` and `find_best_numa_node_for_mlgroup()` with the `__init` annotation.

The patch also provides the necessary context and justification for the changes made. It states that `find_numa_latencies_for_group()` is only called from the `numa_parse_mdesc()` function, which is marked as `__init`. Therefore, it is appropriate to mark `find_numa_latencies_for_group()` and `find_best_numa_node_for_mlgroup()` as `__init` as well.

The patch includes the necessary Signed-off-by tags and Cc entries for the relevant individuals and mailing lists.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a potential crash in the bridge code when forwarding packets. The bug is triggered when a packet is received on a NIC using skb_mark_napi_id(). The fix clears the sender_cpu field in the skb before forwarding it, which prevents the crash.

The patch has been tested and reported by Bob Liu, and it is also signed-off by Eric Dumazet and David S. Miller.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch removes the call to cpsw_ale_stop() function from the cpsw_ale_destroy() function. This change is necessary because when the cpsw module is inserted and removed, it creates a deadlock due to the delete timer. The timer is created and destroyed in cpsw_ale_start() and cpsw_ale_stop() functions, which are called from device open and close. By removing the call to cpsw_ale_stop(), the deadlock issue is resolved.

The patch also includes the necessary error handling and memory freeing code. Therefore, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch removes the unnecessary port reservation for the VMMOUSE driver in the Linux kernel. The port 0x5658 is reserved by the ACPI module during system startup, making it unavailable for other drivers to reserve. However, this port is designed to be shared among multiple VMWare services, including VMMOUSE. Therefore, VMMOUSE should not try to reserve this port on its own.

The patch removes the request_region() and release_region() calls for port 0x5658 in the vmmouse_detect() and vmmouse_init() functions. This allows other drivers to reserve the port if needed.

The patch has been reviewed and signed-off by Sinclair Yeh and Thomas Hellstrom from VMWare. It is also marked for inclusion in the stable Linux kernel releases.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a hang issue that occurs in a specific test case involving NFS v4.1. The current implementation does not properly schedule session recovery, causing the lock retry to fail. The proposed solution is to wait for session recovery to run before retrying the lock.

The patch has been reviewed and signed-off by Bryan Schumaker and Trond Myklebust, who are recognized contributors in the NFS community. Additionally, the patch is marked for stable release, indicating that it has been deemed suitable for inclusion in Linux -stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a problem where a scan request is blocked until the interface is brought down and up again after a disassociation. The patch stops the connection monitor poll during disassociation, clearing the polling flags and allowing any deferred scan to be run. This prevents the issue of being unable to connect to another access point.

The patch has been reviewed and signed-off by David Spinadel and Johannes Berg, who are both from Intel. The changes are made in the "net/mac80211/mlme.c" file.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a regression on VAIO Z with ALC889 codec, where the speaker output is silent. The problem is that the speaker pin must be connected to the first DAC (0x02) on this machine, although the codec itself advertises flexible routing with any DACs.

The patch adds a fix-up for choosing the speaker pin as the primary, ensuring that the right DAC is assigned on this device. It introduces a new fix-up function called "alc882_fixup_no_primary_hp" which sets the "no_primary_hp" flag to 1. This flag is then checked in the alc_parse_auto_config function to determine whether to use the HP pin as the primary output or not.

The patch also includes the necessary changes in the alc_fixup_tbl and alc882_fixup_models arrays to associate the fix-up function with the correct PCI device.

Based on the provided information, it seems that this patch effectively addresses the regression on VAIO Z with ALC889 codec. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a check to return -EBUSY if the system is in periodic mode and the broadcast device is hrtimer based. This is necessary because there is no proper handling for this scenario. The patch has been tested and signed-off by multiple developers, indicating that it has undergone thorough testing and review.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug introduced in commit 392b9ff, where the setting of IEEE80211_STA_CONNECTION_POLL was accidentally removed, rendering the connection polling useless. The patch correctly adds back the setting of IEEE80211_STA_CONNECTION_POLL, ensuring that the flag is properly checked. The patch has been reviewed and Acked by Stanislaw Gruszka. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue in the drm/i915/dsi driver where arbitrary data is being passed to the sideband interface. Since sequence block v2, the second byte contains flags other than just pull up/down. This patch ensures that only the first bit of the second byte is used as the action for pull up/down.

The patch has been reviewed and tested by Ville Syrjälä and has been cherry-picked from commit 4e1c63e3761b84ec7d87c75b58bbc8bcf18e98ee.

Considering the potential harm that passing arbitrary data to the sideband interface can cause, and the fact that this patch has been reviewed and tested, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a race condition in the connected_handler and teardown flow of the iser-target driver. It takes the isert_conn pointer from cm_id->qp->qp_context, ensuring that the cm_id context is always the network portal. This makes the cm_id event check more reliable.

The patch also protects the decrement of isert_conn->conn_device->active_qps within the error flow during QP creation failure and the normal teardown path in isert_connect_release().

The changes in the patch are necessary to ensure correct behavior and prevent potential NULL dereferences and race conditions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch improves the efficiency of the Linux kernel by avoiding constant wakeups caused by noisy irq lines when the irq is not needed. It only enables the hotplug irq if it is necessary, which helps to reduce unnecessary wakeups and improve performance. The patch has been tested and the bugzilla link provides additional information about the issue. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug related to EAPD GPIO control for Sigmatel codecs. The bug caused spontaneous loss of speaker outputs per HP plugging or power-saving. The patch includes spec->eapd_mask into spec->gpio_mask and spec->gpio_data bits, which resolves the issue.

The patch has been reported and tested by Eric Shattow and is suitable for stable releases. It has also been reviewed and signed-off by Takashi Iwai.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

Explanation: The patch updates the channel specification for the AD7780 driver in the staging directory of the Linux kernel. It marks the channels as unsigned instead of signed, which is more appropriate for the values reported by the AD7780. The patch also adds the IIO_CHAN_INFO_OFFSET_SHARED_BIT flag to the info_mask, indicating that the offset is shared among channels.

This patch improves the accuracy and correctness of the AD7780 driver by correctly specifying the channel as unsigned. It also ensures that the offset is properly handled for the channels. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a warning generated by gcc 7 in the p54 driver. The warning is related to the use of memset with a length equal to the number of elements without multiplication by element size. The patch corrects this by passing the correct size to memset.

The patch has been reviewed and Acked-by Christian Lamparter. It has also been signed-off by Jiri Slaby and Kalle Valo.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue in the ext4 filesystem where the arithmetics for counting used blocks can overflow on 32-bit architectures. The patch changes the type of the variable `delalloc_blocks` from `unsigned long` to `unsigned long long` to prevent overflow. Additionally, the arithmetics are modified to be more efficient and avoid the need for division.

The patch has been reviewed and signed-off by Jan Kara and Theodore Ts'o, who are reputable contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the SCTP INIT-ACK handshake reply from the IPVS machine to the client. The patch adds a missing CHECKSUM_UNNECESSARY after the checksum calculation, calculates the checksum in little-endian format, and refactors duplicate checksum code into a common function. The patch has been tested and has been signed-off by multiple developers.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a performance issue on oversubscribed systems where spinlocks become a bottleneck. The patch traps blocking WFEs and informs KVM that the vcpu is spinning, allowing other vcpus to get a scheduling boost and release the lock more quickly. The patch also improves performance when the VM is severely overcommitted.

The performance test results show a significant improvement with the patch applied, reducing the degradation from 40x to 1.5x in the 2x overcommit case. This improvement is acceptable and justifies the inclusion of the patch in Linux -stable releases.

Additionally, the patch has been reviewed and signed-off by Marc Zyngier and Christoffer Dall, indicating that it has undergone proper scrutiny.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an uninitialized variable warning in the crypto/algif_aead.c file. The variable "outlen" is now initialized to zero, ensuring that it always has a valid value. This prevents any potential issues that may arise from using an uninitialized variable.

The patch also includes a reported-by tag, indicating that the issue was identified by Stephen Rothwell, and signed-off-by tags from Stephan Mueller and Herbert Xu, indicating that they have reviewed and approved the patch.

Overall, this patch is a simple and straightforward fix that addresses a potential issue, and therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM davinci platform where a sleeping function is called from an invalid context. The patch replaces the use of clk_prepare_enable() with davinci_clk_enable() to avoid the recursive locking issue caused by the former. The patch also adds a static struct clk *usb20_clk variable and modifies the usb20_phy_clk_enable() and da8xx_register_usb20_phy_clk() functions to use this variable.

The patch has been reviewed and signed-off by multiple developers, including Alexandre Bailon and Sekhar Nori. It has also been suggested by David Lechner.

Overall, the patch addresses a bug and improves the code by replacing a potentially problematic function call. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a race condition between endpoint halt and URB cancellation in the xHCI driver. The issue was that the halted state of an endpoint could not be cleared over CLEAR_HALT from a user process because the stopped_td variable was overwritten in the handle_stopped_endpoint() function. As a result, the xhci_endpoint_reset() function would refuse the reset, and communication with the device could not run over this endpoint.

The patch addresses this issue by checking if the endpoint is halted before clearing the stopped_td and stopped_trb variables. If the endpoint is not halted, these variables are cleared.

The patch has been tested and fixes the reported bug. It does not introduce any new issues and is a straightforward fix for the race condition. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the usb_8dev driver where the urb is not properly freed on the failure path in the usb_8dev_start() function. The patch adds a call to usb_free_urb() to properly free the urb in case of failure.

The bug was found by the Linux Driver Verification project, which adds credibility to the patch.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a problem with the ethernet driver in the ARM Kirkwood platform when it is built as a module. The issue occurs when the module is loaded and the probe function accesses the hardware before the clock is restarted, causing the machine to lock. Additionally, when the clock is turned off, the interface forgets its MAC address, which is set by the boot loader.

The patch addresses this issue by preparing and enabling the clock for the interface when the machine setup file creates a platform device for the interface. This ensures that the clock is not turned off. However, if the setup file only instantiates one platform device, the clock for the other device will still be disabled, potentially saving some power.

The patch has been tested and reviewed by multiple contributors, including Simon Baatz and Andrew Lunn. It also includes the necessary changes to the `kirkwood_ge00_init` and `kirkwood_ge01_init` functions to claim and enable the clocks for the respective interfaces.

Based on this analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where audit rules disappear when an inode they watch is evicted from the cache. The bug was introduced by the commit "fsnotify: allow marks to not pin inodes in core" which didn't take into account that audit_tree adds watches with a zero mask.

The patch adds a mask to the audit_chunk structure, which should fix the issue. The patch also includes the necessary Fixes tag and is signed-off by the relevant developers.

Given the nature of the bug and the simplicity of the fix, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak in the populate_msi_sysfs() function in the drivers/pci/msi.c file. The patch correctly frees the allocated memory using kfree() before returning from the function. The issue was found by Coverity and the fix has been tested and signed-off by the relevant maintainers. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the r8169 driver for Realtek network cards. The bug causes corrupted IP fragments when using a large MTU size. The patch adds the necessary locking mechanism to ensure that the ConfigX registers are only written while the Config9346 lock is held.

The patch has been reported by Nick Bowler and signed-off by Francois Romieu, David S. Miller, and Hayes Wang. The changes in the patch are also correct and do not introduce any new issues.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the data sign for pressure and temperature data in the iio: st_pressure driver. The datasheet of each device (lps331ap, lps25h, lps001wp, lps22hb) states that the data is in 2's complement format. However, the current implementation uses 'u' (unsigned) sign for the scan_type, which is incorrect.

The patch changes the sign to 's' (signed) for all the relevant scan_types, ensuring that the data is interpreted correctly as 2's complement.

The patch also includes the necessary Fixes tags, indicating that it addresses specific commits that introduced the issue.

The patch has been reviewed by Linus Walleij and signed-off by Marcin Niestroj and Jonathan Cameron.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch ensures that the function kernel_init_freeable() is not inlined into non __init code. The reason for this is that the previous commit reshuffled the kernel_init() function and introduced a new routine kernel_init_freeable(). However, the latter was being inlined by the compiler, causing code bloat.

By forcing kernel_init_freeable() to be noinline, the patch reduces the .text bloat in the vmlinux file. The code changes are minimal and do not affect the functionality of the kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the cec_config_thread_func() function in the cec-adap.c file of the media subsystem. The bug is related to the determination of the last logical address (last_la) used for the initial attempt at claiming a logical address. The patch corrects the condition that checks if the last_la is valid for the given type by converting last_la to a mask before ANDing it with type2mask[type].

The patch has been reviewed and signed-off by Hans Verkuil and Mauro Carvalho Chehab, who are recognized contributors to the Linux kernel.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

The patch removes a redundant error check on the return code of copy_to_user function. The check is already made a few lines earlier, so removing it does not affect the logic of the code. The patch also includes a fix reference and has been reviewed and signed-off by the relevant maintainers. Therefore, it is safe to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a possible information leak by switching to the new credentials before mapping the new executable state. It also cleans up the code by removing the delay in switching credentials. The patch has been tested and acknowledged by multiple developers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an unchecked dereference of the 'arch_pwrdm' pointer in the _pwrdm_register() function in powerdomain.c. The patch adds a null check before calling the 'pwrdm_wait_transition' function on 'arch_pwrdm'. This fix addresses the Smatch complaint reported by Dan Carpenter.

The patch has also been Acked-by Nishanth Menon and Signed-off-by Rajendra Nayak and Tony Lindgren.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds support for the new revision of Apple's wired aluminum keyboard (MB110LL/B) to the HID driver. It includes the necessary USB device IDs for the ANSI, ISO, and JIS versions of the keyboard.

The patch also updates the hid-core.c file to include the new device IDs in the hid_have_special_driver array.

Overall, this patch is necessary to ensure proper support for the new revision of the Apple aluminum keyboard, so it should be accepted in Linux -stable releases.
true || ACK

This patch updates the proc_ns_follow_link function in the fs/proc/namespaces.c file to use nd_jump_link instead of manually updating nd.path.dentry. This change fixes the reported BUG_ON(nd->inode != parent->d_inode) issue and has been tested to reproduce the problem with mkdir /proc/self/ns/uts/a.

The change is necessary because the VFS change to require the use of nd_jump_link happened while proc_ns_follow_link was being developed, and the need for this change was overlooked since the common case of proc_ns_follow_link continued to work without problems.

The patch has been reviewed and signed-off by Eric W. Biederman and is suitable for inclusion in the Linux -stable releases. It also includes the stable@vger.kernel.org mailing list in the Cc field, indicating that it should be considered for backporting to stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds a mutex lock to protect the ftrace_trace_arrays list in trace_events.c. The ftrace_trace_arrays list is accessed in multiple places without holding the trace_types_lock, which can lead to race conditions and potential data corruption.

By adding the mutex lock, the patch ensures that the ftrace_trace_arrays list is accessed safely and avoids any potential race conditions.

The patch also adds the trace_types_lock declaration in trace.h and updates the necessary functions to acquire and release the lock when accessing the ftrace_trace_arrays list.

Overall, this patch improves the stability and reliability of the tracing subsystem in the Linux kernel. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an error that occurs on G5 iMac when trying to create a kernel channel. The error is caused by the inability to map the AGP aperture. The patch checks if the AGP aperture can be mapped and sets the "is_iomem" flag accordingly. This change is similar to a previous change made for Radeon.

The patch has been reviewed and signed-off by Aaro Koskinen and Dave Airlie. It also has a Bugzilla reference and is marked for stable release.

Based on this information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds an error indication to the pci_frontend_enable_msix() function in the xen-pcifront driver. The patch sets the 'err' variable to the value of 'op.value' when the 'op.cmd' is not equal to 'XEN_PCI_OP_ENABLE_MSIX'. This ensures that the correct error indication is returned when enabling MSI-X interrupts.

The patch also includes a debug print statement to log the value of 'op.value' when 'op.cmd' is not equal to 'XEN_PCI_OP_ENABLE_MSIX'. This can be helpful for debugging purposes.

Overall, this patch improves the error handling in the pci_frontend_enable_msix() function and ensures compatibility with the original XenoLinux code. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch replaces the usage of strncpy with strscpy in the orangefs_inode_getattr function in the orangefs-utils.c file. The reason for this change is to prevent a potential security vulnerability where a rogue client-core could send a symlink target that is not null-terminated, leading to corrupt data.

The patch also includes a check for the return value of strscpy. If the return value is -E2BIG, indicating that the target string is too long to fit in the destination buffer, the patch returns -EIO to indicate a failure.

Based on the provided information, it seems that this patch addresses a potential security issue and provides a more robust implementation. Therefore, I would recommend accepting this patch in Linux -stable releases.
true || ACK

This patch enables journal checksum when the metadata checksum feature is enabled for the ext4 file system. It ensures that if metadata checksumming is turned on, the journal also uses checksumming. This is important for data integrity and consistency.

The patch adds a check to enable journal checksum if metadata checksum is enabled using the ext4_has_metadata_csum() function. This ensures that the journal checksum is only enabled when necessary.

Overall, this patch improves the reliability and integrity of the ext4 file system when metadata checksumming is enabled. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the qlcnic driver where it was freeing a Tx frag that was never mapped before. This was causing a panic in the kernel when it tried to handle a paging request. The patch modifies the loop in the qlcnic_release_tx_buffers function to start from index 1 instead of 0, ensuring that the first Tx frag is not freed.

The bug is fixed by iterating over the Tx frags starting from index 1 and freeing only those that have been mapped. This prevents the kernel from encountering a paging request for an unmapped frag and avoids the panic.

The patch has been reviewed and signed-off by the relevant developers, including the driver maintainer. It is a simple and straightforward fix that addresses a specific bug without introducing any new functionality or regressions.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the ARM i.MX platform code where the ksz9021rn_phy_fixup function is not declared when phylib is built as a module. The patch changes the check from IS_ENABLED to IS_BUILTIN to ensure that the function is only called when phylib is built-in.

The bug was originally reported by Artem Bityutskiy and partially fixed in a previous patch. This patch completes the fix and resolves the compilation error.

The patch has been reviewed and Acked-by Shawn Guo. It also includes the necessary Cc's to relevant individuals.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced by a previous commit that changed the behavior of negative timeouts in the i915 driver. The previous behavior was to wait indefinitely, but the regression caused negative timeouts to return immediately. The patch restores the previous behavior by checking for a timeout value of 0 instead of <=0.

The patch has been reviewed and tested with the igt/gem_wait testcase. It also includes a Bugzilla reference and has been signed-off by multiple developers.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adds support for I2C bus drivers that do not allow zero-length data transfers, which is required to start a measurement with the HIH6130/1 sensor. The patch overcomes this limitation by writing a zero dummy byte, which is ignored by the sensor. The patch has been tested and verified to be working with the OMAP I2C bus driver on a BeagleBone board.

The patch also simplifies the complexity of write_length initialization and checks if the I2C bus driver supports I2C_FUNC_SMBUS_QUICK. If the functionality is not supported, the write_length is set to 1.

Overall, this patch improves compatibility and functionality for I2C bus drivers without I2C_FUNC_SMBUS_QUICK and has been tested and verified. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch fixes a bug in the Bluetooth driver where the probe function returns the hci index instead of 0 on success. This can cause issues on systems with multiple hci devices. The patch changes the return value of the probe function to 0, which is the expected behavior. This fix is necessary to ensure proper functioning of the Bluetooth driver on systems with multiple hci devices. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

This patch adds support for the emac controller on the dm816x platform. It includes the necessary changes to the davinci_emac driver to support the dm816x emac controller. The patch also adds the compatible string "ti,dm816-emac" to the list of supported devices in the davinci_emac_of_match table.

The patch has been reviewed and signed-off by Tony Lindgren and David S. Miller, who are both recognized contributors to the Linux kernel.

Based on the provided information, the patch appears to be well-tested and necessary for proper functioning of the emac controller on the dm816x platform. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch reverts a previous commit that cleared the subchannel ID and number in the s390 kernel during kexec and kdump. The reason for reverting this change is that there are use cases where an intermediate boot kernel uses kexec to boot the final production kernel, and in these cases, the original boot information should be provided to the production kernel.

The patch has been reviewed and tested by multiple individuals, including Heiko Carstens and Steffen Maier, and has been reported to be working correctly.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch enables a workaround for the P2020/P2010 erratum eTSEC 20, which causes excess delays when transmitting large frames with TOE (TCP/IP hardware accelerations) enabled. The patch checks the SVR_SOC_VER and SVR_REV values to determine if the workaround should be enabled. If the SVR_SOC_VER is SVR_P2020 or SVR_P2010 and the SVR_REV is less than 0x20, the workaround is enabled by setting the GFAR_ERRATA_76 flag in the priv->errata variable.

This patch is necessary to fix the erratum and improve the transmission performance for large frames with TOE enabled on P2020/P2010 platforms. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch addresses a race condition in the xHCI driver where TDs (Transfer Descriptors) are not properly removed from the TD lists and cancelled TD lists when a URB (USB Request Block) is cancelled. This can lead to an oops in certain scenarios.

The patch modifies the xhci_urb_dequeue() function to remove TDs from the TD lists and cancelled TD lists before giving back the URB. It also updates other functions that handle stopped endpoints and the stop endpoint command watchdog timer to remove TDs from the lists.

The patch has been signed-off by the author and is recommended to be backported to kernels as old as 2.6.36.

Based on the provided information, it appears that the patch addresses a bug and improves the stability and reliability of the xHCI driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a potential issue in the KVM MIPS code related to MMIO load completion. The patch precalculates the resume PC while still in the right context and saves it in the vcpu->arch.io_pc field. This ensures that the resume PC is correctly restored on MMIO completion.

The patch also removes the no longer needed vcpu->arch.pending_load_cause field and updates the code accordingly.

The patch has been reviewed and tested by the relevant maintainers and contributors. It has also been marked for inclusion in the stable Linux kernel releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an issue with the net/mvmdio driver where the wait_event_timeout function does not guarantee a delay of at least one whole jiffie, causing premature timeouts. The patch ensures a minimum timeout of 2 jiffies, ensuring that wait_event_timeout will always wait at least 1 jiffie.

The issue was reported by Nicolas Schichan and has been tested by him as well. The patch has been signed-off by Leigh Brown and David S. Miller.

Based on the provided information, the patch appears to be a valid fix for the reported issue and has been tested. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch should be accepted in Linux -stable releases. It adds a check to ensure that the vce block is not started or stopped if power gating (pg) is disabled. This is important to prevent any issues that may arise when attempting to start or stop the vce block without proper power gating support. The patch has been reviewed and signed-off by relevant developers, indicating that it has undergone proper testing and review.
true || ACK

This patch initializes the network_header and transport_header fields in the skb structure created in vnet_rx_one() function. These fields are required for computing the checksum for IPv4 packets in the vnet_fullcsum() function.

The patch correctly resets the network_header and transport_header fields using skb_reset_network_header() and skb_reset_transport_header() functions respectively. It then sets the transport_header field to the correct offset using skb_set_transport_header() function.

The patch also checks if the skb protocol is ETH_P_IP before performing the checksum computation. This ensures that the patch only affects IPv4 packets.

Overall, the patch correctly initializes the necessary fields and performs the checksum computation for IPv4 packets. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a data corruption issue on the 5725 family of devices (asic rev 5762) when using TSO (TCP Segmentation Offload). The issue occurs when the buffer is within MSS (Maximum Segment Size) bytes of a 4G boundary (4G, 8G, etc.). The patch adds a new function `tg3_4g_tso_overflow_test` to detect this condition and trigger the workaround path.

The patch has been reviewed and signed-off by multiple developers from Broadcom, indicating that it has been tested and verified by the original authors. The patch is also marked for stable release, suggesting that it is suitable for inclusion in Linux -stable releases.

Therefore, based on the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch adds a call to the `omap_hsmmc_context_save()` function after enabling runtime PM in the `omap_hsmmc_probe()` function. This ensures that register access in the context save API happens with the clock enabled.

The patch also includes the necessary `Signed-off-by` tags and is marked for stable release.

Based on the provided information, it appears that this patch is a valid fix and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a double fetch bug in the ioctl function of the cros_ec_dev driver. The patch verifies that the "u_cmd.outsize" and "u_cmd.insize" values have not changed between the two copy_from_user() calls, preventing a potential buffer overflow. Additionally, the patch ensures that the smaller value of "s_cmd->insize" is used to avoid copying too much data to the user.

The patch has been reported by Pengfei Wang and reviewed by Kees Cook. It has also been tested by Gwendal Grignou. The patch includes a Fixes tag, indicating that it addresses a specific issue introduced by commit a841178445bb.

Based on the provided information, the patch appears to be a valid fix for a potential security vulnerability and has undergone proper review and testing. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the driver was printing an annoying message about not being able to assign VMDq due to a lack of MSI-X vectors. The issue was caused by a missing line that initializes a variable, which was a merge error.

The patch adds the missing line to initialize the "pf->num_vmdq_qps" variable, which resolves the issue.

The patch has been tested by Andrew Bowers and signed-off by Jesse Brandeburg and Jeff Kirsher, who are both from Intel, the original author of the driver.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes an information leak in the AUDIT_GET request in the audit subsystem. The patch initializes the mask member of the status_set structure to 0, preventing the leakage of 4 bytes of kernel stack. The patch also includes proper attribution and is signed-off by the relevant developers.

Given that this patch addresses a security vulnerability and has been reviewed by the appropriate individuals, it should be accepted in Linux -stable releases.
true || ACK

This patch simplifies the ioc_release_fn() function in the block/blk-ioc.c file. It replaces the double lock dancing with a trylock on the queue_lock and backs out from the ioc lock on trylock failure. This simplification improves the code readability and reduces the complexity of the function.

The patch has been signed-off by Tejun Heo and tested by Shaohua Li. It does not introduce any new functionality or change the behavior of the code, but only simplifies the existing code.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses an issue where event processing for the AP interface gets delayed or not processed after a scan is completed. Currently, the work items are requeued only for STA, ADHOC, and MESH iftypes, but not for the AP iftype. This can result in data halt and eventual disconnection on the AP interface.

The patch modifies the code to requeue the work items for all VIF types after the scan is completed. It adds a loop to iterate over all the interfaces and requeue the work items for running interfaces.

The patch has been reviewed and signed-off by Sachin Kulkarni and Johannes Berg. It also includes the Cc to the stable@vger.kernel.org mailing list, indicating that it is suitable for inclusion in stable releases.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the btrfs_page_exists_in_range function where the start_idx and end_idx variables were declared as int types instead of unsigned long types. This caused the high bits of offsets larger than 1 << 44 to be silently trimmed off, resulting in incorrect page index values.

The bug can lead to unexpected failures in the final check "if (page->index <= end_idx)" and the function will return false even if there is at least one page in the range. This can cause issues in scenarios such as hole punching and lock_extent_direct, where it is important to ensure that there are no pages in the specified range.

Although the bug has some constraints for practical occurrence, such as large file size and crossing the 16TiB boundary, it is still important to fix it to prevent potential issues and ensure correct behavior.

The patch has been reviewed and tested, and it fixes the bug by changing the types of start_idx and end_idx to unsigned long.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the kvm_vgic_map_is_active function in the KVM arm/arm64 vgic code. The function is responsible for checking if a specific virtual interrupt is active on a VCPU. Currently, the function incorrectly checks if *any* IRQ is active on the VCPU instead of checking if the specific IRQ in question is active on the distributor.

The patch corrects this behavior by calling the vgic_irq_is_active function with the VCPU and the virtual IRQ as arguments. This ensures that the function correctly checks if the specific IRQ is active on the distributor.

The patch has been reported by Eric Auger and has been Acked by Marc Zyngier. It has also been signed-off by Christoffer Dall and Marc Zyngier.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a memory leak issue in the HID multitouch driver. The function mt_free_input_name() was not being called during the .remove() operation, which resulted in a memory leak. The patch restores the original name before freeing it to avoid accessing an already freed pointer.

The patch has been reviewed and signed-off by Benjamin Tissoires and Jiri Kosina, who are recognized contributors to the Linux kernel.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a problem in the Btrfs file system where new chunks were not being allocated correctly when there were missing devices. The original code considered the number of missing devices when allocating new chunks, but this caused issues when trying to allocate new chunks with a higher RAID level because there were not enough writable devices. 

The patch addresses this issue by ignoring the number of missing devices when allocating new chunks. It modifies the code in two functions, `btrfs_reduce_alloc_profile` and `update_block_group_flags`, to only consider the number of writable devices when calculating the number of devices for allocation.

This patch is a straightforward fix that resolves a specific issue in the Btrfs file system. It does not introduce any new functionality or potential regressions. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch allows the media manager to be initialized without a storage backend, which is necessary for device drivers like null_blk that do not have any backend storage. It also fixes an incorrect configuration of capabilities in null_blk, as it does not support the get/set bad block interface.

The changes in the patch ensure that the media manager is only initialized if the device has the NVM_ID_DCAP_BBLKMGMT capability. This ensures that the initialization is only performed when it is supported by the device.

Overall, this patch improves the functionality and compatibility of the lightnvm subsystem and should be accepted in Linux -stable releases.
true || ACK

This patch fixes a missing iounmap in the probe error path of the rtc-at91rm9200 driver. The missing iounmap is added and the code is refactored to handle the error path correctly.

The patch has been reviewed and Acked-by Nicolas Ferre and has also been Cc'd to the stable@vger.kernel.org mailing list, indicating that it is suitable for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a use-after-free bug in the __put_anon_vma function in the mm/rmap.c file. The bug occurs when the last anon_vma is freed before its child anon_vma, causing a reference to the already freed anon_vma->root in the anon_vma_free function.

The patch resolves this issue by freeing the child anon_vma before freeing anon_vma->root, ensuring that the reference to anon_vma->root is valid.

The patch has been reviewed and Acked-by Peter Zijlstra, indicating that it has been reviewed and approved by a trusted developer.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes the issue of non-existing virtual devices (VD) being exposed to the host. The problem occurs when the OS sends commands beyond the valid range of the ldTgtIdtoLd[] array, resulting in a valid logical drive (LD) value being returned and a SCSI device being created for a non-existing target.

The patch addresses this issue by invalidating LD values beyond the valid range of the array. For legacy firmware (64 VD firmware), LD values are set to 0xff for device indices beyond 127. For extended VD firmware, LD values are set to 0xff for device indices beyond 255.

The patch also includes changes in the megasas_build_dcdb_fusion() function to handle the LD values correctly. If the firmware is older or the device ID is beyond the supported VD count, the function will not access the ldTgtIdtoLd[] array and will skip to the non-fast path.

Based on the provided information, this patch appears to be a valid fix for the issue and should be accepted in Linux -stable releases.
true || ACK

This patch removes a debug message from the critical section of the code that is executed during vblank evasion. The debug message is causing a delay and potentially causing the system to exceed the 100 usec deadline. The problem has been present since commit c331879ce8ea and has become more noticeable since commit e1edbd44e23b. The patch has been reviewed and tested by the relevant parties and has been cherry-picked from commit d38146b9ee16264ff9a88bf3391ab9f2f5af3646. It also includes the necessary tags and references to the offending commit. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch addresses a race condition during inode initialization in the Btrfs file system. Currently, the BTRFS_I(inode)->location field is set after the inode hash table lock is dropped, which can lead to a race with the inode initialization code. This patch modifies the code to set the location field earlier and changes the find actor function to use only the location objectid to match inodes.

The changes in this patch ensure that the location field is set before the inode hash table lock is dropped, eliminating the race condition. Additionally, the modification to the find actor function ensures that the correct inode is found in the hash table.

The patch has been reviewed and signed-off by Chris Mason, the original author of the Btrfs file system. It also includes the stable@vger.kernel.org and fs/btrfs/inode.c mailing lists in the CC field, indicating that it is suitable for inclusion in stable releases.

Therefore, based on the analysis of the patch and the provided information, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug in the mtk_tx_map() function in the mediatek Ethernet driver. The bug is caused by using the wrong descriptor pointer when looking up the tx_buffer in the error path. The patch corrects this by changing the code to use the correct pointer.

The patch has been reviewed and signed-off by John Crispin and David S. Miller, indicating that it has been tested and approved by the relevant developers.

Based on this analysis, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch optimizes the irq restore function in the s390 architecture by using the faster stosm instruction instead of the ssm instruction. The patch also adds a new macro ARCH_IRQ_ENABLED to represent the enabled state of interrupts.

The patch modifies the arch_local_irq_restore function to only enable interrupts if the flags indicate a transition from disabled to enabled. This optimization is possible because irqsave/irqrestore only deals with external and I/O interrupts, and the function can only transition from disabled->disabled or disabled->enabled.

The patch also modifies the paging_init function to use the __arch_local_irq_stosm function instead of the arch_local_irq_restore function, further optimizing the code.

Overall, this patch improves the performance of irq restore in the s390 architecture without affecting the functionality. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a problem where the interrupt flags are not correctly restored at the end of the processing of packets in the LL2 Rx ring. The patch modifies the qed_ll2_rxq_completion_reg() function to pass the pointer to the lock flags as an argument, allowing the correct flags to be used when unlocking and re-locking the spinlock.

The patch also includes a Fixes tag, indicating that it addresses a specific issue introduced by a previous commit.

Based on the provided information, the patch appears to be a valid fix for the issue described. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a locking regression in the ipx_sendmsg and ipx_recvmsg functions. The regression was introduced by commit b0d0d915, which removed the BKL (Big Kernel Lock) and replaced it with lock_sock/release_sock. However, this change caused a blocking recvmsg syscall to block a concurrent sendmsg syscall on the same socket.

The patch addresses this issue by only keeping the socket locked while actually working with the socket data and releasing it prior to calling skb_recv_datagram(). This ensures that a blocking recvmsg syscall does not block a concurrent sendmsg syscall.

The patch has been reviewed and signed-off by Jiri Bohac and Arnd Bergmann. It has also been signed-off by David S. Miller, the maintainer of the net/ipx/af_ipx.c file.

Based on the analysis, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch fixes a bug where a task can select itself as a swap target, which can lead to issues when trying to acquire the same lock twice for the swap migrate. The patch adds a check to avoid selecting oneself as a swap candidate. The patch has been reported and tested by Sasha Levin and signed-off by Peter Zijlstra and Ingo Molnar. It also has the approval of Linus Torvalds. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the percpu-ref code where the DEAD flag can contaminate the percpu pointer. The patch updates the __ref_is_percpu() function to test both the ATOMIC and DEAD flags before returning the percpu pointer. This ensures that the pointer is not contaminated with the DEAD flag.

The patch has been reviewed and reported by Shaohua Li and has been signed-off by Tejun Heo. It also includes a link to the original discussion on the Linux kernel mailing list.

Based on the analysis, the patch appears to be a valid fix for the bug and should be accepted in Linux -stable releases.
true || ACK

The patch removes a restriction that imposes a minimum length on GETLAYOUT requests in the nfsd/blocklayout module. This restriction is not allowed according to RFC 5661 section 18.43.3. Additionally, it has been observed that this restriction can cause indefinite hangs on fsx runs on some clients.

By removing this restriction, the patch ensures that servers comply with the RFC and prevents potential hangs on clients. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

This patch addresses a bug where partitions added by user space to the loop device were not being cleaned up after detaching the loop device. The patch replaces the use of BLKRRPART with code that unconditionally cleans up partitions on detach.

The patch also exports the delete_partition() function, which was modified by Jens Axboe to be used in other parts of the kernel.

Overall, this patch fixes a bug and improves the cleanup process for loop devices. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the XFS file system where reading a maximally sized remote attribute fails when CRCs are enabled. The patch addresses two issues: 

1. The length of the buffer being read is determined from args->rmtblkcnt, which doesn't take into account CRC headers. This results in the mapped length being too short. The patch calculates the length directly from the value length to fix this issue.

2. The byte count of valid data within a buffer is capped by the length of the data and doesn't take into account headers. The patch calculates the data space in the buffer first before calculating the actual byte count of data to address this issue.

The patch has been reviewed and signed-off by Dave Chinner and Ben Myers. It has also been cherry-picked from commit 913e96bc292e1bb248854686c79d6545ef3ee720.

Based on the provided information, the patch appears to be a valid fix for the mentioned bug. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch adjusts the thermal protection requirements for certain AMD Radeon GPUs. It removes the requirement for clock gating for thermal protection and instead only requires the utilization of a thermal sensor. This change is applicable to rv770 and newer GPUs.

The patch modifies the initialization code for several GPU models (btc_dpm.c, cypress_dpm.c, ni_dpm.c, rv770_dpm.c, si_dpm.c) to set the thermal_protection flag based on the presence of a thermal sensor, rather than the combination of gfx_clock_gating and int_thermal_type.

The change is reasonable and aligns with the updated understanding of thermal protection requirements for these GPUs. Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes an error in the x509_cert_parse() function where the error code was not being set correctly. This could result in a NULL pointer being returned, leading to a NULL dereference.

The patch correctly sets the error code to -ENOMEM in the case where kmemdup() fails to allocate memory for the key. This ensures that the error is properly handled and the function returns an appropriate error code.

The patch also includes the necessary Fixes and Signed-off-by tags, indicating that it addresses a specific issue and has been reviewed by the relevant developers.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a compilation warning in the mlx4 driver. The warning is caused by a missing pair of braces in the if statement. The patch adds the missing braces, ensuring that the code is correctly indented and guarded by the if clause. The patch also includes the necessary Signed-off-by tags and a Fixes tag, indicating that it addresses a specific issue.

Based on the provided information, the patch appears to be a straightforward fix for a compilation warning and does not introduce any new functionality or regressions. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Explanation: The patch removes the IRQF_EARLY_RESUME flag from the palmas_usb_probe function in the extcon-palmas.c file. This flag is no longer required for nested IRQs since commit 3c646f2c6aa9 was merged. The patch fixes a crash on resume on the BeagleBoard-X15 platform caused by the stray flag. The patch has been reviewed and tested by Grygorii Strashko and has been signed-off by Nishanth Menon. Additionally, it has been Acked-by Roger Quadros. Therefore, the patch should be accepted in Linux -stable releases.
true || ACK

The patch fixes a bug introduced in commit 4e752f0ab0e8, where an extra put on snapc is performed after a successful rbd_img_request_create(). This extra put is unnecessary and can lead to incorrect reference counting. The patch correctly sets snapc to NULL after img_request consumes a reference, preventing the extra put. The patch has been reviewed and is suitable for inclusion in stable releases.
true || ACK

This patch fixes a bug in the ehci-hcd driver related to isochronous data handling. The bug can cause memory leaks and failures to complete isochronous URBs. The patch correctly adjusts the scanning of the periodic schedule to start with the frame preceding the one where the previous scan ended. This ensures that siTD entries in the periodic schedule are properly completed.

The patch has been signed-off by the original author and reported by another user. It has also been CC'd to the stable mailing list, indicating that it is suitable for inclusion in stable releases.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch improves the output resolution of the fam15h_power driver in high CPU load situations. It keeps all the bits in the running_avg_capture register, resulting in better output resolution. The patch also adjusts the calculation of curr_pwr_watts to take into account the running_avg_range. Overall, this patch improves the accuracy of power measurement in the fam15h_power driver.
true || ACK

This patch fixes an issue where the mlx5 and ipath drivers are unable to send correct P_Key values in GMP headers. The patch changes the rdma_cm code to look at the P_Key value that is part of the packet payload as a workaround. Once the drivers are fixed, this patch can be reverted.

The patch is fixing a specific issue and does not introduce any new problems. It is a targeted fix that improves the functionality of the affected drivers. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the rapidio driver where an error pointer is dereferenced if riocm_ch_alloc() fails. The patch changes the code to set "ch" to NULL after calling riocm_put_channel(), so that we can check if it's NULL and avoid calling riocm_put_channel() on it twice. The patch also renames err_nodev to err_put_new_ch for better clarity.

The patch has been reviewed and signed-off by multiple developers, including the maintainers of the rapidio driver. It also includes a link to the original patch and has been tested.

Therefore, I recommend accepting this patch in Linux -stable releases.
true || ACK

This patch fixes a regression introduced in commit 6df5a128f0fd, which caused a possible send queue overflow in the IB/iser driver. The regression was caused by the sig_count variable being wrongly set as a static variable, which could lead to races and the send queue being overflowed.

The patch fixes this issue by keeping sig_count per connection instead of as a static variable. Since the iscsi session frwd_lock is taken by libiscsi on the queuecommand path, we don't need sig_count to be atomic.

The patch also updates the iser_signal_comp function to take a u8 sig_count parameter instead of an int sig_count parameter.

Overall, this patch addresses the regression and ensures that the send queue won't be overflowed. Therefore, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes an issue where the kernel oops when loading the nouveau module with a GTX 780 Ti video adapter. The bug report provides additional information about the issue. The patch itself is a simple fix that checks if fbcon->helper.fbdev is not NULL before setting the pixmap.buf_align value. This ensures that the patch only applies when fbdev emulation is enabled.

Given that the patch fixes a specific issue and has been tested, it should be accepted in Linux -stable releases.
true || ACK

This patch fixes a bug in the tda10071 driver in the Linux kernel. The patch correctly calculates the symbol rate value by multiplying it by 1000. This ensures that the symbol rate value is returned correctly. The patch has been reviewed and signed-off by the relevant developers, indicating that it has been tested and verified. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK

Based on the patch description and code changes, it appears that this patch is disabling a workaround for early controllers that incorrectly reported zero ports in the PORTS_IMPL register. The ahci driver was fabricating PORTS_IMPL based on the number of ports in those cases. However, with the new nvme controllers, there are cases where zero PORTS_IMPL is valid and should be honored.

The patch modifies the code to disable the workaround for AHCI versions greater than or equal to 1.3. This means that for AHCI versions 1.3 and above, the fabricating of port_map from cap.nr_ports will not be done if port_map is already zero.

The patch has been signed-off by Tejun Heo and reported-by Andy Lutomirski. It also includes the necessary Cc's and a link to the original discussion.

Based on the information provided, it seems reasonable to accept this patch in Linux -stable releases. It addresses a specific issue with early controllers and ensures that the behavior is correct for newer nvme controllers.
true || ACK

This patch adds support for handling non-VGA class PCI devices with ATRM in the radeon driver. It addresses a bug reported in the kernel bugzilla and has been signed-off by the relevant developers. The patch modifies the radeon_atrm_get_bios() function to check for non-VGA class devices and handle them accordingly.

The patch also includes a link to the bug report for reference.

Based on the information provided, it appears that the patch is necessary to fix a bug and improve the functionality of the radeon driver. Therefore, it should be accepted in Linux -stable releases.
true || ACK

Based on the information provided in the patch, it is recommended to accept this patch in Linux -stable releases. The patch disables semaphores by default on SNB (Sandy Bridge) machines due to reported GPU hangs when large amounts of text scroll in an xterm. The patch has been tested and reported by Udo Steinberg, and it has been signed-off by Keith Packard and Linus Torvalds. Disabling semaphores on SNB machines will help prevent GPU hangs and improve stability.
true || ACK

This patch fixes a double-free bug in the ath9k driver's beacon generation code. The bug occurs when a new beacon cannot be obtained from mac80211, but the ath_buf structure is not properly reset. This leads to a double-free on the next beacon transmission attempt, which can result in a system crash.

The patch correctly sets bf->bf_mpdu to NULL after freeing the skb, preventing the double-free issue.

Since this bug can cause a system crash, it is important to include this patch in Linux -stable releases. Therefore, I recommend accepting this patch (ACK).
true || ACK

This patch fixes a data corruption issue in the spi-ti-qspi driver. The issue occurs when writing an invalid command to the QSPI_SPI_CMD_REG register before calling spi_finalize_current_message(). This causes the chip select to be de-asserted after the next transfer is scheduled, leading to data corruption.

The patch moves the writing of the invalid command to QSPI_SPI_CMD_REG before calling spi_finalize_current_message(), ensuring that the chip select is de-asserted before the next transfer is scheduled. This prevents the overlap of successive transactions and resolves the data corruption issue.

The patch has been reviewed and tested, and it includes the necessary Signed-off-by tags. It also includes a stable tag indicating that it should be applied to Linux -stable releases starting from v3.12.

Therefore, I recommend accepting this patch in Linux -stable releases.
