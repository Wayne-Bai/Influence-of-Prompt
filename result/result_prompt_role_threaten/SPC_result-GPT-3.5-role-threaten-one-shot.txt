false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK

Explanation: The patch adds a check to reject version and minorversion changes on remount attempts in the NFS code. This is a valid fix to prevent potential issues with remounting NFS filesystems. The patch has been reviewed and signed-off by the relevant maintainers. Therefore, it should be accepted in Linux -stable releases.
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || NAK
false || NAK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK

Reasoning:
This patch is a cleanup patch for the staging/comedi/ni_stc.h header file and the drivers/staging/comedi/drivers/ni_mio_common.c file. It renames some enums and converts them into defines, and also uses the BIT() macro to define the bits.

While this patch may improve the code readability and maintainability, it does not fix any bugs or address any specific issues. Therefore, it does not meet the criteria for acceptance in -stable releases, which are typically reserved for bug fixes and security patches.

Additionally, the patch does not have any Acked-by or Reviewed-by tags from relevant maintainers or reviewers, which further suggests that it may not be suitable for inclusion in -stable releases.

Hence, the patch should not be accepted in Linux -stable releases.
false || ACK
false || ACK
false || NAK
false || NAK

Explanation: The patch seems to fix a behavior where csma settings are overwritten when setting the channel. However, the comment in the code suggests that the CCA mode should be configurable, indicating that the current behavior may be intentional. Without further information, it is difficult to determine whether this patch is necessary or if it may introduce unintended side effects. Therefore, it is best to not accept this patch in Linux -stable releases.
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK

Reasoning:
The patch is removing the call to `ceph_osdc_build_request` in multiple places and then adding it back in the same places. This seems unnecessary and potentially introduces bugs. It would be better to keep the original code as it is.
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || NAK

Explanation: The patch removes the setting of the fence number in DPFC_CTL on SNB. However, the documentation explicitly states that the fence number in DPFC_CTL must be 0 on SNB. When it's not zero, the GTT tracking doesn't work properly. Therefore, removing this setting would introduce a bug.
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || NAK

Reasoning:
The patch removes the use of macros for accessing specific registers in the adl_pci9111 driver. Instead, it directly accesses the registers using their addresses. This change improves code readability and maintainability.

The patch also fixes a bug where the range setting for the analog input is not properly checked and set. The current implementation only checks the range setting after reading the register, which may result in incorrect range settings. The patch fixes this by checking the current range setting before setting the new range.

Overall, the patch improves the code quality and fixes a bug, so it should be accepted in Linux -stable releases.
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK

The patch introduces a section mismatch in the ie6xx_wdt_probe() function. The function calls ie6xx_wdt_debugfs_exit() as part of its error cleanup path, but the latter function is annotated as __devexit, indicating that it should only be called during device removal. Removing the __devexit annotation from ie6xx_wdt_debugfs_exit() will cause a section mismatch, which can lead to undefined behavior or crashes.

Therefore, this patch should not be accepted in Linux -stable releases.
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK

The patch adds missing "break" statements in a switch statement. This is a bug fix that prevents fall-through cases in the switch statement. It is a safe and necessary change to ensure correct behavior. Therefore, the patch should be accepted in Linux -stable releases.
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || NAK

Explanation: The patch modifies the initialization of BBP_R103 in the rt2800 driver. However, the patch does not provide any justification or explanation for the change. Without proper justification, it is difficult to determine whether the change is necessary or beneficial. Therefore, it is not recommended to accept this patch in Linux -stable releases.
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || NAK

Reasoning:
The patch removes the platform data for SPI bus clocks in the ARM Samsung architecture. It suggests that the SPI driver should get the bus clock using the generic clock connection ID registered via clkdev. However, the patch does not provide any justification or explanation for this change.

Without further information, it is difficult to determine the impact of this change and whether it is necessary or beneficial. It is important to consider the potential consequences and implications of removing the platform data for SPI bus clocks.

Therefore, I would not recommend accepting this patch in Linux -stable releases without more information and justification.
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK

Reasoning: The patch adds a new netdev op to allow/prevent a VF from querying an RSS info. It also limits the new feature support to 82599 and x540 devices only, with support for other devices to be added later. The patch modifies the ixgbe_configure_virtualization function to enable/disable the RSS query feature for each VF. It also adds a new netdev op function ixgbe_ndo_set_vf_rss_query_en to handle the setting of the RSS query feature for a VF.

Based on the provided information, it seems that the patch is adding a useful feature to the ixgbe driver. It allows users to control whether a specific VF can query its RSS Indirection Table and RSS Hash Key. The limitation to 82599 and x540 devices is reasonable, as support for other devices will be added later.

Therefore, I would recommend accepting this patch in Linux -stable releases (ACK).
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK

Explanation: The patch removes the calls to `snd_soc_add_controls`, `snd_soc_dapm_new_controls`, and `snd_soc_dapm_add_routes` functions and replaces them with direct assignment of control and DAPM widget arrays in the `soc_codec_dev_wm8776` structure. This change converts the control and DAPM initialization from function calls to static assignments.

While this change may simplify the code, it also removes the flexibility of dynamically adding controls and routes at runtime. This can be problematic if there is a need to modify or extend the controls and routes in the future.

Therefore, it is not recommended to accept this patch in Linux -stable releases.
false || NAK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK

Reasoning: The patch removes the hfi1_query_qp function from the staging/rdma/hfi1/qp.c file. However, the function is still being referenced in other parts of the code, such as drivers/staging/rdma/hfi1/verbs.c and drivers/staging/rdma/hfi1/qp.h. Removing the function without updating the references will result in compilation errors. Therefore, this patch should not be accepted in Linux -stable releases.
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || NAK
false || NAK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK

The patch adds stub functions for v_sys, refclk, and unipro resource management in the greybus driver. However, these functions are not implemented and simply return 0. This means that the functionality for managing these resources is not actually implemented, which could lead to issues or unexpected behavior. Therefore, it is not suitable for inclusion in Linux -stable releases.
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || NAK
false || ACK
false || NAK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
false || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK

Reasoning: The patch modifies the condition for considering double acknowledged interrupts in snd_pcm_update_hw_ptr0. The current condition checks if the time from the last update time (hdelta) is over half a buffer time. The patch modifies this condition to add 1 to the half buffer time. The reasoning behind this change is to account for the inaccuracy of jiffies, which is used to calculate hdelta.

However, the patch does not provide sufficient justification for why adding 1 to the half buffer time is the correct adjustment to account for jiffies inaccuracy. It is important to have a clear understanding of the underlying issue and the impact of the proposed change. Without this information, it is difficult to determine if the patch is a valid and safe fix.

Therefore, I would not recommend accepting this patch in Linux -stable releases without further clarification and justification.
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK

The patch proposes to remove the limits for the amount of system-wide message queues. However, the current limits were added for a reason, and removing them completely can lead to resource exhaustion and potential denial of service attacks. The patch does not provide a suitable alternative solution to address the concerns raised by the limits.

It would be more appropriate to consider adjusting the limits to a higher value that can accommodate the reported use cases without compromising system stability and security.
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK

Reasoning:
The patch removes redundant checks for platform resources in multiple drivers. The devm_ioremap_resource function already performs sanity checks on the given resource, so there is no need to duplicate these checks in the driver code.

The patch has been reviewed and Acked-by two maintainers, indicating that it has been reviewed and approved by them.

Therefore, the patch should be accepted in Linux -stable releases.
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || NAK

Reasoning: The patch fixes a bug where the number of transmitted bytes was not updated correctly when multiple CAN messages were transmitted in one 'bunch'. However, the patch also introduces a call to "c_can_object_get" without any explanation or justification. Without further information, it is not clear if this call is necessary or if it may introduce other issues. Therefore, it is recommended to further investigate and clarify the purpose and impact of the added code before accepting the patch.
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK

Reasoning: The patch fixes a potential use-after-free bug in ircomm_param_request by moving the debugging printk inside the lock. The patch seems to address a valid issue and the fix is straightforward. Therefore, it is recommended to accept this patch in Linux -stable releases.
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK

Explanation: The patch is fixing a warning related to buffer overflow in the sparc architecture. However, the patch is modifying the declaration of `empty_zero_page` from a single unsigned long to an array of unsigned longs. This change is not aligned with the declaration of `empty_zero_page` in other architectures. Therefore, this patch may introduce compatibility issues and should not be accepted in Linux -stable releases.
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || NAK
true || NAK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
true || ACK
